<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0066)http://www.learncpp.com/cpp-tutorial/57-for-statements/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>5.7 &#8212; For statements &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 5.7 &#8212; For statements Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='5.6 &#8212; Do while statements' href='../56-do-while-statements/default.htm' />
<link rel='next' title='5.8 &#8212; Break and continue' href='../58-break-and-continue/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-1i' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-80 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../56-do-while-statements/default.htm" rel="prev">5.6 &#8212; Do while statements</a> &nbsp;</div><div class="newer">&nbsp; <a href="../58-break-and-continue/default.htm" rel="next">5.8 &#8212; Break and continue</a> &raquo;</div></div>
<div class="post-80 post type-post status-publish format-standard hentry category-cpp-programming category-cpp-tutorial category-general-programming" id="post-80">


<div class="post-headline">		<h1>5.7 &#8212; For statements</h1>
		</div>
<div class="post-byline">By Alex, on June 25th, 2007</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>By far, the most utilized looping statement in C++ is the <em>for statement</em>.  The for statement is ideal when we know exactly how many times we need to iterate, because it lets us easily declare, initialize, and change the value of loop variables after each iteration.</p>
<p>The for statement looks pretty simple:</p>
<pre>
for (init-statement; expr1; expr2)
   statement;
</pre>
<p>The easiest way to think about for loops is convert them into equivalent while loops.  In older versions of C++, the above for loop was exactly equivalent to:</p>
<pre>
// older compilers
init-statement;
while (expr1)
{
    statement;
    expr2;
}
</pre>
<p>However, in newer compilers, variables declared during the init-statement are now considered to be scoped inside the while block rather than outside of it.  This is known as loop scope.  Variables with <strong>loop scope</strong> exist only within the loop, and are not accessible outside of it.  Thus, in newer compilers, the above for loop is effectively equivalent to the following while statement:</p>
<pre>
// newer compilers
{
    init-statement;
    while (expr1)
    {
        statement;
        expr2;
    }
} // variables declared in init-statement go out of scope here
</pre>
<p>A <em>for statement</em> is evaluated in 3 parts:</p>
<p>1) Init-statement is evaluated.  Typically, the init-statement consists of variable declarations and assignments.  This statement is only evaluated once, when the loop is first executed.</p>
<p>2) The expression expr1 is evaluated.  If expr1 is false, the loop terminates immediately.  If expr1 is true, the statement is executed.</p>
<p>3) After the statement is executed, the expression expr2 is evaluated.  Typically, this expression consists of incremented/decrementing the variables declared in init-statement.  After expr2 has been evaluated, the loop returns to step 2.</p>
<p>Let&#8217;s take a look at an example of a for loop:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
for (int iii=0; iii &lt; 10; iii++)
    cout &lt;&lt; iii &lt;&lt; &quot; &quot;;
</pre>
<p>What does this do?  Although this looks somewhat confusing, let&#8217;s take it piece by piece.</p>
<p>First, we declare a loop variable named iii, and assign it the value 0.</p>
<p>Second, the iii < 10 is evaluated, and since iii is 0, 0 < 10 evaluates to true.  Consequently, the statement executes, which prints 0.</p>
<p>Third, After the statement executes, iii++ is evaluated, which increments iii to 1.  Then the loop goes back to the second step.</p>
<p>1 < 10 is evaluates to true, so the loop iterates again.  The statement prints 1, and iii is incremented to 2.  2 < 10 evaluates to true, the statement prints 2, and iii is incremented to 3.  And so on.</p>
<p>Eventually iii is incremented to 10, 10 < 10 evaluates to false, and the loop exits.</p>
<p>Consequently, this program prints the result:</p>
<pre>
0 1 2 3 4 5 6 7 8 9
</pre>
<p>For loops can be hard for new programmers to read -- however, experienced programmers love them because they are a very compact way to do loops of this nature.  Let's uncompact the above for loop by converting it into it's while-statement equivalent:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
{
    int iii = 0;
    while (iii &lt; 10)
    {
        cout &lt;&lt; iii &lt;&lt; &quot; &quot;;
        iii++;
    }
}
</pre>
<p>That doesn't look so bad, does it?  Note that the outer braces are necessary here, because iii goes out of scope when the loop ends (in newer compilers).</p>
<p>Here is an example of a for loop affecting a variable declared outside the for loop:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// returns the value nBase ^ nExp
int Exponent(int nBase, int nExp)
{
    int nValue = 1;
    for (int iii=0; iii &lt; nExp; iii++)
        nValue *= nBase;

    return nValue;
}
</pre>
<p>This function returns the value nBase^nExp (nBase to the nExp power).</p>
<p>This is a straightforward incrementing for loop, with iii looping from 0 up to (but excluding) nExp.</p>
<p>If nExp is 0, the for loop will execute 0 times, and the function will return 1.<br />
If nExp is 1, the for loop will execute 1 time, and the function will return 1 * nBase.<br />
If nExp is 2, the for loop will execute 2 times, and the function will return 1 * nBase * nBase.</p>
<p>Although most for loops increment the loop variable by 1, we can decrement it as well:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
for (int iii = 9; iii &gt;= 0; iii--)
    cout &lt;&lt; iii &lt;&lt; &quot; &quot;;
</pre>
<p>This prints the result:</p>
<pre>
9 8 7 6 5 4 3 2 1 0
</pre>
<p>Alternately, we can change the value of our loop variable by more than 1 with each iteration:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
for (int iii = 9; iii &gt;= 0; iii -= 2)
    cout &lt;&lt; iii &lt;&lt; &quot; &quot;;
</pre>
<p>This prints the result:</p>
<pre>
9 7 5 3 1
</pre>
<p><strong>Off-by-one errors</strong></p>
<p>One of the biggest problems that new programmers have with for loops is off-by-one errors.  Off-by-one errors occur when the loop iterates one too many or one too few times.  This generally happens because the wrong relational operator is used in expr1 (eg. > instead of >=).  These errors can be hard to track down because the compiler will not complain about them -- the program will run fine, but it will produce the wrong result.</p>
<p>When writing for loops, remember that the loop will execute as long as expr1 is true.  Generally it is a good idea to test your loops using known values to make sure that they work as expected.  If your loop produces the right result when it iterates 0, 1, and 2 times, it will probably work for all number of iterations.</p>
<p><strong>Omitted expressions</strong></p>
<p>It is possible to write for loops that omit any or all of the expressions.  For example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int iii=0;
for ( ; iii &lt; 10; )
{
    cout &lt;&lt; iii &lt;&lt; &quot; &quot;;
    iii++;
}
</pre>
<p>This for loop produces the result:</p>
<pre>
0 1 2 3 4 5 6 7 8 9
</pre>
<p>Rather than having the for loop do the initialization and incrementing, we've done it manually.  We have done so purely for academic purposes in this example, but there are cases where not declaring a loop variable (because you already have one) or incrementing it (because you're incrementing it some other way) are desired.</p>
<p>Although you do not see it very often, it is worth noting that the following example produces an infinite loop:</p>
<pre>
for (;;)
    statement;
</pre>
<p>The above example is equivalent to:</p>
<pre>
while (true)
    statement;
</pre>
<p><strong>Null statements</strong></p>
<p>It is also possible to omit the statement part of a for loop.  This is called a <strong>null statement</strong>, and it is declared by using a single semicolon.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
for (int iii=0; iii &lt; 10; iii++)
    ;
</pre>
<p>This loop increments iii using the ++ operator 10 times.  When the statement is executed, the null statement evaluates to nothing, and consequently, doesn't do anything.  For readability purposes, the semicolon of a null statement is typically placed on it's own line.  This indicates that the use of a null statment was intentional, and makes it harder to overlook the use of the null statement.</p>
<p>Null statements can actually be used anywhere a regular statement can (though they typically aren't, since they serve no purpose other than as a do-nothing placeholder).  Because of this, it is easy to make the following mistake:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
if (nValue == 0);
    nValue = 1;
</pre>
<p>The programmer's intent was to assign nValue the value of 1 only if nValue had the value 0.  However, due to the misplaced semicolon after the if statement, this actually executes as:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
if (nValue == 0)
    ;
nValue = 1;
</pre>
<p>Consequently, nValue is set to 1 regardless of it's previous value!</p>
<p><strong>Multiple declarations</strong></p>
<p>Although for loops typically iterate over only one variable, sometimes for loops need to work with multiple variables.  When this happens, the programmer can make use of the comma operator in order to initialize or change the value of multiple variables:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
    for (int iii=0, jjj=9; iii &lt; 10; iii++, jjj--)
        cout &lt;&lt; iii &lt;&lt; &quot; &quot; &lt;&lt; jjj &lt;&lt; endl;
</pre>
<p>This loop initializes two variable: iii to 0, and jjj to 9.  It iterates iii over the range 0 to 9, and each iteration iii is incremented and jjj is decremented.</p>
<p>This program produces the result:</p>
<pre>
0 9
1 8
2 7
3 6
4 5
5 4
6 3
7 2
8 1
9 0
</pre>
<p>This is the only place in C++ where the comma operator typically gets used.</p>
<p><strong>Conclusion</strong></p>
<p>For loops are the most commonly used loop in the C++ language.  Even though it's syntax is typically a bit confusing to new programmers, you will see for loops so often that you will understand them in no time at all!</p>
<p><strong>Quiz</strong></p>
<p>1) Write a for loop that prints every other number from 0 to 20.</p>
<p>2) Write a function named SumTo() that takes an integer parameter named nValue, and returns the sum of all the numbers from 1 to nValue.</p>
<p>For example, SumTo(5) should return 15, which is 1 + 2 + 3 + 4 + 5.</p>
<p>Hint: Use a non-loop variable to accumulate the sum as you iterate from 1 to nValue, much like the Exponent() example above uses nValue to accumulate the return value each iteration.</p>
<p>3) What's wrong with the following for loop?</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// Print all numbers from 9 to 0
for (unsigned int nCount = 9; nCount &gt;= 0; nCount--)
    cout &lt;&lt; nCount &lt;&lt; &quot; &quot;;
</pre>
<p><strong>Quiz solutions</strong></p>
<p>1) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id1667339328'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id1667339328" style="display:none">
<pre class="brush: cpp; title: ; notranslate" title="">
for (int iii=0; iii &lt;= 20; iii += 2)
    cout &lt;&lt; iii &lt;&lt; endl;
</pre>
</div>
<p>2) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id1606515612'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id1606515612" style="display:none">
<pre class="brush: cpp; title: ; notranslate" title="">
int SumTo(int nSumTo)
{
    int nSum = 0;
    for (int iii=1; iii &lt;= nSumTo; iii++)
        nSum += iii;

    return nSum;
}
</pre>
</div>
<p>3) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id727917150'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id727917150" style="display:none">
This for loop executes as long as nCount >= 0.  In other words, it runs until nCount is negative.  However, because nCount is unsigned, nCount can never go negative.  Consequently, this for loop will run for-ever!  Generally, it's a good idea to avoid looping on unsigned variables unless necessary.
</div>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../58-break-and-continue/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 5.8 -- Break and continue</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter5" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../56-do-while-statements/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 5.6 -- Do while statements</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-programming/default.htm" title="View all posts in C++ Programming" rel="category tag">C++ Programming</a>, <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>, <a href="../../category/general-programming/default.htm" title="View all posts in General Programming" rel="category tag">General Programming</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../56-do-while-statements/default.htm" rel="prev">5.6 &#8212; Do while statements</a> &nbsp;</div><div class="newer">&nbsp; <a href="../58-break-and-continue/default.htm" rel="next">5.8 &#8212; Break and continue</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">40 comments to 5.7 &#8212; For statements</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-2496">
		<div id="div-comment-2496" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ae9908f9938bcd19cf0be6e8da33d70f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Niall the don</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-2496">
		November 6, 2007 at 11:58 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hello<br />
I think in your second solution nValue should be nSumTo</p>
<p>[Yup!  Thanks for noticing the mistake. -Alex ]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-9526">
		<div id="div-comment-9526" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/425bfa0bcc15320fdbec01e8497a86a6@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">John</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-9526">
		March 13, 2008 at 8:08 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi;</p>
<p>Can you explain quiz example.? I don&#8217;t understand the purpose of &#8220;nSum += iii;&#8221; statement. Particulary nSum +=.<br />
What it will do exactley.<br />
Thanks</p>
<p>int SumTo(int nSumTo)<br />
{<br />
    int nSum = 0;<br />
    for (int iii=1; iii</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-9542">
		<div id="div-comment-9542" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-9542">
		March 13, 2008 at 1:09 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
nSum += iii
</pre>
<p>is just a shortcut for writing:</p>
<pre>
nSum = nSum + iii;
</pre>
<p>In other words, increase nSum by iii.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-3 clearfix" id="comment-9697">
		<div id="div-comment-9697" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/425bfa0bcc15320fdbec01e8497a86a6@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jamal</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-9697">
		March 16, 2008 at 12:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Thanks a lot for your help.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-9888">
		<div id="div-comment-9888" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/701afe119c7d610bc4b6cc4e672dc8fe@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">abhishek raj</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-9888">
		March 17, 2008 at 3:55 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>hey !!!!!!!!<br />
Thanx a lot&#8230;<br />
I read particularly this page and found it too diverse n interesting&#8230;<br />
u people should also try this once.</p>
<p>keep enjoying,&#8230;&#8230;..</p>
		</div>
</li>
		<li class="pingback odd alt thread-odd thread-alt depth-1 clearfix" id="comment-13469">
		<div id="div-comment-13469" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../56-do-while-statements/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 5.6 &#8212; Do while statements</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-13469">
		April 28, 2008 at 8:48 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; Six language-independent ways to write better code | Home | 5.7 &#8212; For statements &raquo;     Monday, June 25th, 2007 at 4:54 [...]</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-15210">
		<div id="div-comment-15210" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/6fb4a7b606d673e947991be01eac13c1@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Daniel</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-15210">
		May 9, 2008 at 12:57 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<pre>for (int iii=0; iii &lt; 10; jjj++)
    ;  </pre>
<p>Shouldn&#8217;t that be this.</p>
<pre>for (int iii=0; iii &lt; 10; iii++, jjj++)
    ;  </pre>
<p>Great tutorials by the way.</p>
<p>[ I changed the example slightly because it was incorrect, as you noticed.  Thanks! -Alex ]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-22831">
		<div id="div-comment-22831" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9180f0de2fd5b6faae8856916af71fc0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">blas januar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-22831">
		August 5, 2008 at 3:22 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>nice one poe. . . sana magbigay kapa ng mas maraming example pra mapadali ung assign q. . hhahaha sayang kasi para d2 nalang aq naghanap. . . but tnx nadin poe.. .</p>
		</div>
</li>
		<li class="pingback even thread-even depth-1 clearfix" id="comment-30006">
		<div id="div-comment-30006" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../58-break-and-continue/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 5.8 &#8212; Break and continue</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-30006">
		October 14, 2008 at 6:41 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; 5.7 &#8212; For statements | Home | 6.1 &#8212; Arrays (Part I) &raquo;     Tuesday, June 26th, 2007 at 4:22 [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-57129">
		<div id="div-comment-57129" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ac2f9d56fb09fa514cf3d1e5d62104ac@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Intelus</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-57129">
		April 10, 2009 at 8:07 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>I think you should mention the trouble unsigned ints can cause in loops.<br />
Examine these two for loops:</p>
<p>For loop #1:</p>
<pre>
    for (int iii = 9; iii &gt;= 0; iii--)
    cout &lt;&lt; iii &lt;&lt; &quot; &quot;;
<!--formatted--></pre>
<p>For loop #2:</p>
<pre>
    for (unsigned int iii = 9; iii &gt;= 0; iii--)
    cout &lt;&lt; iii &lt;&lt; &quot; &quot;;
<!--formatted--></pre>
<p>The first one is one of your examples (prints &#8220;9 8 7 6 5 4 3 2 1 0&#8243;) and uses a signed int.</p>
<p>The second one, however, uses an unsigned int and produces an infinite loop (Oh noes!). The reason is pretty much obvious &#8211; after iii hits 0, decrementing it further results in getting either 65535 (2B int) or 4294967295 (4B int). In other words, iii is always great than or equal to 0.</p>
<p>By the way, you might want to correct a typo (it&#8217;s &#8211;&gt; its) in:<br />
&#8220;Let’s uncompact the above for loop by converting it into it’s while-statement equivalent:&#8221;</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-59756">
		<div id="div-comment-59756" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-59756">
		May 1, 2009 at 9:19 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>This is a great point &#8212; I see this question all the time on quizzes and in programming interviews.  I turned it into a quiz question.  Thanks for the reminder!</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-60072">
		<div id="div-comment-60072" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/10dc9f8052d5a4b080c620a4467e54f7@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">csvan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-60072">
		May 5, 2009 at 12:13 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi Alex,</p>
<p>I am nowhere near you as far as experience is concerned, but I wonder why you use a postfix ++ within loop blocks? Isnt this less efficient then using it as a prefix, since the postfix (as far as I know) creates a temporary variable for the purpose of evaluation? Besides, a postfix adds nothing to the functionality here (I think!), if the incrementation is evaluated after the loop condition but before the statements within the loop scope itself (if it works this way).</p>
<p>Did I miss something?</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-63764">
		<div id="div-comment-63764" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b7049051adbf6ef4625b968315004896@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Quinn</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63764">
		July 5, 2009 at 8:33 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>IIRC, there&#8217;s no functional difference between iii++ and ++iii in the second expression with for loops, but standard convention has always been iii++. Maybe as some sort of homage to the c++ language. :) If you prefer it the other way, I wouldn&#8217;t really see any reason not to do it that way, with the small exception of having more to work with in the second expression, such as having&#8230;</p>
<pre>for(int iii = 0; i &lt;= 20; iii = iii++ * 2)</pre>
<p>would be different than&#8230;</p>
<pre>for(int iii = 0, i &lt;= 20; iii = ++iii * 2)</pre>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-61526">
		<div id="div-comment-61526" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/668c07e6a18b1b9e31a61e6b79849c1e@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">mike</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-61526">
		May 26, 2009 at 5:25 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hey Alex,</p>
<p> Thanks for the great tutorial on C++. I have a question about the example in the multiple declarations section. Why is it not necessary to also put a restriction on jjj (i.e. jjj &gt; 0)?</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-63765">
		<div id="div-comment-63765" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b7049051adbf6ef4625b968315004896@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Quinn</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63765">
		July 5, 2009 at 8:44 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>There&#8217;s no real need to have a restriction on jjj to have the loop produce the same, controlled sequence. The variable jjj is completely under control within the for loop, so the programmer will generally know what jjj is going to evaluate to by looking at it. It may be necessary that for loops check different conditions, but in that case you shouldn&#8217;t really use the comma (,) operator, and instead use logical AND (&amp;&amp;) or logical OR (||).</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-63793">
		<div id="div-comment-63793" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/67f58c93974d3fe8876c4d3534f1837f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">john</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63793">
		July 5, 2009 at 10:00 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>I think question 3 is incorrect. you say </p>
<pre>
// Print all numbers from 9 to 0
for (unsigned int nCount = 9; nCount &gt;= 0; nCount--)
    cout &lt;&lt; nCount &lt;&lt; &quot; &quot;;
<!--formatted--></pre>
<p>&#8220;This for loop executes as long as nCount &gt;= 0. In other words, it runs until nCount is negative.&#8221;</p>
<p>If that&#8217;s the case then your suggesting that 0 is a negative number. It&#8217;s not positive or negative.</p>
<p>You also state back when your introducing unsigned variables:</p>
<p>Size/Type========                Range<br />
1 Byte signed=====             -128 to 127<br />
1 Byte unsigned====      0 to 255</p>
<p>So i don&#8217;t get how the program wouldn&#8217;t stop once it hit 0 since it is a unsigned variable?</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-64570">
		<div id="div-comment-64570" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/30cbb622a03025918fae6e89edd664d8@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Realth</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-64570">
		July 18, 2009 at 7:04 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>0 is technically negative ? I&#8217;m not sure.</p>
<p>“This for loop executes as long as nCount &gt;= 0. In other words, it runs until nCount is negative.”</p>
<p>Another way of saying this is the loop will stop when nCount &lt; 0.<br />
However, nCount is unsigned therefore cannot become less than 0. I&#8217;m not sure if it can become 0. Regardless, the loop will not stop because nCount cannot ever be less than 0.</p>
<p>Hope this helps.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-65785">
		<div id="div-comment-65785" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c2cae1925c048efee92d6a73b57665aa@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.yahoo.com/default.htm' rel='external nofollow' class='url'>reyson</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65785">
		August 6, 2009 at 8:04 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>gagagahahahhaha<br />
ur such a fucker</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-67631">
		<div id="div-comment-67631" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/588a129889abf61e2e2dafdfc2bdefc5@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">tnemmoC</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-67631">
		September 2, 2009 at 5:23 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Okay, suppose I have to write a function that does the same as the one in question nº3. Since it&#8217;s a triangular number thing, would it be better to just write the expression &#8220;x = (x * (x++)) / 2&#8243; instead of a loop?</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-69203">
		<div id="div-comment-69203" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7bdeaf72f066cf00cb8e8c8922a36890@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Pixy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-69203">
		September 27, 2009 at 8:03 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi there,<br />
Thanks for this tutorial, i missed my last class which was on loops and didn&#8217;t know ANYTHING, until your site, I actually did the quiz without cheating and got the right answers. Can you help me with this problem?</p>
<p>for (int x = 12; x&gt;= 7;)<br />
  printf(&#8220;%d\n&#8221;, x);   &#8230;..What gets printed out? Is it 12, because there is no update to be done?</p>
<p>thanks</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-76953">
		<div id="div-comment-76953" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/16744e79cbe3bb25770925c88cb4c27b@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Gangadhar Lahane</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-76953">
		January 22, 2010 at 8:53 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
     Hey Alex...
     Thanks a lot for your tutorials. I have  problem about the multiple declaration of variables within the for loop...
     Explain it with on simple example plz.
</pre>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-78055">
		<div id="div-comment-78055" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/5babdbd7545d1a2803072c4856ae2201@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ryan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78055">
		February 8, 2010 at 1:56 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>the output is</p>
<p>                                 *<br />
                               *   *<br />
                             *       *<br />
                           *  *  *  *  *</p>
<p>what is the input? can you give me&#8230;.</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-91222">
		<div id="div-comment-91222" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7a5c144e63d9bcebbf2758bd9fa2c8a4@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Addis</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-91222">
		September 1, 2010 at 5:31 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>{<br />
  for(i=1; i&lt;=</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-83114">
		<div id="div-comment-83114" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/65294ceb692db894a27486f1cbf728ba@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">hsh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-83114">
		April 17, 2010 at 11:39 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi to all;<br />
i have a question:<br />
when we use two for loop without{},how does it work?</p>
<p>for example:</p>
<p>for(int i=1;i&lt;=3;i++)<br />
    for(j=1;j&lt;=3;j++)</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-94281">
		<div id="div-comment-94281" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8b7cd5dd8a87eca9dc992e9e669bb11b@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">smitha</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-94281">
		October 19, 2010 at 7:40 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>j runs from 1 to 3  and the outer loop runs 3 times</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-83324">
		<div id="div-comment-83324" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/fea008f13f10619704e7bd6fba98e4fe@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">dhysk</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-83324">
		April 21, 2010 at 9:20 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Ok, I&#8217;m having an issue with this Quiz question #2.  Although I changed the requirments so that I could do a sum from one user defined int to another user defined int.  I also wanted to practice making using functions.</p>
<p>In Main.cpp  The nReadNumber() was from getting tired of always making user input commands for ints ;).  Lazzy I know.</p>
<pre>
using namespace std;
int main()
{
    int x = SumFromTo( nReadNumber(), nReadNumber());
    cout &lt;&lt; &quot;the sum = &quot; &lt;&lt; x &lt;&lt; endl;
    return 0;
}
<!--formatted--></pre>
<p>In file io.cpp</p>
<pre>
int nReadNumber()
{
    cout &lt;&lt; &quot;Enter a whole number: &quot;;
    int x;
    cin &gt;&gt; x;
    return x;
}
<!--formatted--></pre>
<p>In file Calculate.cpp</p>
<pre>
int SumFromTo(int nx, int ny)
    {
        cout &lt;&lt; nx &lt;&lt; &quot; &quot; &lt;&lt; ny;
        int nValue = 0;
        for ( ;nx &lt;= ny; nx++)
            nValue = nValue + nx;
        return nValue;
    }
<!--formatted--></pre>
<p>Ok I was getting out 0 every time; however I found that for some reason nx and ny inputs were getting reversed there for inputing the lower number first then the higher number nx will always be &gt; ny.  When I don&#8217;t use the nReadNumber function and just input the numbers it works fine.  </p>
<p>By reversed I mean the first number I put in is ny and the second number is nx.  Is this normal behaviour for functions to evaluate the inside from right to left?</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-85861">
		<div id="div-comment-85861" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/85d4823c5ec9da01eac35b0158470d71@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">derelove</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-85861">
		June 2, 2010 at 11:36 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>i am new to this website ,it is very good,keep it doing. how can i ask questions?</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-88149">
		<div id="div-comment-88149" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d185e7ce2a69b9037e474ec2acef7161@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Justin</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-88149">
		July 8, 2010 at 9:59 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>I have a question about the second solution to the quiz:</p>
<p>int SumTo(int nSumTo)<br />
{<br />
    int nSum = 0;<br />
    for (int iii=1; iii &lt;= nSumTo; iii++)<br />
        nSum += iii;</p>
<p>    return nSum;<br />
}</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<br />
This looks like an infinite loop to me.<br />
If I were to declare int nSum = 3 then iii would be less than nSum. Therefore the value is true and you would increment iii. Then you add iii to nSum. So then nSum is now 5 and you will be testing to see if iii which now equals 2 is less than or equal to nSum. 2 = 1, the loop will increment iii and add it to nSum therefore testing to see if it is &lt;=. iii will always be less than or equal to since you are incrementing it before you add it to nSum. I think the total sum should be a different variable and that you should not increment iii until after you have added it into the total sum. Here is what I produced and although it may not be small in size it works. </p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p>#include &quot;stdafx.h&quot;<br />
#include<br />
using namespace std;</p>
<p>void SumTo()<br />
{<br />
	int nValue;<br />
	cout &lt;&gt; nValue;<br />
	int nSum = 0;</p>
<p>	for (int iii = 1; iii &lt;= nValue;)<br />
	{<br />
		nSum += iii;<br />
		iii++;<br />
	}</p>
<p>	cout &lt;&lt; &quot;The total of all numbers from 1 to &quot; &lt;&lt; nValue &lt;&lt; &quot; = &quot; &lt;&lt; nSum &lt;&lt; endl;</p>
<p>}</p>
<p>int main()<br />
{<br />
	SumTo();<br />
}</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
 I just started taking these lessons three days ago and have already gotten here. I may be wrong but it is puzzling me. If you can explain this to me it would be greatly appreciated.</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-88234">
		<div id="div-comment-88234" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/27b9aaca2520d605651e0314c557f662@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../mike.com/default.htm' rel='external nofollow' class='url'>mike</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-88234">
		July 10, 2010 at 6:19 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>The for loop compares iii to nSumTo (not nSum), which was passed into the function and never gets changed. So the loop will eventually end.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-deimantas odd alt thread-even depth-1 clearfix" id="comment-88387">
		<div id="div-comment-88387" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3f1f4c2410a5e642fc111623003c2fe8@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Deimantas</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-88387">
		July 13, 2010 at 7:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Doesn&#8217;t the first solution need an identifier?<br />
int(iii);<br />
It didn&#8217;t compile until i added it.</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-94615">
		<div id="div-comment-94615" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/720c9f51032e5d9a71aeb8ae44f2ca6b@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../none/default.htm' rel='external nofollow' class='url'>Dr. HaXX</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-94615">
		October 23, 2010 at 5:37 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Well, I have written another function wich handles negative exponents, e.g. 2^-3</p>
<p>The only thing I changed about the original function &#8220;Exponent&#8221; is change the name to &#8220;PositiveExponent&#8221;.<br />
Here it is, along with a little bit more code:</p>
<p>The function self:</p>
<pre> double NegativeExponent(int nBase, int nExp)
{
	double dValue = 1;
	for (int iiii=0; iiii &gt; nExp; iiii--)
		{
			dValue *= (1.0 / nBase);  // If I put in 1 instead of 1.0, it will do integer division!
                                                                // And that is not what we want, right?
		}

	return dValue;
}<!--formatted--></pre>
<p>The program (which asks for two integer values from the user, and then does the nBase ^ nExp calculation on them):</p>
<pre> int main()

cout &lt;&lt; &quot;Enter two integer values, one for int nBase, one for int nExp&quot; &lt;&lt; endl;
cout &lt;&lt; &quot;nBase = &quot;;
int nBase = 0;
cin &gt;&gt; nBase;

cout &lt;&lt; endl &lt;&lt; &quot;nExp = &quot;;
int nExp = 0;
cin &gt;&gt; nExp;
cout &lt;&lt; endl;

	if (nExp &gt;= 0)
	{
		cout &lt;&lt; &quot;nBase ^ nExp = &quot; &lt;&lt; PositiveExponent(nBase, nExp);
		cout &lt;&lt; endl;
	}
	else
	{
		cout &lt;&lt; &quot;nBase ^ nExp = &quot; &lt;&lt; NegativeExponent(nBase, nExp);
		cout &lt;&lt; endl;
	}

cout &lt;&lt; &quot;If nBase ^ nExp = 0, then you have exceeded a very big or very small number ;) &quot;;

// This is some default code which I always have at the end of my main function.
// The purpose of it is to wait for the user to press enter to quit the program.
// If you need or want to use this piece of code, uncomment it.
// Else, just leave it or delete it.

/*
	cout &lt;&lt; endl;
	cout &lt;&lt; &quot;Press enter to quit&quot; &lt;&lt; endl;
	cin.clear();
	cin.ignore(255, &#39;n&#39;);
	cin.get();
	return 0;
*/<!--formatted--></pre>
<p>That&#8217;s it, just wanted to contribute something back ;)<br />
Have fun coding!</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-94616">
		<div id="div-comment-94616" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/720c9f51032e5d9a71aeb8ae44f2ca6b@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../none/default.htm' rel='external nofollow' class='url'>Dr. HaXX</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-94616">
		October 23, 2010 at 5:43 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Oops, forgot two small things:</p>
<p>The beginning of the main function should begin with:</p>
<pre> int main()
{

// rest of code here</pre>
<p>And the last piece of code should be:</p>
<pre>/*
	cout &lt;&lt; endl;
	cout &lt;&lt; &quot;Press enter to quit&quot; &lt;&lt; endl;
	cin.clear();
	cin.ignore(255, &#39;n&#39;);
	cin.get();
*/

	return 0;
} <!--formatted--></pre>
<p>Just a little mistake which (I hope) your compiler will complain about. Not anymore ;)</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-buffpony even thread-even depth-1 clearfix" id="comment-95023">
		<div id="div-comment-95023" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/612745be1d5a6b8f1ac3dd5ac7118b18@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">buffpony</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95023">
		December 11, 2010 at 5:20 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>ok what i fail?<br />
#include<br />
using namespace std;<br />
int nValue;<br />
int looper;<br />
int SumTo(nValue)<br />
{<br />
	cin &gt;&gt; nValue<br />
		for(looper = 1; looper &lt;= nValue; looper++)<br />
		{<br />
			nValue+=looper;<br />
			return nValue;<br />
		}<br />
}<br />
void main()<br />
{<br />
	cout &lt;&lt; &quot;Type a number: &quot;;<br />
	SumTo(nValue);<br />
}</p>
		</div>
</li>
		<li class="comment byuser comment-author-wcoaster odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95102">
		<div id="div-comment-95102" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/632851e9dbf8c70f6a90a28267893ed5@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WCoaster</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95102">
		January 16, 2011 at 2:13 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>You are adding nValue twice. Once at the very beginning and once at the end.</p>
<p>Either use a different variable to accumulate the total or change:<br />
for(looper = 1; looper &lt;= nValue; looper++)<br />
to<br />
for(looper = 1; looper &lt; nValue; looper++)  </p>
<p>Either one should work.<br />
Should try and rework your code not to use global variable declaration.</p>
<p><code>int SumTo(int x)<br />
{	int y = 0;<br />
	for (x; x &gt; 0; x-=5)<br />
	{	y += x;<br />
		cout &lt;&lt; y &lt;&lt; endl;<br />
	}<br />
		return y;<br />
}<br />
int main()<br />
{	cout &lt;&lt; &quot; Enter a number: &quot;;<br />
	int value = 0;<br />
	cin &gt;&gt; value;<br />
	value = SumTo(value);<br />
	cout &lt;&lt; char(228) &lt;&lt; &quot; (1 to n) = &quot; &lt;&lt; value &lt;&lt; endl;<br />
	return 0;<br />
}</code></p>
		</div>
</li>
		<li class="comment byuser comment-author-moogie even thread-even depth-1 clearfix" id="comment-95160">
		<div id="div-comment-95160" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/16f9c07dceab1393fde1ff840219456d@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Moogie</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95160">
		February 7, 2011 at 8:45 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>It was a very small victory for me, but when doing Quiz #2 I came up with a different, but equally decent solution, all by my wittle self. :)</p>
<p><code><br />
int SumTo(int nVal)<br />
{<br />
	int nResult = 0;</p>
<p>	// For nVal iterations, nResult = nResult + nVal<br />
	// Then decrement nVal by 1 and loop<br />
	// So 0 + 5, then 5 + 4, then 9 + 3, etc...<br />
	for (; nVal &gt; 0; nVal--) // omitted expr1, don&#039;t need it!<br />
		nResult += nVal;</p>
<p>	return nResult;<br />
}</code></p>
<p>Felt so pleased with myself after seeing it worked! lol. I&#8217;m learning so much from this site, I can&#8217;t express my gratitude enough to you, Alex!</p>
		</div>
</li>
		<li class="comment byuser comment-author-moogie odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95161">
		<div id="div-comment-95161" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/16f9c07dceab1393fde1ff840219456d@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Moogie</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95161">
		February 7, 2011 at 8:47 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Damn formatting. I can&#8217;t edit it? :( Oh well.</p>
		</div>
</li>
		<li class="comment byuser comment-author-shishka even thread-even depth-1 clearfix" id="comment-95475">
		<div id="div-comment-95475" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2c6680db4d30ea63af2ffa6b43b0eb53@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Shishka</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95475">
		May 19, 2011 at 6:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>While looking at quiz #2 I noticed a pattern, and since I was bored I wrote the following.</p>
<pre>

#include &lt;iostream&gt;
#include &lt;iomanip&gt;

using namespace std;

int main()
{
    int nMax;
    cin &gt;&gt; nMax;
    long long nSum = (nMax*((nMax+1)/static_cast&lt;long double&gt;(2.0)));
    cout &lt;&lt; setprecision(20) &lt;&lt; nSum &lt;&lt; endl;
}
</pre>
<p>Which gives the same answer as your solution, but much more quickly with larger numbers.  It seems to be accurate with input up to at least 1,000,000,000.</p>
<p>I&#8217;m a regular mathematician!  :P</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars odd alt depth-2 clearfix" id="comment-95600">
		<div id="div-comment-95600" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95600">
		June 19, 2011 at 10:07 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>long long nSum :D<br />
Also &#8211; where did setprecision come from?</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-iod even thread-odd thread-alt depth-1 clearfix" id="comment-95641">
		<div id="div-comment-95641" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ab8bba4d6f09fcd2ef2b4c76ee8e9ade@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Iodream</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95641">
		June 27, 2011 at 8:02 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hello<br />
I&#8217;m a full beginner in C++ and got stuck at an exercise which looks pretty simple to my mind at first look,<br />
i have no idea why it doesn&#8217;t work.<br />
It just outputs the &#8220;1&#8243;.<br />
There are no compiler errors, juts a notification that i&#8217;m using an obsolete way of using getch().<br />
Perhaps i&#8217;m even completely wrong, i just need some help. </p>
<p><strong> Task: write all perfect numbers from 1 to 100. </strong></p>
<p>Code:</p>
<pre>
#include &quot;stdafx.h&quot;
#include &lt;iostream&gt;
#include &quot;conio.h&quot;

void WritePerfectNumbers()
{
	using namespace std;
	int nTotal=0; // helps to keep track of the divisible numbers
	cout &lt;&lt; &quot;1&quot;&lt;&lt; endl;
	for (int nCurrentNumber=2;nCurrentNumber&lt;100;nCurrentNumber++) // starting with 2
		{
			for (int iii=1;iii&lt;nCurrentNumber;iii++)
				if (nCurrentNumber % iii == 0)
					nTotal+=iii;
			if (nCurrentNumber == nTotal)
				{
					nTotal=0;
					cout &lt;&lt; nCurrentNumber &lt;&lt; endl;
				}
		}
}

int main()
{
	using namespace std;
	cout &lt;&lt; &quot;The folowing program prints all perfect numbers from 1 to 100.&quot; &lt;&lt; endl;
	getch();
	cout &lt;&lt; endl;
	WritePerfectNumbers();
	getch();
	return 0;
}
</pre>
<p>Thanks in advance for any help.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars odd alt depth-2 clearfix" id="comment-95752">
		<div id="div-comment-95752" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95752">
		July 19, 2011 at 3:17 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">Log in to Reply</a></span>		 
		</div>
		<p>First of all &#8211; only thing it should type is 6 and 28, because those are the only perfect numbers below 100, and 1 is not a perfect number.<br />
Also, I advise you to use debugging breakpoints to follow the process of your program and catch the bug at fault.</p>
		</div>
</li>
</ul>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f57-for-statements_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../56-do-while-statements/default.htm" rel="prev">5.6 &#8212; Do while statements</a> &nbsp;</div><div class="newer">&nbsp; <a href="../58-break-and-continue/default.htm" rel="next">5.8 &#8212; Break and continue</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'80'});
var load_cmc = function(){linktracker_init(3928254,80,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.513 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:38:19 -->
<!-- Compression = gzip -->