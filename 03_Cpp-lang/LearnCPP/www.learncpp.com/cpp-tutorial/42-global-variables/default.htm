<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0068)http://www.learncpp.com/cpp-tutorial/42-global-variables/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>4.2 &#8212; Global variables &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 4.2 &#8212; Global variables Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='4.1 &#8212; Blocks (compound statements) and local variables' href='../41-blocks-compound-statements-and-local-variables/default.htm' />
<link rel='next' title='4.3 &#8212; File scope and the static keyword' href='../43-file-scope-and-the-static-keyword/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-13' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-65 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../41-blocks-compound-statements-and-local-variables/default.htm" rel="prev">4.1 &#8212; Blocks (compound statements) and local variables</a> &nbsp;</div><div class="newer">&nbsp; <a href="../43-file-scope-and-the-static-keyword/default.htm" rel="next">4.3 &#8212; File scope and the static keyword</a> &raquo;</div></div>
<div class="post-65 post type-post status-publish format-standard hentry category-cpp-tutorial" id="post-65">


<div class="post-headline">		<h1>4.2 &#8212; Global variables</h1>
		</div>
<div class="post-byline">By Alex, on June 19th, 2007</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>In the last lesson, you learned that variables declared inside a block have block scope.  Block scope variables can only be accessed within the block in which they are declared (or a nested sub-block), and are destroyed when the block ends.</p>
<p>Variables declared outside of a block are called <strong>global variables</strong>.  Global variables have <strong>program scope</strong>, which means they can be accessed everywhere in the program, and they are only destroyed when the program ends.</p>
<p>Here is an example of declaring a global variable:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int g_nX; // global variable

int main()
{
    int nY; // local variable nY

    // global vars can be seen everywhere in program
    // so we can change their values here
    g_nX = 5;
} // nY is destroyed here
</pre>
<p>Because global variables have program scope, they can be used across multiple files.  In the section on <a href="../18-programs-with-multiple-files/default.htm">programs with multiple files</a>, you learned that in order to use a function declared in another file, you have to use a forward declaration, or a header file.</p>
<p>Similarly, in order to use a global variable that has been declared in another file, you have to use a forward declaration or a header file, along with the <strong>extern</strong> keyword.  Extern tells the compiler that you are not declaring a new variable, but instead referring to a variable declared elsewhere.</p>
<p>Here is an example of using a forward declaration style extern:</p>
<p>global.cpp:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// declaration of g_nValue
int g_nValue = 5;
</pre>
<p>main.cpp:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// extern tells the compiler this variable is declared elsewhere
extern int g_nValue;

int main()
{
    g_nValue = 7;
    return 0;
}
</pre>
<p>Here is an example of using a header file extern:</p>
<p>global.cpp:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// declaration of g_nValue
int g_nValue = 5;
</pre>
<p>global.h:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#ifndef GLOBAL_H // header guards
#define GLOBAL_H

// extern tells the compiler this variable is declared elsewhere
extern int g_nValue;

#endif
</pre>
<p>main.cpp:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &quot;global.h&quot;
int main()
{
    g_nValue = 7;
    return 0;
}
</pre>
<p>Generally speaking, if a global variable is going to be used in more than 2 files, it&#8217;s better to use the header file approach.  Some programmers place all of a programs global variables in a file called globals.cpp, and create a header file named globals.h to be included by other .cpp files that need to use them.</p>
<p>Local variables with the same name as a global variable hide the global variable inside that block.  However, the global scope operator (::) can be used to tell the compiler you mean the global version:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int nValue = 5;

int main()
{
    int nValue = 7; // hides the global nValue variable
    nValue++; // increments local nValue, not global nValue
    ::nValue--; // decrements global nValue, not local nValue
    return 0;
} // local nValue is destroyed
</pre>
<p>However, having local variables with the same name as global variables is usually a recipe for trouble, and should be avoided whenever possible.  Using Hungarian Notation, it is common to declare global variables with a &#8220;g_&#8221; prefix.  This is an easy way to differentiate global variable from local variables, and avoid variables being hidden due to naming collisions.</p>
<p>New programmers are often tempted to use lots of global variables, because they are easy to work with, especially when many functions are involved.  However, this is a very bad idea.  In fact, global variables should generally be avoided completely!</p>
<p><strong>Why global variables are evil</strong></p>
<p>Global variables should be avoided for several reasons, but the primary reason is because they increase your program&#8217;s complexity immensely.  For example, say you were examining a program and you wanted to know what a variable named g_nValue was used for.  Because g_nValue is a global, and globals can be used anywhere in the entire program, you&#8217;d have to examine every single line of every single file!  In a computer program with hundreds of files and millions of lines of code, you can imagine how long this would take!</p>
<p>Second, global variables are dangerous because their values can be changed by any function that is called, and there is no easy way for the programmer to know that this will happen.  Consider the following program:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// declare global variable
int g_nMode = 1;

void doSomething()
{
    g_nMode = 2;
}

int main()
{
    g_nMode = 1;

    doSomething();

    // Programmer expects g_nMode to be 1
    // But doSomething changed it to 2!

    if (g_nMode == 1)
        cout &lt;&lt; &quot;No threat detected.&quot; &lt;&lt; endl;
    else
        cout &lt;&lt; &quot;Launching nuclear missiles...&quot; &lt;&lt; endl;

    return 0;
}
</pre>
<p>Note that the programmer set g_nMode to 1, and then called doSomething().  Unless the programmer had explicit knowledge that doSomething() was going to change the value of g_nMode, he or she was probably not expecting doSomething() to change the value!  Consequently, the rest of main() doesn&#8217;t work like the programmer expects (and the world is obliterated).</p>
<p>Global variables make every function call potentially dangerous, and the programmer has no easy way of knowing which ones are dangerous and which ones aren&#8217;t!  Local variables are much safer because other functions can not affect them directly.  Consequently, global variables should not be used unless there is a very good reason!</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../43-file-scope-and-the-static-keyword/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 4.3 &#8212; File scope and the static keyword</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter4" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../41-blocks-compound-statements-and-local-variables/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 4.1 &#8212; Blocks (compound statements) and local variables</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../41-blocks-compound-statements-and-local-variables/default.htm" rel="prev">4.1 &#8212; Blocks (compound statements) and local variables</a> &nbsp;</div><div class="newer">&nbsp; <a href="../43-file-scope-and-the-static-keyword/default.htm" rel="next">4.3 &#8212; File scope and the static keyword</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">43 comments to 4.2 &#8212; Global variables</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-3506">
		<div id="div-comment-3506" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d0d89c73c959d302c86d6717ab0658a0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vivek Singh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-3506">
		November 27, 2007 at 4:15 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Thanks that was great!</p>
<p>I was facing problem with global variable declaration and using it into mutiple files.</p>
<p>The problem is fixed.</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-10485">
		<div id="div-comment-10485" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/96417e995428cb18582bd787273a0f54@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Sorin</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-10485">
		March 27, 2008 at 11:34 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>How do I know if I have a really good reason? Can you give us an example from your experience where you decided you should use a global variable, please?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-10500">
		<div id="div-comment-10500" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-10500">
		March 28, 2008 at 8:23 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>I honestly can&#8217;t think of the last time I used a global variable.</p>
<p>Typically, people use global variables for one of three reasons:<br />
1) Because they don&#8217;t understand C++ variable passing mechanics, or they&#8217;re being lazy.<br />
2) To hold data that needs to be used by the entire program (eg. configuration settings).<br />
3) To pass data between code that doesn&#8217;t have a caller/callee relationship (eg. multi-threaded programs)</p>
<p>Obviously #1 isn&#8217;t a good reason at all.  Once you get into C++ classes, there are better ways to do #2 (eg. static classes).  That pretty much leaves #3, and maybe a few other cases I&#8217;m not aware of.</p>
<p>Basically, the only time you should use a global variable is if there is no practical way to do what you want using local variables and variable passing mechanics.  In my opinion, use of globals should always be a last resort &#8212; so in a way, it&#8217;s a &#8220;you&#8217;ll know it when you run into it&#8221; situation, as there simply won&#8217;t be any other reasonable way to proceed.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-3 clearfix" id="comment-38823">
		<div id="div-comment-38823" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/29f0ae19085199eba3f5a76151415f2f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jamie</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-38823">
		January 23, 2009 at 1:37 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>I use only one global variable in my 1100 line program (simulating disease spread in a population), which is a random number generator from the GNU scientific library. Different functions need to be able to use a generator, and I don&#8217;t want to create a new one each time for two reasons:</p>
<p>a) The generator needs to be seeded from the system time. If it was local to a function, then I&#8217;d risk it being seeded by the same value each time. I need the independence throughout my program. I suppose I could declare it static, but why have 7 different RNG generators, when I would be better with just 1?<br />
b) It&#8217;s a random number generator. I <i>expect</i> it to change in between function calls, and don&#8217;t need or want consistency.</p>
<p>For these reasons, it has to be declared global.</p>
<p>Meanwhile, I have a whole pile of variables which will not change throughout the entire program, e.g. n (the size of the lattice of sites), or the birth/death/migration/infection rates, which are constants I set when I start the program. They&#8217;re currently all local variables, but I&#8217;ve considered making them global variables as it would make my program easier to understand, as in your reason (2).</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-13295">
		<div id="div-comment-13295" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/02c1c5ea8d78232b5c07affcb08c6984@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Stuart</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-13295">
		April 27, 2008 at 4:53 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>&#8220;Launching nuclear missiles&#8221;, LOL. Evil globals; don&#8217;t trust &#8216;em.</p>
<p>Anyway, I just wanted to say that these tutorials are really good. Thanks. ;D</p>
		</div>
</li>
		<li class="pingback odd alt thread-odd thread-alt depth-1 clearfix" id="comment-13457">
		<div id="div-comment-13457" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../41-blocks-compound-statements-and-local-variables/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 4.1 &#8212; Blocks (compound statements) and local variables</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-13457">
		April 28, 2008 at 8:41 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; 3.8 &#8212; Bitwise operators | Home | 4.2 &#8212; Global variables &raquo;     Monday, June 18th, 2007 at 10:06 [...]</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-31243">
		<div id="div-comment-31243" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/5c283afd8dca833b198e17f55da8836c@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Travis</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-31243">
		October 28, 2008 at 12:29 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>This really cleared up what I wanted to know about global variables.</p>
<p>I used them in a code for my C++ class, and was told never to use them by my professor.<br />
I asked him why, and his explanation made it seem (to me!) that they are a good option as far as the flexibility of the program goes.</p>
<p>No that I know I could accidentally blow up the world, I will avoid them ;)</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-33997">
		<div id="div-comment-33997" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ef81965c5af5d7b5e5767b6b85905e70@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">noob1337</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-33997">
		December 8, 2008 at 8:02 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex, you are my C++ Jesus. Thank you for spreading the almighty commandments of programming, I worship you for that.</p>
<p>Actually I had a question but I just figured it out :) Maybe I&#8217;ll have one for you later..</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-36905">
		<div id="div-comment-36905" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7e260ba6cae5d3e8cd9820eaac911511@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Alfreda</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-36905">
		January 9, 2009 at 5:28 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Is there really a function that launches nuclear missiles from the computer?</p>
<p>Now to code my new game:  &#8220;Pacman XTreme&#8221;</p>
<p>Lol just joking.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-78373">
		<div id="div-comment-78373" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2347789ad0d87e8278281022abb72547@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tom</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78373">
		February 15, 2010 at 8:52 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p><b>Is there really a function that launches nuclear missiles from the computer?</p>
<p>Now to code my new game: “Pacman XTreme”</b></p>
<p>A better name for your game would be <a href="../../../www.imdb.com/title/tt0086567/synopsis" rel="nofollow">&#8220;Global Thermonuclear War&#8221;</a>.</p>
<p>How&#8217;s that for an &#8217;80s reference?</p>
<p><a href="../../../www.imdb.com/title/tt0086567/default.htm" rel="nofollow">War Games at IMDB</a></p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars even depth-3 clearfix" id="comment-95482">
		<div id="div-comment-95482" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95482">
		May 21, 2011 at 12:27 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p><a href="../../../store.steampowered.com/app/1520/default.htm" rel="nofollow">http://store.steampowered.com/app/1520/</a><br />
Someone already did it.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-43585">
		<div id="div-comment-43585" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/ffd54b6afbe81102b1a62492f7c7058f@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Elef8eroskopefths</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-43585">
		February 13, 2009 at 1:23 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Thanks 4 all info, but may I ask sth??<br />
am writin&#8217; a prog the last 3 days and when I initialize a funktion I need some variables (a lot, to be honest :P), which I need in the main() function as well, but the user is the one who decides how many variables there will be every time he uses (&#8216;will use&#8217;, when I finish it) the prog. So I cannot declare a function 4 example: &#8216;func(x;y;z)&#8217; because I cannot know how many the variables will be, so I cannot see a way 2 pass data between functions without global variables&#8230;.</p>
<p>Is there sth I don&#8217;t know, which I can use at such an example, in order not to use globals???? If yes, I <em>NeEd It</em></p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-63530">
		<div id="div-comment-63530" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/11e7caf6d8e4e79c30a6b0ccba4f5f1d@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Dan Dickey</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63530">
		July 1, 2009 at 2:20 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Use an array.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-46167">
		<div id="div-comment-46167" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/83bd1a48bf708ca6e1f8f20907059fd1@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ian</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-46167">
		February 22, 2009 at 12:41 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Well, what happens if I have two different files containing the same variable name, where one of them was intended to be global and the other local. How does the compiler know which variable I am referring to, when I write &#8216;extern int identifier&#8217; above my int main() block. I guess Im asking this question coz Im used to MatLab7.0 , where i had to prefix &#8220;global&#8221; to a variable declaration, to denote it was global. This was stored in the workspace during runtime and accessed through there.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-48434">
		<div id="div-comment-48434" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-48434">
		March 1, 2009 at 11:56 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Generally a local variable will take precedence over a global.  eg.</p>
<pre>
int nX = 5;

int main()
{
    {
        int nX = 6;
        nX = 7; // sets local nX, not global nX
        cout &lt;&lt; nX; // prints 7
    } // local nX goes out of scope here

    cout &lt;&lt; nX; // prints 5
}
</pre>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-61639">
		<div id="div-comment-61639" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/fe30978b2ee09612f645e9eb8ba97f3d@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Faykarta</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-61639">
		May 29, 2009 at 3:54 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>I do agree with the most part of what you are saying, as long as you are working entirely in C++. </p>
<p>I think there is still a great use for file scope global variables in C and there are some definite bonuses to using C and C++ combined. </p>
<p>For example&#8230; most cases where you might create a singleton would require that one instance is created for the entirety of the program. If this is the case why not just create C file which contains the desired functions and variables. You can use static as a file scope controller, therefore eliminating many of the frowned upon side features to a singleton implementation. If it is a requirement that the singleton is created and destroyed multiple times throughout the program then C++ is probably a better idea considering the allocation of global/static data happens at program start up.</p>
<p>The fact is that the main problem we are trying to avoid is breaking encapsulation, as the overhead from C++ is in polymorphism/inheritance. An additional overhead is invoked with passing arguments through functions, and there is a greater overhead (and pain in the ass) setting up dependencies for class instances.</p>
<p>Its all about encapsulation and im still playing with ideas but please let me know what you think.</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-63529">
		<div id="div-comment-63529" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/11e7caf6d8e4e79c30a6b0ccba4f5f1d@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Dan Dickey</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63529">
		July 1, 2009 at 2:19 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Global variables are Evil without a doubt.  With a capital E!</p>
<p>static file scoped variables are still global in a sense.<br />
Unless you have those variables wrapped by a mutex of<br />
some sort, your code is non-threadable.<br />
Please try to write thread safe code.</p>
<p>Global variables are Evil.  Do *not* ever use them.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-3 clearfix" id="comment-88725">
		<div id="div-comment-88725" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/fe30978b2ee09612f645e9eb8ba97f3d@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Faykarta</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-88725">
		July 19, 2010 at 10:24 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Agreed! Global variables == not thread safe!</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-65615">
		<div id="div-comment-65615" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/f83ecfda6f76de32481d9d8f5a0afc8b@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Whiskeydash</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65615">
		August 4, 2009 at 8:29 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Fully mindful of the global warning (and their emissions),<br />
would &#8220;extern&#8221; also be used in the case of using a &#8216;global <b>function</b>&#8216; if one was er declared (or is it defined..) externally?</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-65693">
		<div id="div-comment-65693" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4cfc70f9a8ae7ce0b38b67c26ea7cf83@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">MusicDave</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65693">
		August 5, 2009 at 2:05 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>I do not understand why main() outputs &#8220;Launching nuclear missiles&#8230;&#8221; to the console.<br />
Isn&#8217;t g_nmode = 2; only local to void doSomething(), and destroyed at the end of this function.<br />
Also, the global scope operator (::) is not used, so gnMode = 2; is not executed globally, right?<br />
Thank you.  </p>
<pre>
// declare global variable
int g_nMode = 1;

void doSomething()
{
    g_nMode = 2;
}

int main()
{
    g_nMode = 1;

    doSomething();

    // Programmer expects g_nMode to be 1
    // But doSomething changed it to 2!

    if (g_nMode == 1)
        cout &lt;&lt; &quot;No threat detected.&quot; &lt;&lt; endl;
    else
        cout &lt;&lt; &quot;Launching nuclear missiles...&quot; &lt;&lt; endl;

    return 0;
}
</pre>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-67521">
		<div id="div-comment-67521" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/15ea22aea565677fc1aaf6eb1356e448@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">chaos</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-67521">
		August 30, 2009 at 9:58 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>In the code above, every time g_nMode is called, it is calling the global g_nMode. There isn&#8217;t a local g_nMode in the program, because it is never declared locally. However, by slightly editing doSomething(), the expected &#8220;No threat detected.&#8221; will be the output:</p>
<pre>
void doSomething()
{
    int g_nMode; // now there is a local g_nMode
    g_nMode = 2; // the local g_nMode == 2
} // the local g_nMode terminates, the global g_nMode == 1 still
</pre>
<p>(Since the local g_nMode wasn&#8217;t global, the g prefix should have been dropped, but I kept it in an attempt to stay close to the code that you had in question. I hope that didn&#8217;t confuse you more.)</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-67803">
		<div id="div-comment-67803" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b9663eba93bc9d406ec796f93f061050@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">N.Kumaresh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-67803">
		September 5, 2009 at 4:15 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Thanks for this free, and hence great site.</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-68094">
		<div id="div-comment-68094" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0e8132715b424f369a70b3dbc124a4ec@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Sam</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-68094">
		September 10, 2009 at 11:21 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>In C, I use globals when I need a pointer to the start (and/or end) of a linked list, which is referenced and modified by many functions.  Is this wrong?  </p>
<p>In C++, what in essence should I be doing instead to keep track of something like this &#8211; the initial address of a linked list- throughout an entire program?  I don&#8217;t want to pass it around.  Am I lazy? </p>
<p>Thanks for these tutorials &#8211; I took out several books from the library to get some answers on use of header files, globals and extern in C++ and none were as helpful as this.</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-68336">
		<div id="div-comment-68336" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ebfaca3353feab757901f56af3222bb7@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kavya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-68336">
		September 14, 2009 at 9:50 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Can you tell me wht will happen if below is the case ??</p>
<p>int gvalue = 5 ;<br />
main()<br />
{<br />
 int gvalue = gvalue ;<br />
 print (&#8220;%d&#8221;,gvalue);<br />
}</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-74648">
		<div id="div-comment-74648" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e100c1fe194c46045e4b385158986228@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Delaney</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-74648">
		December 21, 2009 at 9:52 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>when you use:</p>
<pre>
int gvalue = gvalue;
</pre>
<p>it uses the local gvalue and returns<br />
local gvalue = -858993460</p>
<p>if you wanted it to return 5 use the code:</p>
<pre>
int gvalue = ::gvalue;
</pre>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-74857">
		<div id="div-comment-74857" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/eca897b1a2418ba824b5f917e362f123@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Alex B.</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-74857">
		December 25, 2009 at 10:18 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi! I&#8217;m using Dev-C++, and I&#8217;m new to C++</p>
<p>I copied and pasted the code(s) with the extern variable header.<br />
I got a compiling error that says that it cannot link them:</p>
<p>[Link error] undefined refrence &#8216;to g_nValue&#8217;<br />
[Link error] undefined refrence &#8216;to g_nValue&#8217;<br />
Id returned 1 exit status</p>
<p>What&#8217;s going on&#8230; Please help :(</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-77722">
		<div id="div-comment-77722" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1483c14aed7d35575734ca36353a4470@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Steve Pedro</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77722">
		February 2, 2010 at 6:55 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Why is it declared as &#8220;g_nValue&#8221;, but initialized as &#8220;g nValue&#8221;?</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-80748">
		<div id="div-comment-80748" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e148c0ef7c19b28ab4f73ff4050ee642@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ArnR</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-80748">
		March 17, 2010 at 1:02 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Is there any difference between declaring global variable in C &amp; C++?<br />
If yes then please explain with an example.</p>
<p>Thanks for this nice tutorial guide..  :)</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-80772">
		<div id="div-comment-80772" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2340a43a315113b52cc9ec2f364a4c38@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../chokingmankind.blogspot.com/default.htm' rel='external nofollow' class='url'>prashant ganesha</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-80772">
		March 17, 2010 at 9:18 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>&#8220;launching nuclear missiles&#8221;was bit scary&#8230;!  but awesome tutorials &#8230;long live alex..!!</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-82566">
		<div id="div-comment-82566" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4f941b7b4b14ab7c87cfab250534f33c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Anuradha</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-82566">
		April 9, 2010 at 6:37 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>i am using a global variable &#8216;int bsize&#8217; in multiple file using header file system..i am getting the following error&#8230;</p>
<pre>
1&gt;keyboard.obj : error LNK2001: unresolved external symbol &quot;int bsize&quot; (?bsize@@3HA)
1&gt;numpad.obj : error LNK2001: unresolved external symbol &quot;int bsize&quot; (?bsize@@3HA)
1&gt;debug\part1.exe : fatal error LNK1120: 1 unresolved externals
</pre>
<p>I have declared it in the file called test1.cpp as </p>
<pre>
 //test1.cpp//

#include &lt;QtGui&gt;
#include &quot;test1.h&quot;

QSize Button::sizeHint() const
 {
     QSize size = QPushButton::sizeHint();

	 int bsize = 10;
         size.rheight() -= bsize;
         size.rwidth() = qMin(size.width(), size.height());
	 return size;
 }
</pre>
<p>included it with extern keyword in the file test1.h as </p>
<pre>

//test1.h//

#ifndef BUTTON_H
#define BUTTON_H

#include &lt;QPushButton&gt;
#include&lt;QSizePolicy&gt;
#include&lt;QLineEdit&gt;
extern int bsize;

 class Button : public QPushButton
 {
     Q_OBJECT

 public:
     Button(const QString &amp;text, QWidget *parent = 0);
     QSize sizeHint() const;
	// QFont *font1;
   //int bsize ;
 };

 #endif
</pre>
<p>and then accessed it in two files keyboard.cpp and numpad.cpp as a part of formula</p>
<pre>
//keyboard.cpp//

#include &quot;test1.h&quot;
#include &quot;keyboard.h&quot;
#include &quot;numpad.h&quot;

Button *keyboard::createButton(const QString &amp;text, const char *member)
 {

     Button *button = new Button(text);
     connect(button, SIGNAL(clicked()), this, member);
	 QFont font1;
     font1.setPointSize(10-(0.1*bsize));
	// font1.setPointSize(8);
     button-&gt;setFont(font1);
	 return button;
 }
</pre>
<p>please reply..why is that error? how should i resolve it?</p>
		</div>
</li>
		<li class="pingback even thread-even depth-1 clearfix" id="comment-87426">
		<div id="div-comment-87426" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../../../cplusplus.psexam.com/c-tutorial-and-online-ebook/default.htm' rel='external nofollow' class='url'>C++ Tutorial and Online Ebook</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-87426">
		June 29, 2010 at 5:10 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 4.2 Global variables (and why they are evil) [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-90073">
		<div id="div-comment-90073" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/5133cc6b13b0cd962b29f8fdec45bcb9@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tom</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-90073">
		August 11, 2010 at 2:14 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Why global variables are evil &#8230;.</p>
<p>One advantage using global variables is that the same variable doesn&#8217;t mean twenty different things in twenty different places. It can get confusing in scientific programming when &#8220;energy&#8221; means different things in different places.</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-91487">
		<div id="div-comment-91487" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2f1d688e9d18bea7e7d9444b38a9caf9@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jon Affleck</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-91487">
		September 5, 2010 at 6:41 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>I don&#8217;t think global variables are dangerous/evil if they are declared &#8216;const&#8217;, since the value cannot be changed.</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-93122">
		<div id="div-comment-93122" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4f4a25c2a96ac6a688c8c60f865647cb@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">qaz</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-93122">
		October 2, 2010 at 8:25 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>@Anuradha: &#8220;int bsize&#8221; was declared locally in the function sizeHint() in test1.cpp. It doesn&#8217;t exist outside that function. Declare it globally in test1.cpp outside any functions.</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-93532">
		<div id="div-comment-93532" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1f5a3e17a31cf8a7cbd58a53c08328b2@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Anthony</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-93532">
		October 10, 2010 at 9:05 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>What if I have a global variable, that gets edited in one function, but I need to check it in another function?</p>
		</div>
</li>
		<li class="pingback odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95052">
		<div id="div-comment-95052" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../../../www.linuxquestions.org/questions/programming-9/recusive-mutex-problem-850836/#post4194944' rel='external nofollow' class='url'>recusive mutex problem</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95052">
		December 17, 2010 at 9:43 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] You&#039;re probably using C or C++&#8230; &#8230; and you probably need to declare &quot;PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP&quot; as a global, &quot;extern&quot; variable in a .h header file. For example:  <a href="../../cpp-tutorial...bal-variables/default.htm" rel="nofollow">http://www.learncpp.com/cpp-tutorial&#8230;bal-variables/</a> [...]</p>
		</div>
</li>
		<li class="pingback even thread-even depth-1 clearfix" id="comment-95490">
		<div id="div-comment-95490" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../../../forum.codecall.net/c-c/38656-defining-variable-header-file.html#post303350' rel='external nofollow' class='url'>defining a variable in a header file?</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95490">
		May 25, 2011 at 3:38 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] to functions than making them global. You can read some reason why global variables are evil here (scroll down a [...]</p>
		</div>
</li>
		<li class="comment byuser comment-author-astronaut13 odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95685">
		<div id="div-comment-95685" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c0e3a8bbef514173993f4d84d9f79a54@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">astronaut13</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95685">
		July 8, 2011 at 5:12 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Okay. So, a very good reason for a global variable might be in a game &#8211; a player&#8217;s name and inventory status, etc. Right?</p>
		</div>
</li>
		<li class="comment byuser comment-author-hpoonis even thread-even depth-1 clearfix" id="comment-95912">
		<div id="div-comment-95912" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8de14062f69193cab39865e3aa7062aa@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">hpoonis</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95912">
		August 22, 2011 at 2:21 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>I have to ask&#8230;</p>
<p>Why would you need to create a file (say) globals.cpp AND ALSO globals.h to call the .cpp?  Why not just call the file globals.h instead and use that?</p>
<p>It just seems pointless having two files do the same thing as one.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars odd alt depth-2 clearfix" id="comment-96114">
		<div id="div-comment-96114" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96114">
		October 8, 2011 at 4:42 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>organization.<br />
headers are usually used for forward declarations and whatnot, while cpp files are used to hold the code.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-ranjbar even thread-odd thread-alt depth-1 clearfix" id="comment-96147">
		<div id="div-comment-96147" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/825e9f8cae2fe603b57ec60ec164c5b2@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ranjbar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96147">
		October 14, 2011 at 6:27 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi</p>
<p>#include<br />
int main()<br />
{<br />
    using namespace std;<br />
    cout &lt;&gt; nValue;</p>
<p>    if (nValue &gt; 3)</p>
<p>        {<br />
            cout &lt;&lt; &quot;A&quot;&lt;&lt;endl;</p>
<p>                    cout &lt;&lt; &quot;enter a number&quot;&lt;&gt; x;<br />
        }</p>
<p>}</p>
<p>suppose  out of the block of if i need  value of x. what can i do for getting value of x out of the block?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars odd alt depth-2 clearfix" id="comment-96150">
		<div id="div-comment-96150" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96150">
		October 15, 2011 at 6:53 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Uhh, if I understand you correctly, you just need to have x as a global variable and then you can access it from inside the block, and use it again in a different one.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-anoushe even thread-even depth-1 clearfix" id="comment-96477">
		<div id="div-comment-96477" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7389a668862c99c12d2ca5c92deb233e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">anoushe</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96477">
		November 26, 2011 at 5:00 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi,</p>
<p>I&#8217;m trying to solve a matrix equation outside of my main function i.e. I form the matrices A and b in my main function then pass them onto a solver.cpp file which then solves them and gets me the x. I now want to use that x (which is an array defined as double *x=new double [m] ) in my main function. Can someone please help with this? I&#8217;ve tried several ways but keep getting errors.<br />
Thanks a lot!</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f42-global-variables_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../41-blocks-compound-statements-and-local-variables/default.htm" rel="prev">4.1 &#8212; Blocks (compound statements) and local variables</a> &nbsp;</div><div class="newer">&nbsp; <a href="../43-file-scope-and-the-static-keyword/default.htm" rel="next">4.3 &#8212; File scope and the static keyword</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'65'});
var load_cmc = function(){linktracker_init(3928254,65,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.551 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:51:54 -->
<!-- Compression = gzip -->