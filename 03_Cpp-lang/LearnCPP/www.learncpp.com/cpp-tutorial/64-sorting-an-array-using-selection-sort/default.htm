<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0089)http://www.learncpp.com/cpp-tutorial/64-sorting-an-array-using-selection-sort/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>6.4 &#8212; Sorting an array using selection sort &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 6.4 &#8212; Sorting an array using selection sort Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='6.3 &#8212; Arrays and loops' href='../63-arrays-and-loops/default.htm' />
<link rel='next' title='A.3 &#8212; Using libraries with Code::Blocks' href='../a3-using-libraries-with-codeblocks/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-1v' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-93 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../63-arrays-and-loops/default.htm" rel="prev">6.3 &#8212; Arrays and loops</a> &nbsp;</div><div class="newer">&nbsp; <a href="../a3-using-libraries-with-codeblocks/default.htm" rel="next">A.3 &#8212; Using libraries with Code::Blocks</a> &raquo;</div></div>
<div class="post-93 post type-post status-publish format-standard hentry category-cpp-tutorial" id="post-93">


<div class="post-headline">		<h1>6.4 &#8212; Sorting an array using selection sort</h1>
		</div>
<div class="post-byline">By Alex, on July 3rd, 2007</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>There are many different cases in which sorting an array can be useful.  Algorithms (such as searching to see if a number exists in an array) can often be made simpler and/or more efficient when the input data is sorted.  Furthermore, sorting is often useful for human readability, such as when printing a list of names in alphabetical order.</p>
<p>Sorting is generally performed by repeatedly comparing pairs of array elements, and swapping them if they meet some criteria.  The order in which these elements are compared differs depending on which sorting algorithm is used, and the criteria depends on how the list will be sorted (ascending or descending order).  To swap two elements, we can use the swap() function from the C++ standard library.  Swap is defined in the algorithm header, and lives in the std namespace.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;algorithm&gt; // for swap
#include &lt;iostream&gt;

int main()
{
    using namespace std;

    int x = 2;
    int y = 4;
    cout &lt;&lt; &quot;Before swap: x = &quot; &lt;&lt; x &lt;&lt; &quot;, y = &quot; &lt;&lt; y &lt;&lt; endl;
    swap(x, y); // swap also lives in std namespace
    cout &lt;&lt; &quot;After swap:  x = &quot; &lt;&lt; x &lt;&lt; &quot;, y = &quot; &lt;&lt; y &lt;&lt; endl;
}
</pre>
<p>This program prints:</p>
<pre>
Before swap: x = 2, y = 4
After swap:  x = 4, y = 2
</pre>
<p>Note that after the swap, the values of x and y have been interchanged!</p>
<p><strong>Selection sort</strong></p>
<p>There are many ways to sort an array.  Selection sort is probably the easiest sort to understand, which makes it a good candidate for teaching even though it is one of the slower sorts.</p>
<p>Selection sort performs the following steps:<br />
1) Starting at index 0, search the entire array to find the smallest value<br />
2) Swap the smallest value found with the value at index 0<br />
3) Repeat steps 1 &#038; 2 starting from the next index</p>
<p>In other words, we&#8217;re going to find the smallest element in the array, and put it in the first position.  Then we&#8217;re going to find the next smallest element, and put it in the second position.  This process will be repeated until we run out of elements.</p>
<p>Here is an example of this algorithm working on 5 elements.  Let&#8217;s start with a sample array:</p>
<p>{ 30, 50, 20, 10, 40 }</p>
<p>First, we find the smallest element, starting from index 0:</p>
<p>{ 30, 50, 20, <strong>10</strong>, 40 }</p>
<p>We then swap this with the element at index 0:</p>
<p>{ <strong>10</strong>, 50, 20, <strong>30</strong>, 40 }</p>
<p>Now that the first element is sorted, we can ignore it.  Consequently, we find the smallest element, starting from index 1:</p>
<p>{ 10, 50, <strong>20</strong>, 30, 40 }</p>
<p>And swap it with the element in index 1:</p>
<p>{ 10, <strong>20</strong>, <strong>50</strong>, 30, 40 }</p>
<p>Find the smallest element starting at index 2:</p>
<p>{ 10, 20, 50, <strong>30</strong>, 40 }</p>
<p>And swap it with the element in index 2:</p>
<p>{ 10, 20, <strong>30</strong>, <strong>50</strong>, 40 }</p>
<p>Find the smallest element starting at index 3:</p>
<p>{ 10, 20, 30, 50, <strong>40</strong> }</p>
<p>And swap it with the element in index 3:</p>
<p>{ 10, 20, 30, <strong>40</strong>, <strong>50</strong> }</p>
<p>Finally, find the smallest element starting at index 4:</p>
<p>{ 10, 20, 30, 40, <strong>50</strong> }</p>
<p>And swap it with the element in index 4 (which doesn&#8217;t do anything):</p>
<p>{ 10, 20, 30, 40, <strong>50</strong> }</p>
<p>Done!</p>
<p>{ 10, 20, 30, 40, 50 }</p>
<p>Here&#8217;s how this algorithm is implemented in C++:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
const int nSize = 5;
int anArray[nSize] = { 30, 50, 20, 10, 40 };

// Step through each element of the array
for (int nStartIndex = 0; nStartIndex &lt; nSize; nStartIndex++)
{
    // nSmallestIndex is the index of the smallest element
    // we've encountered so far.
    int nSmallestIndex = nStartIndex;

    // Search through every element starting at nStartIndex+1
    for (int nCurrentIndex = nStartIndex + 1; nCurrentIndex &lt; nSize; nCurrentIndex++)
    {
        // If the current element is smaller than our previously found smallest
        if (anArray[nCurrentIndex] &lt; anArray[nSmallestIndex])
            // Store the index in nSmallestIndex
            nSmallestIndex = nCurrentIndex;
    }

    // Swap our start element with our smallest element
    swap(anArray[nStartIndex], anArray[nSmallestIndex]);
}
</pre>
<p>The most confusing part of this algorithm is the nested loop.  The outside loop (nStartIndex) steps through each element one by one.  The inner loop (nCurrentIndex) finds the smallest element in the array starting from nStartIndex and sets the variable nSmallestIndex to point to it.  The smallest index is then swapped with the start index.  Then the outer loop (nStartIndex) advances one element, and the process is repeated.</p>
<p><strong>Quiz</strong></p>
<p>1) Selection sort the following array: { 30, 60, 20, 50, 40, 10 }.  Show the array after each swap that takes place.</p>
<p>2) Rewrite the selection sort code above to sort in descending order (largest numbers first).  Although this may seem complex, it is actually surprisingly simple.</p>
<p><strong>Quiz solutions</strong></p>
<p>1) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id239039010'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id239039010" style="display:none">
<p>30 60 20 50 40 10<br />
<strong>10</strong> 60 20 50 40 <strong>30</strong><br />
10 <strong>20</strong> <strong>60</strong> 50 40 30<br />
10 20 <strong>30</strong> 50 40 <strong>60</strong><br />
10 20 30 <strong>40</strong> <strong>50</strong> 60<br />
10 20 30 40 <strong>50</strong> 60 (self-swap)<br />
10 20 30 40 50 <strong>60</strong> (self-swap)
</div>
<p>2) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id2113555807'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id2113555807" style="display:none">
<p>Simply change:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
        if (anArray[nCurrentIndex] &lt; anArray[nSmallestIndex])
</pre>
<p>to:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
        if (anArray[nCurrentIndex] &gt; anArray[nSmallestIndex])
</pre>
<p>nSmallestIndex should probably be renamed nLargestIndex as well.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
const int nSize = 5;
int anArray[nSize] = { 30, 50, 20, 10, 40 };

// Step through each element of the array
for (int nStartIndex = 0; nStartIndex &lt; nSize; nStartIndex++)
{
    // nLargestIndex is the index of the largest element
    // we've encountered so far.
    int nLargestIndex = nStartIndex;

    // Search through every element starting at nStartIndex+1
    for (int nCurrentIndex = nStartIndex + 1; nCurrentIndex &lt; nSize; nCurrentIndex++)
    {
        // If the current element is smaller than our previously found smallest
        if (anArray[nCurrentIndex] &gt; anArray[nLargestIndex])
            // Store the index in nLargestIndex
            nLargestIndex = nCurrentIndex;
    }

    // Swap our start element with our largest element
    swap(anArray[nStartIndex], anArray[nLargestIndex]);
}
</pre>
</div>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../65-multidimensional-arrays/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 6.5 &#8212; Multidimensional Arrays</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter6" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../63-arrays-and-loops/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 6.3 &#8212; Arrays and loops</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../63-arrays-and-loops/default.htm" rel="prev">6.3 &#8212; Arrays and loops</a> &nbsp;</div><div class="newer">&nbsp; <a href="../a3-using-libraries-with-codeblocks/default.htm" rel="next">A.3 &#8212; Using libraries with Code::Blocks</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">59 comments to 6.4 &#8212; Sorting an array using selection sort</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-254">
		<div id="div-comment-254" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e59c9969e8f0ba7ca248852af0a23287@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jeff</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-254">
		August 3, 2007 at 3:55 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>I am having trouble (a lot) understanding classes; which from what I&#8217;ve read so far is crucial to understanding OOP&#8230; Any advice?? This tutorial is sweet by the way&#8230; Good job&#8230;</p>
		</div>
</li>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt thread-odd thread-alt depth-1 clearfix" id="comment-263">
		<div id="div-comment-263" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-263">
		August 3, 2007 at 4:24 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Jeff, I will be covering classes very shortly, as soon as I wrap up the section on functions.  Outside of waiting for those tutorials, my advice (outside of actually purchasing a book) would be to search for &#8220;c++ classes&#8221; on Google and read everything you can.  If you have any specific questions, feel free to post them in my <a href="../../../www.dev-spot.com/default.htm" rel="nofollow">forum</a> and I will do my best to answer them.</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-2928">
		<div id="div-comment-2928" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/cac9ea8844e337e4b0da286bf32628bc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.friendster.com/default.htm' rel='external nofollow' class='url'>roseann</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-2928">
		November 17, 2007 at 5:05 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi,,,hope you mind,how can i sort a two dimensional array with series of characters through the use of selection sort method&#8230;??</p>
		</div>
</li>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt thread-odd thread-alt depth-1 clearfix" id="comment-2947">
		<div id="div-comment-2947" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-2947">
		November 17, 2007 at 1:49 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Roseann, I&#8217;m not sure what it even means to sort a 2d array.  Do you sort each row?  Each column?  The whole array and then list the results in rows?  In columns?  Without further information, the problem just doesn&#8217;t make sense.</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-5732">
		<div id="div-comment-5732" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0195bf75f2f76e29b4f52f919e1cec59@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Abhishek</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-5732">
		January 8, 2008 at 9:14 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Then what&#8217;s the faster and difficult to understand sort?<br />
Will my small mind be able to understand that?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-5734">
		<div id="div-comment-5734" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-5734">
		January 8, 2008 at 10:22 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>There are a large number of faster sorting algorithms.  Two of the more popular faster sorts are quicksort and mergesort.  However, sorting algorithms are really the topic for a data structures/algorithms class or tutorial (since they can be implemented in any language), not a C   one. :)</p>
<p>See <a href="../../../en.wikipedia.org/wiki/sorting_algorithm">wikipedia</a> for more information.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-6266">
		<div id="div-comment-6266" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ccb1a600596bcb93b8a10fc636251d17@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.foquant.com/default.htm' rel='external nofollow' class='url'>foquant</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6266">
		January 18, 2008 at 5:10 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>I didn&#8217;t compile this, so I could be wrong, but on line 5, shouldn&#8217;t the for loop expression be:</p>
<pre>nStartIndex < (nSize - 1)</pre></p>
<p>would that be a one off error?</pre>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-6384">
		<div id="div-comment-6384" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6384">
		January 20, 2008 at 9:04 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>The code was written to follow the 5-element example that proceeds it.  You will note the last step in the example is redundant because it will always swap the last element with itself.  Similarly, the last iteration of the outer loop will always cause the last element to be swapped with itself!</p>
<p>This doesn&#8217;t affect the correctness of the algorithm, it&#8217;s just non-optimal.  As you note, changing the loop to <code>nStartIndex < (nSize - 1)</code> removes this non-optimality.</p>
<p>Generally when we talk about "off by one" errors, we're talking about errors that make the algorithm perform incorrectly because the loop executes one too many or too few times.  In this case, the algorithm is correct, it just has a redundant step that can be removed by changing that loop condition.</code></p>
		</div>
<ul class='children'>
		<li class="comment even depth-3 clearfix" id="comment-6417">
		<div id="div-comment-6417" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ccb1a600596bcb93b8a10fc636251d17@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.foquant.com/default.htm' rel='external nofollow' class='url'>foquant</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6417">
		January 21, 2008 at 11:08 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>ah, very clear.  thanks</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-6706">
		<div id="div-comment-6706" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/70ca080ee54cd5cc51eb299ff767e6c6@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">shiela</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6706">
		January 27, 2008 at 7:01 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi!!!!!oh please give me some points or idea on how to program the &#8220;bubble<br />
sort&#8221; which will show all the passes and of course the sorted list inputed by<br />
the user using c   looping and array.pls..pls..pls&#8230;<br />
tnx</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-6708">
		<div id="div-comment-6708" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6708">
		January 27, 2008 at 7:40 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Bubble sort works somewhat similarly to insertion sort.  However, it uses a different array access pattern.  Bubble sort works by comparing adjacent pairs of elements and swapping them if they are not in the correct order.  Thus, it &#8220;bubbles&#8221; the largest or smallest element to the end of the array.  Basically, the algorithm looks like this:</p>
<p>There&#8217;s a pretty good description of this algorithm, along with an example, on <a href="../../../en.wikipedia.org/wiki/bubble_sort" rel="nofollow">wikipedia</a>.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-allen01 odd alt thread-odd thread-alt depth-1 clearfix" id="comment-8452">
		<div id="div-comment-8452" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4d83da488626c9316d8e5a9bd7a714ac@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Allen01</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-8452">
		February 24, 2008 at 8:21 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex, you&#8217;re right about the inner nest being confusing! Again, for clarity on my part, I have converted this using while statments. The only part that is still a bit foggy is the incrementing statement in the nested loop. What keeps
<pre> nCurrentIndexplusplus; </pre>
<p> in the nested loop from incrementing that loop before the incrementing statement at the bottom of the program
<pre> nStartIndexplusplus; </pre>
<p> executes and causes the outer to increment? Or is the inner loop incrementing and cycling thru all of the index numbers before the outer loop begins its second loop?</p>
<p>btw: why dont the plus signs show up in the posted code?</p>
<pre>
int main()
{
    using namespace std;
    const int nSize = 5;

    int anArray[nSize] = { 30, 50, 20, 10, 40 };

    int nStartIndex = 0;
    while(nStartIndex < nSize)
    {
        int nSmallestIndex = nStartIndex;

	int nCurrentIndex = nStartIndex plus  1;
	while(nCurrentIndex < nSize)
	    {
	    if(anArray[nCurrentIndex] < anArray[nSmallestIndex])
	       nSmallestIndex = nCurrentIndex;
	       nCurrentIndex;
	    }

	    swap(anArray[nStartIndex], anArray[nSmallestIndex]);

	cout << anArray[nStartIndex] << endl;
	nStartIndex;
    }

	return 0;
}

</pre></pre>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-8453">
		<div id="div-comment-8453" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-8453">
		February 24, 2008 at 9:06 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>The inner loops runs through all it&#8217;s iterations before the outer loop is allowed to execute again.</p>
<p>It looks like plus symbols work for the initial response, but if you edit your posts, the AJAX editor seems to be stripping them out.</p>
<p>[ edit: I upgraded to a new version of the AJAX editor and it seems to fix that particular issue. -Alex ]</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-allen01 odd alt thread-even depth-1 clearfix" id="comment-8476">
		<div id="div-comment-8476" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4d83da488626c9316d8e5a9bd7a714ac@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Allen01</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-8476">
		February 25, 2008 at 8:50 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>In the sort example/problem, it would seem that the output statement should read:</p>
<pre>  cout < < anArray << endl; </pre></p>
<p>But this yields a funky output. The only thing that yields the output below</p>
<p>10<br />
20<br />
30<br />
40<br />
50<br />
Press any key to conitiue&#8230;</p>
<p>is this output statement:</p>
</pre>
<pre>  cout < < anArray[nStartIndex] << endl; </pre></p>
<p>Can you elaborate on this a little more? Thanks.</pre>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-8480">
		<div id="div-comment-8480" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-8480">
		February 25, 2008 at 10:46 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>anArray refers to the array itself, and the array variable is really just a pointer.  So when you do this:</p>
<pre>
cout < < anArray << endl;
</pre>
<p>You're printing out the address held in anArray pointer (which as you say "yields funky output")</p>
<p>When you really want is to print the value of the ELEMENTS of anArray.  To do that, you need to index the array using the [] operator -- in this case, the index is the value of nStartIndex.</p>
<p>Generally speaking, it's a better idea to sort your array and THEN re-loop through it to print out the sorted result.  You could do this by adding the following lines:</p>
</pre>
<pre>
for (int nIndex=0; nIndex < nSize; nIndex++)
    cout << anArray[nIndex] << endl;
</pre>
<p>By the way, the issue with the disappearing + symbols should be fixed now.</pre>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-8842">
		<div id="div-comment-8842" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/743717ba8bc4078c3c75dfdfaa299a99@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Chad</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-8842">
		March 3, 2008 at 1:30 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>C++ is definitely harder than MATLAB, but better in some ways.</p>
		</div>
</li>
		<li class="pingback even thread-even depth-1 clearfix" id="comment-13474">
		<div id="div-comment-13474" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../63-arrays-and-loops/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 6.3 &#8212; Arrays and loops</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-13474">
		April 28, 2008 at 8:51 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...]    Prev/Next Posts   &laquo; Eight C++ programming mistakes the compiler won&#8217;t catch | Home | 6.4 &#8212; Sorting an array using selection sort &raquo;     Monday, July 2nd, 2007 at 2:03 [...]</p>
		</div>
</li>
		<li class="pingback odd alt thread-odd thread-alt depth-1 clearfix" id="comment-19432">
		<div id="div-comment-19432" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../65-multidimensional-arrays/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 6.5 &#8212; Multidimensional Arrays</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-19432">
		June 20, 2008 at 9:04 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...]  6.4 &#8212; Sorting an array using selection sort        &nbsp;Print This Post   This entry is filed under C++ Tutorial. You can follow any responses to this entry through the RSS 2.0 feed. You can leave a response, or trackback from your own site.            4 Responses to &#8220;6.5 &#8212; Multidimensional Arrays&#8221;        Comment by Cody    2007-12-26 20:20:24 [...]</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-20514">
		<div id="div-comment-20514" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8064c119a2137e5bc4578611a1302aa1@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jesse</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-20514">
		July 7, 2008 at 7:55 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>The first quiz uses { 30, 60, 20, 40, 50, 10 }, but the answer appears to be using {30 60 20 50 40 10}.<br />
Great tutorial btw</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-31863">
		<div id="div-comment-31863" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/883956bce6b0f956be934431524b3735@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">henri</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-31863">
		November 9, 2008 at 12:06 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Yeah. It&#8217;s done sorting by the 3rd iteration of the outer loop, not the 4th like the answer shows.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-23937">
		<div id="div-comment-23937" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/f5cee49ff0cd89a573301e54e46fdee9@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jeffey</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-23937">
		August 16, 2008 at 2:33 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>attach the loop statement from the last lesson to the end of the for statement and see this program work through the sorting. Thought it was kinda neat how it works.</p>
<pre>
for(int iii=0; iii &lt; nSize; iii++)
		cout &lt;&lt; anArray[iii] &lt;&lt; &quot; &quot;;
	cout &lt;&lt; endl;
<!--formatted--></pre>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-azmath odd alt depth-2 clearfix" id="comment-95091">
		<div id="div-comment-95091" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1c6ca56d17a68ab4c9314be2a9f16638@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">azmath</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95091">
		January 5, 2011 at 9:15 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>i am a new c++ programmer. i can&#8217;t arrange insert keyboard value assending order using c++. please help me.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-32363">
		<div id="div-comment-32363" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0150958ebd42da8cffdcab537c127873@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Mat</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-32363">
		November 18, 2008 at 9:23 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Who ever wrote this post thank you. The book i&#8217;m using gave me a horrible example for sorting. Great job who ever put this up.</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-33241">
		<div id="div-comment-33241" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e6fad4a61336764a98f28ce2660b2b9a@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">runner</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-33241">
		November 29, 2008 at 5:51 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m using Selection Sort as a function. Can I get the function to return the sorted array, or do I have to use it to change a global variable?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-33848">
		<div id="div-comment-33848" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-33848">
		December 6, 2008 at 11:20 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>I think the best answer to your question is to pass your input array to the selection sort function by reference, which we cover in chapter 7.3.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-36570">
		<div id="div-comment-36570" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a93076ec151a243cb8afb75cafc1a341@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../yahoo.com/default.htm' rel='external nofollow' class='url'>mae ann</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-36570">
		January 5, 2009 at 7:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>how can you sort using characters with there lastname?and the inputted students are 10</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-45175">
		<div id="div-comment-45175" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3c18c0773106049c77b1af1518c4b3b7@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">richard</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-45175">
		February 18, 2009 at 1:20 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>how to do this program:</p>
<p>Write a program that will read N integers from keyboard input into an array. The size of the array N will be entered on the keyboard. The program will tabulate the output as shown below: tje first column should show list of distinct array elements sorted in ascending order, while the second column should show the number of occurrences of each element.</p>
<p>Sample input:     9 15 7 9 3 7 3 3 7 6 3 20<br />
Expected output:    N          count<br />
                    3            4<br />
                    6            1<br />
                    7            3<br />
                    9            2<br />
                    15           1<br />
                    20           1</p>
<p>How to do that program?<br />
<a href="mailto:puckundo@yahoo.com">puckundo@yahoo.com</a></p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-55168">
		<div id="div-comment-55168" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2f170144031739521d32971db23273b7@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jeremy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-55168">
		April 1, 2009 at 11:52 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
hi alex,
just want to clarify about the following:

isnt it in the ff line, nStartIndex is already increased by 1? or will it be increased on its second loop?

       for (int nStartIndex = 0; nStartIndex &lt; nSize; nStartIndex++)

Because if its already increased by 1, then we dont need a variable to hold the value of the smallest number stored in the array..

please check and comment on my code:

int anSort[]= { 30, 50, 20, 10, 40 };
for(int xxx=0;xxx&lt;5;xxx++)
   for (int jjj = xxx;jjj&lt;5;jjj++)//xxx is already incremented

      if anSort[jjj]&lt; anSort[xxx]
         swap(anSort[xxx],anSort[jjj]);

<!--formatted--></pre>
		</div>
</li>
		<li class="comment byuser comment-author-futurepixstar even thread-odd thread-alt depth-1 clearfix" id="comment-62793">
		<div id="div-comment-62793" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/63f50371c194bff15a7f59e26614bdfd@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">FuturePixstar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-62793">
		June 21, 2009 at 2:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>im just lost completely here, i ran through the code the first time, everything when fine, smallest to largest. then to switch it to largest to smallest i did exactly what the solution showed (before looking at it) and well&#8230; see for yourself</p>
<pre>
#include &lt;stdafx.h&gt;
#include &lt;iostream&gt;
#include &lt;algorithm&gt;

int main()
{
	using namespace std;

	const int nMaxArray = 6;

	int anArray[nMaxArray] = { 30, 60, 20, 50, 40, 10 };
	for (int nStartingIn = 0 ; nStartingIn &lt; 6 ; nStartingIn++)
	{
		int nSmallestIn = nStartingIn;

		for (int nCurrentIn = nStartingIn + 1 ; nCurrentIn &lt; 6 ; nCurrentIn++)
		{
			if(anArray[nCurrentIn] &gt; anArray[nSmallestIn])
				nSmallestIn = nCurrentIn;

			swap(anArray[nSmallestIn],anArray[nStartingIn]);
		}

		for (int nCount = 0; nCount &lt; 6 ; nCount++)
		{
			if (nCount &lt; 6)
				cout &lt;&lt; anArray[nCount] &lt;&lt; &quot; &quot;;
		}

		cout &lt;&lt; endl;
	}

	return 0;
}
</pre>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-62819">
		<div id="div-comment-62819" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e29c596c93306cf2127565e9ae780348@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">rawr</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-62819">
		June 21, 2009 at 11:00 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
#include &lt;stdafx.h&gt;
#include &lt;iostream&gt;
#include &lt;algorithm&gt;

int main()
{
	using namespace std;

	const int nMaxArray = 6;

	int anArray[nMaxArray] = { 30, 60, 20, 50, 40, 10 };
	for (int nStartingIn = 0 ; nStartingIn &lt; 6 ; nStartingIn++)
	{
		int nSmallestIn = nStartingIn;

		for (int nCurrentIn = nStartingIn + 1 ; nCurrentIn &lt; 6 ; nCurrentIn++)
		{
			if(anArray[nCurrentIn] &gt; anArray[nSmallestIn])
				nSmallestIn = nCurrentIn;

			// swap(anArray[nSmallestIn],anArray[nStartingIn]); OLD LOCATION
		}

                swap(anArray[nSmallestIn],anArray[nStartingIn]); // NEW LOCATION

		for (int nCount = 0; nCount &lt; 6 ; nCount++)
		{
			if (nCount &lt; 6)
				cout &lt;&lt; anArray[nCount] &lt;&lt; &quot; &quot;;
		}

		cout &lt;&lt; endl;
	}

	return 0;
}
</pre>
<p>You wait until you have found the smallest, THEN swap(). I commented out the old swap function, then located it outside the internal for loop.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-futurepixstar even depth-3 clearfix" id="comment-62830">
		<div id="div-comment-62830" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/63f50371c194bff15a7f59e26614bdfd@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">FuturePixstar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-62830">
		June 21, 2009 at 4:56 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>*sigh* this padawan has much to learn yet still. Thanks alot for the help :)</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-64894">
		<div id="div-comment-64894" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/dcb960843f310864f2f57ff2afae8b00@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Skyler</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-64894">
		July 23, 2009 at 1:59 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Two questions, when the outerloop runs the first time nCurrentIndex is set to 1. If the nested loop runs all of its iterations before the outerloop can run again, then nCurrentIndex would get keep getting incremented by 1 until (nCurrentIndex &lt; nSize) wasnt true. So does it then proceed to the swap() command?</p>
<p>Second, if thats true, then on the second round of the outerloop, does the nested loop reiterate (int nCurrentIndex = nStartIndex + 1)? I thought that &#8216;for loops&#8217; only use the initializing statement once??? I have the program working, i am just not understanding how exactly it is working.</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-64950">
		<div id="div-comment-64950" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/dcb960843f310864f2f57ff2afae8b00@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">skyler</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-64950">
		July 24, 2009 at 11:19 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>nevermind now i understand perfectly, just had to write out what was happening on paper so my brain could fathom it.</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-65248">
		<div id="div-comment-65248" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/5d7d054c49953e64fde522724b29dcce@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">GrantSolar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65248">
		July 29, 2009 at 8:21 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>After following your lessons (Awesome, by the way) I always enjoy the quiz&#8217;s however I&#8217;ve been having some difficulty with this one. I tried the first question without out-right copying what you did but repeatedly got the same results. I compared yours against mine and changed my variable names to make the differences more obvious. I couldn&#8217;t see where I&#8217;d gone wrong. I opened a new project and copied your code (and added #include  etc.) Yours worked fine.<br />
My code reads:</p>
<pre>
#include &quot;stdafx.h&quot;
#include &lt;iostream&gt;
#include &lt;algorithm&gt;

int main()
{
	using namespace std;
	const int nSize = 6;
	int nStartIndex = 0;
	int anArray[nSize] = { 30, 60, 20, 50, 40, 10 };

	//Display initial order
	for (int iii = 0; iii &lt; 6; iii++)
	cout &lt;&lt; anArray[iii] &lt;&lt; &quot;, &quot;;
	cout &lt;&lt; endl;

	for (int nStartIndex = 0; nStartIndex &lt; nSize; nStartIndex++);
	{
		int nSmallestIndex = nStartIndex;
		for (int nCurrentIndex = nStartIndex + 1; nCurrentIndex &lt; nSize; nCurrentIndex++)
		{
			if (anArray[nCurrentIndex] &lt; anArray[nSmallestIndex])
				nSmallestIndex = nCurrentIndex;
		}
		swap(anArray[nStartIndex], anArray[nSmallestIndex]);

	}
	for (int iii = 0; iii &lt; 6; iii++)
		cout &lt;&lt; anArray[iii] &lt;&lt; &quot;, &quot;;
		cout &lt;&lt; endl;
	return 0;
}
</pre>
<p>My other issue is that, whilst yours works straight off, mine refuses to compile unless nStartIndex is declared earlier whilst you don&#8217;t. Any ideas why that might be?</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-67302">
		<div id="div-comment-67302" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/04e66bf3de000b07c34c7a4de9b2a47a@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Fikri</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-67302">
		August 27, 2009 at 2:37 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>give me example of array (sorting/bubble)&#8230;</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-66199">
		<div id="div-comment-66199" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">baldo</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-66199">
		August 13, 2009 at 12:50 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>That is because you put ; after the for statement. </p>
<pre>for (int nStartIndex = 0; nStartIndex &lt; nSize; nStartIndex++);</pre>
<p>This is a usual mistake that begginers do.</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-66566">
		<div id="div-comment-66566" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/5d7d054c49953e64fde522724b29dcce@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">GrantSolar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-66566">
		August 18, 2009 at 8:25 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Thanks! Man, that&#8217;s had me stumped for weeks!</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-72910">
		<div id="div-comment-72910" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9d729641f0cf6b814b70be6bb709cf42@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">andualem</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-72910">
		November 24, 2009 at 3:21 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi haw are you i have a question when using insertion sort,bubble sort,selection sort,accept 10 students and then if the user inter 10 names without ascending order and then the user enter 1the output is insertion sort and inter 2 output is bubble like this how work this one pleas help me thanks good by</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-73614">
		<div id="div-comment-73614" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/932b38f5a94d1fecf492ce4ad238d8c7@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Lejebo</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-73614">
		December 4, 2009 at 3:32 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi haw are you i have a question when using insertion,bubble,and selection sort.How can write a c++ program that accept 8-names and sort the names by using the above three sorting.Just forward your idea as soon as possible.Thanks for your contribution!!</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-75814">
		<div id="div-comment-75814" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9a79263e2e7800d9ae713b91d77b0aa9@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Andrew</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-75814">
		January 5, 2010 at 7:24 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>how come there is no code for the solution to the first question? i cant seem to figure out how to output each completed array when the first element is swaped..</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-75866">
		<div id="div-comment-75866" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9a79263e2e7800d9ae713b91d77b0aa9@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Andrew</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-75866">
		January 6, 2010 at 10:38 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>never mind, i got my code to work. the problem wasnt with my output part of the function, i wrote: nCurrentIndex = nSmallestIndex, instead of the other way around.</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-76222">
		<div id="div-comment-76222" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/63ccf4e4e368f8670759c69914df0fa8@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Petey</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-76222">
		January 11, 2010 at 2:34 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>hello, i was wondering how swap works since you&#8217;re passing an argument by value, not reference, or am i missing something? just wondering, that&#8217;s all. great tutorials by the way</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-76474">
		<div id="div-comment-76474" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/fbeccfbfe3a7dac20448088262741e5a@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Zach</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-76474">
		January 14, 2010 at 6:58 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>I am definitely new to programming, but so far I&#8217;m understanding everything reasonably well. I do have one question though. If you are re-initializing &#8220;nSmallestIndex&#8221; to a value of &#8220;nStartIndex&#8221; each time, why do you use &#8220;nSmallestIndex&#8221; in this part of your loop?
<pre>if (anArray[nCurrentIndex] &lt; anArray[nSmallestIndex])<!--formatted--></pre>
<p> If the purpose of &#8220;nSmallestIndex&#8221; is just to temporarily hold the smallest index whilst you search the rest, wouldn&#8217;t it make more sense just to use &#8220;nStartIndex&#8221; and not bother giving &#8220;nSmallestIndex&#8221; a value of anything when it&#8217;s initialized, thus using &#8220;nSmallestIndex&#8221; <strong>Only</strong> as a temp holding place? I hope this is clear, I&#8217;m not a C++ pro like some of you. It just took me a while to understand it because of this seemingly unnecessary assignment. Please let me know if there is a good reason for doing so. Thanks -Zach</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-76476">
		<div id="div-comment-76476" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/fbeccfbfe3a7dac20448088262741e5a@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Zach</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-76476">
		January 14, 2010 at 7:32 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Disregard that. I figured it out. Upon further examination I realized that if you don&#8217;t continually check against your hold value, the last value that evaluated as &#8220;true&#8221; gets swapped, in this case 40. Had it been checking against nSmallestIndex, which gets incrementally smaller with each check, the loop would be checking 40 &lt; 10 rather than 40 &lt; 50. For the record, this is a hard concept to grab when your asked to write one off the top of your head lol. I hope I get quicker with this stuff.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-louisawasjerry even thread-even depth-1 clearfix" id="comment-78104">
		<div id="div-comment-78104" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/dbcf0801981b448e43b00bb56271888c@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Louisawasjerry</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78104">
		February 9, 2010 at 8:32 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi<br />
i m new to c++<br />
could any one explain to me that how is this for for loops work</p>
<p>1)for (int nStartIndex = 0; nStartIndex &lt; nSize; nStartIndex++)</p>
<p>2)for(int nCurrentIndex = nStartIndex + 1; nCurrentIndex &lt; nSize; nCurrentIndex++)</p>
<p>thank</p>
		</div>
</li>
		<li class="comment byuser comment-author-louisawasjerry odd alt thread-odd thread-alt depth-1 clearfix" id="comment-78142">
		<div id="div-comment-78142" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/dbcf0801981b448e43b00bb56271888c@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Louisawasjerry</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78142">
		February 10, 2010 at 6:17 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>#include<br />
using namespace std;</p>
<p>int main()<br />
{<br />
	const int nSize=5;<br />
	int anArray[nSize]={30, 50, 20, 10, 40};<br />
	//cout&lt;&lt;anArray[nSize]&lt;&lt;endl;</p>
<p>	for(int Indexzero=0;Indexzero&lt;nSize;Indexzero++)<br />
	{<br />
		int nSmallestIndex=Indexzero;<br />
		//cout&lt;&lt;anArray[nSmallestIndex];<br />
		for(int nCurrentIndex=Indexzero;nCurrentIndex&lt;nSize;nCurrentIndex++)<br />
		{<br />
			if(anArray[nCurrentIndex]&lt;anArray[nSmallestIndex])<br />
				nSmallestIndex=nCurrentIndex;<br />
				//cout&lt;&lt;anArray[nSmallestIndex];<br />
		}<br />
		swap(anArray[Indexzero],anArray[nSmallestIndex]);</p>
<p>		cout&lt;&lt;anArray[Indexzero]&lt;&lt; &quot; &quot;&lt;&lt;anArray[nSmallestIndex]&lt;&lt;endl;<br />
		cout&lt;&lt;endl;<br />
	}</p>
<p>system(&quot;pause&quot;);<br />
return 0;<br />
}</p>
<p>could anyone explain to me, please<br />
results obtain 10 30<br />
               20 50<br />
               30 50<br />
               40 50<br />
               50 50<br />
in my second for loop, i leave for int nCurrentIndex=Indexzero instead of  int nCurrentIndex=Indexzero+1, but i still get the results. why?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-louisawasjerry even depth-2 clearfix" id="comment-78143">
		<div id="div-comment-78143" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/dbcf0801981b448e43b00bb56271888c@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Louisawasjerry</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78143">
		February 10, 2010 at 6:20 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>results obtain<br />
10 30<br />
20 50<br />
30 50<br />
40 50<br />
50 50</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-80681">
		<div id="div-comment-80681" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/897b5d328ac4229a3ece812528ceef28@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">linus</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-80681">
		March 16, 2010 at 8:19 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>// array.cpp : Defines the entry point for the console application.<br />
//</p>
<p>#include &#8220;stdafx.h&#8221;<br />
#include </p>
<p>int main()<br />
{<br />
	using namespace std;<br />
	const int cNumberOfElements=6;<br />
	int anScores[cNumberOfElements]={30,60,20,50,40,10};</p>
<p>	for (int i=0;i&lt;cNumberOfElements-1;i++)<br />
	{<br />
		for (int j=i+1;j&lt;cNumberOfElements;j++)<br />
		{<br />
			if (anScores[i]&lt;anScores[j]) swap(anScores[i],anScores[j]);<br />
		}<br />
	}<br />
	cout &lt;&lt;&quot;arranged in descending order&quot;&lt;&lt;endl;<br />
	for (int i=0; i&lt;cNumberOfElements;i++)<br />
	{<br />
		cout&lt;&lt;anScores[i]&lt;&lt;&quot;\t&quot;;<br />
	}<br />
	return 0;<br />
}</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-84254">
		<div id="div-comment-84254" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/741521d60beeebff287baca1f6281ea8@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.gmail.com/default.htm' rel='external nofollow' class='url'>amit mago</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-84254">
		May 6, 2010 at 11:38 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>sir  i want tjhe code of insert a new element in array in c  and please<br />
little explain it too</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-84984">
		<div id="div-comment-84984" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7e1cda44c236c7e61c7d946a4baf6c91@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.judas-price.de/default.htm' rel='external nofollow' class='url'>equu</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-84984">
		May 19, 2010 at 7:57 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>My 2ct:</p>
<pre>
#include &lt;algorithm&gt; // for swap
#include &lt;iostream&gt;

int main() {
    using namespace std;

    const int nSize = 6;
    int anArray[nSize] = { 30, 60, 20, 50, 40, 10 };

    for (int i = 0; i &lt; nSize; i++) {
        for (int j = i + 1; j &lt; nSize; j++) {
            if (anArray[j] &lt; anArray[i]) {
                swap(anArray[i], anArray[j]);
            }
        }
    }

    for (int i = 0; i &lt; nSize; i++) {
        cout &lt;&lt; anArray[i] &lt;&lt; &quot; &quot;;
    }

    cout &lt;&lt; endl;

    return 0;
}
</pre>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-92381">
		<div id="div-comment-92381" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0fcf9c5b18adec5282cb293cff56552a@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Hong Nguyen</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-92381">
		September 20, 2010 at 11:18 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>should a check need to be added before calling swap function? I think that the &#8220;swap&#8221; function should be called if the 2nd parameter is either &#8216;!=&#8217; or &#8216;&gt;&#8217; the first parameter.  for example,<br />
if (anArray[nStartIndex] != anArray[nSmallestIndex])<br />
{<br />
   swap(anArray[nStartIndex], anArray[nSmallestIndex]);<br />
}</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-94381">
		<div id="div-comment-94381" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1463ebd6767b0039d21d9edacab03eed@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../yahoomail.com/default.htm' rel='external nofollow' class='url'>marilyn</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-94381">
		October 20, 2010 at 6:45 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>can you give me an example that will sort the names using c++.<br />
thank you.</p>
		</div>
</li>
		<li class="comment byuser comment-author-azmath even thread-odd thread-alt depth-1 clearfix" id="comment-95092">
		<div id="div-comment-95092" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1c6ca56d17a68ab4c9314be2a9f16638@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">azmath</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95092">
		January 5, 2011 at 9:26 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>can you give me an example that will sort the keyborad input value using c++.(string compare)</p>
		</div>
</li>
		<li class="comment byuser comment-author-geexlenude odd alt thread-even depth-1 clearfix" id="comment-95094">
		<div id="div-comment-95094" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9c18b45dba31c22c3ddd7909aee11c24@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">GeexLenuDe</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95094">
		January 6, 2011 at 1:28 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>It can be done without #include<br />
<code>&lt;pre&gt;<br />
//take the comments if you are using vc++ version 2005<br />
//#include “stdafx.h”<br />
//including the input and output header library<br />
#include &lt;iostream&gt; </p>
<p>//using the namespace std for not putting it again<br />
using namespace std;</p>
<p>//declaring a constant value that is the size of our array<br />
const int nNumStudents = 5;</p>
<p>//declaring all the functions that won&#039;t return any value<br />
void printArray(), swapNum(int, int), sortArray(), findLower(int);</p>
<p>//declaring our array<br />
int anScores[nNumStudents] = { 50, 43, 80, 70, 57 };</p>
<p>//declaring the min score variables<br />
int nMinScore = 0, nMinScoreIndex = 0;</p>
<p>//defining the function that will print the array<br />
void printArray(){</p>
<p>    //using a for loop to print the array<br />
    for(int nStudent = 0;nStudent &lt; nNumStudents; nStudent++) {</p>
<p>        //printing our array<br />
        cout&lt;&lt; anScores[nStudent]&lt;&lt; endl;<br />
    }<br />
}</p>
<p>//defining our function that will find the lowest number from an starting index<br />
void findLower(int nStartIndex = 0){</p>
<p>    //defining the lowest score in of all the array from an starting index<br />
    nMinScore = anScores[nStartIndex];</p>
<p>    //say that if the starting index is greater than the size of the array<br />
    if(nStartIndex &gt; nNumStudents){</p>
<p>        //then the starting index is as the size of the array<br />
        nStartIndex = nNumStudents;<br />
    } else if(nStartIndex &lt; 0) {</p>
<p>        //but if is lower than cero then our starting index is 0<br />
        nStartIndex = 0;<br />
    }</p>
<p>    //increase the starting index while it is lower than our array size<br />
    for(;nStartIndex &lt; nNumStudents; nStartIndex++) { </p>
<p>        //checking if the current score is lower than the lowest so<br />
        if (anScores[nStartIndex] &lt;= nMinScore) {</p>
<p>            //the lowest score is the same as the current score<br />
            nMinScore = anScores[nStartIndex];</p>
<p>            //defining the min score index that is the same as current index<br />
            nMinScoreIndex = nStartIndex;<br />
        }<br />
    }<br />
}</p>
<p>//defining our function swap to flip the elements of the array<br />
void swapNum(int nArrayIndex = 0, int nArrayIndex2 = 0){</p>
<p>    //checking if both index are lower than the array size<br />
    if(nArrayIndex&lt;nNumStudents&amp;&amp;nArrayIndex2&lt;nNumStudents){</p>
<p>        //defining the values of each number from the index given in 2 variables<br />
        int nValue  = anScores[nArrayIndex];<br />
        int nValue2 = anScores[nArrayIndex2];</p>
<p>        //swapping the values of each index<br />
        anScores[nArrayIndex2]  = nValue;<br />
        anScores[nArrayIndex]  = nValue2;<br />
    }<br />
}</p>
<p>//now defining the function that will sort our array<br />
void sortArray(){</p>
<p>    //using a for loop to do so<br />
    for(int nStudent = 0; nStudent &lt; nNumStudents; nStudent++){</p>
<p>        //find the lowest number and using the current student as starting index<br />
        findLower(nStudent);<br />
        //swapping the current student with the lowest value index of the array<br />
        swapNum(nStudent, nMinScoreIndex);<br />
    }<br />
}</p>
<p>//defining the main function<br />
int main(){</p>
<p>    //outputting the following text<br />
    cout&lt;&lt; &quot;The scores are:&quot; &lt;&lt; endl;</p>
<p>    // printing our array<br />
    printArray();</p>
<p>    //sorting the array<br />
    sortArray();</p>
<p>    //outputting the following text<br />
    cout&lt;&lt; &quot;The sorted scores are:&quot; &lt;&lt; endl;</p>
<p>    //printing again the array to check how it was sorted<br />
    printArray();</p>
<p>    //pause used in windows systems<br />
    system(&quot;pause&quot;);<br />
}<br />
&lt;/pre&gt;</code></p>
		</div>
</li>
		<li class="comment byuser comment-author-auasp even thread-odd thread-alt depth-1 clearfix" id="comment-95653">
		<div id="div-comment-95653" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/287e685c290e9c5c3628aa93c9bef739@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">AUASP</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95653">
		July 2, 2011 at 2:45 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>a single statement can swap 2 values.<br />
a^=b^=a^=b;//swaps a and b</p>
		</div>
</li>
		<li class="comment byuser comment-author-divyank odd alt thread-even depth-1 clearfix" id="comment-95859">
		<div id="div-comment-95859" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1e6c6a963bfc8372e6f13e0009fc8ba0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Divyank</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95859">
		August 14, 2011 at 5:18 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Can anyone tell me what is wrong with this code ?</p>
<pre>
#include &lt;iostream&gt;
#include &lt;algorithm&gt;

int main()
{   using namespace std ;

const int x = 9 ;
int anarray[x] = {5,3,767,234,656,34,786,264,237} ;
for(int start = 0 ; start&lt;x ; start++)
{
    int small = start ;
    for(int current = start +1 ;current&lt;x ; current++)
    {
        if(anarray[current]&lt;anarray[start])
        small = current ;
    }
    swap(anarray[start],anarray[small]) ;
}
cout&lt;&lt;anarray[0]&lt;&lt;&quot;\t&quot;&lt;&lt;anarray[1]&lt;&lt;&quot;\t&quot;&lt;&lt;anarray[2]&lt;&lt;&quot;\t&quot;&lt;&lt;anarray[3]&lt;&lt;&quot;\t&quot;&lt;&lt;anarray[4]&lt;&lt;&quot;\t&quot;&lt;&lt;
anarray[5]&lt;&lt;&quot;\t&quot;&lt;&lt;anarray[6]&lt;&lt;&quot;\t&quot;&lt;&lt;anarray[7]&lt;&lt;&quot;\t&quot;&lt;&lt;anarray[8] ;
return 0 ; }
</pre>
<p>It outputs -</p>
<p>3       5       237     34      264     234     767     656     786</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars even depth-2 clearfix" id="comment-95863">
		<div id="div-comment-95863" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95863">
		August 14, 2011 at 11:29 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Because you don&#8217;t need to compare if current number is bigger than the &#8216;start&#8217;, you need to compare it to the smallest index (small).</p>
		</div>
</li>
		<li class="comment byuser comment-author-octavsly odd alt depth-2 clearfix" id="comment-95865">
		<div id="div-comment-95865" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9fb25d52841e11091277d5cbdcdc94d4@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">octavsly</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95865">
		August 14, 2011 at 11:40 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>@Divyank</p>
<p>You need to change the<br />
<code><br />
if(anarray[current]&lt;anarray[start])<br />
</code><br />
with<br />
<code><br />
if(anarray[current]&lt;anarray[small])<br />
</code></p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-divyank even thread-odd thread-alt depth-1 clearfix" id="comment-95867">
		<div id="div-comment-95867" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1e6c6a963bfc8372e6f13e0009fc8ba0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Divyank</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95867">
		August 15, 2011 at 3:59 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">Log in to Reply</a></span>		 
		</div>
		<p>Thanks for the help guys<br />
I was so puzzled by the problem that I even tried another compiler.<br />
AWSOME tutorials, Alex</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f64-sorting-an-array-using-selection-sort_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../63-arrays-and-loops/default.htm" rel="prev">6.3 &#8212; Arrays and loops</a> &nbsp;</div><div class="newer">&nbsp; <a href="../a3-using-libraries-with-codeblocks/default.htm" rel="next">A.3 &#8212; Using libraries with Code::Blocks</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'93'});
var load_cmc = function(){linktracker_init(3928254,93,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.574 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 05:57:04 -->
<!-- Compression = gzip -->