<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0077)http://www.learncpp.com/cpp-tutorial/14-a-first-look-at-functions/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>1.4 &#8212; A first look at functions &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 1.4 &#8212; A first look at functions Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='Section 1.3 updated' href='../../site-news/section-13-updated/default.htm' />
<link rel='next' title='Recent news box on front page for Tiga 1.0.2 theme (obsoleted)' href='../../wordpress/recent-news-box-on-front-page-for-tiga-102-theme/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-n' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-23 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../13-a-first-look-at-variables/default.htm" rel="prev">1.3 &#8212; A first look at variables (and cin)</a> &nbsp;</div><div class="newer">&nbsp; <a href="../16-whitespace-and-basic-formatting/default.htm" rel="next">1.6 &#8212; Whitespace and basic formatting</a> &raquo;</div></div>
<div class="post-23 post type-post status-publish format-standard hentry category-cpp-tutorial" id="post-23">


<div class="post-headline">		<h1>1.4 &#8212; A first look at functions</h1>
		</div>
<div class="post-byline">By Alex, on May 31st, 2007</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>A <strong>function</strong> is a sequence of statements designed to do a particular job.  You already know that every program must have a function named main().  However, most programs have many functions, and they all work analogously to main.</p>
<p>Often, your program needs to interrupt what it is doing to temporarily do something else.  You do this in real life all the time.  For example, you might be reading a book when you remember you need to make a phone call.  You put a bookmark in your book, make the phone call, and when you are done with the phone call, you return to your book where you left off.</p>
<p>C++ programs work the same way.  A program will be executing statements sequentially inside one function when it encounters a function call.  A <strong>function call</strong> is an expression that tells the CPU to interrupt the current function and execute another function.  The CPU &#8220;puts a bookmark&#8221; at the current point of execution, and then <strong>calls</strong> (executes) the function named in the function call.  When the called function terminates, the CPU goes back to the point it bookmarked, and resumes execution.</p>
<p>Here is a sample program that shows how new functions are declared and called:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
//#include &lt;stdafx.h&gt; // Visual Studio users need to uncomment this line
#include &lt;iostream&gt;

// Declaration of function DoPrint()
void DoPrint()
{
    using namespace std;  // we need this in each function that uses cout and endl
    cout &lt;&lt; &quot;In DoPrint()&quot; &lt;&lt; endl;
}

// Declaration of main()
int main()
{
    using namespace std;  // we need this in each function that uses cout and endl
    cout &lt;&lt; &quot;Starting main()&quot; &lt;&lt; endl;
    DoPrint(); // This is a function call to DoPrint()
    cout &lt;&lt; &quot;Ending main()&quot; &lt;&lt; endl;
    return 0;
}
</pre>
<p>This program produces the following output:</p>
<pre>
Starting main()
In DoPrint()
Ending main()
</pre>
<p>This program begins execution at the top of main(), and the first line to be executed prints <code>Starting main()</code>.  The second line in main is a function call to DoPrint.  At this point, execution of statements in main() is suspended, and the CPU jumps to DoPrint().  The first (and only) line in DoPrint prints <code>In DoPrint()</code>.  When DoPrint() terminates, the caller (main()) resumes execution where it left off.  Consequently, the next statment executed in main prints <code>Ending main()</code>.</p>
<p>Functions can be called multiple times:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
//#include &lt;stdafx.h&gt; // Visual Studio users need to uncomment this line
#include &lt;iostream&gt;

// Declaration of function DoPrint()
void DoPrint()
{
    using namespace std;
    cout &lt;&lt; &quot;In DoPrint()&quot; &lt;&lt; endl;
}

// Declaration of main()
int main()
{
    using namespace std;
    cout &lt;&lt; &quot;Starting main()&quot; &lt;&lt; endl;
    DoPrint(); // This is a function call to DoPrint()
    DoPrint(); // This is a function call to DoPrint()
    DoPrint(); // This is a function call to DoPrint()
    cout &lt;&lt; &quot;Ending main()&quot; &lt;&lt; endl;
    return 0;
}
</pre>
<p>This program produces the following output:</p>
<pre>
Starting main()
In DoPrint()
In DoPrint()
In DoPrint()
Ending main()
</pre>
<p>In this case, main() is interrupted 3 times, once for each call to DoPrint().</p>
<p>Main isn&#8217;t the only function that can call other functions.  In the following example, DoPrint() calls a second function, DoPrint2().</p>
<pre class="brush: cpp; title: ; notranslate" title="">
//#include &lt;stdafx.h&gt; // Visual Studio users need to uncomment this line
#include &lt;iostream&gt;

void DoPrint2()
{
    using namespace std;
    cout &lt;&lt; &quot;In DoPrint2()&quot; &lt;&lt; endl;
}

// Declaration of function DoPrint()
void DoPrint()
{
    using namespace std;
    cout &lt;&lt; &quot;Starting DoPrint()&quot; &lt;&lt; endl;
    DoPrint2(); // This is a function call to DoPrint2()
    DoPrint2(); // This is a function call to DoPrint2()
    cout &lt;&lt; &quot;Ending DoPrint()&quot; &lt;&lt; endl;
}

// Declaration of main()
int main()
{
    using namespace std;
    cout &lt;&lt; &quot;Starting main()&quot; &lt;&lt; endl;
    DoPrint(); // This is a function call to DoPrint()
    cout &lt;&lt; &quot;Ending main()&quot; &lt;&lt; endl;
    return 0;
}
</pre>
<p>This program produces the following output:</p>
<pre>
Starting main()
Starting DoPrint()
In DoPrint2()
In DoPrint2()
Ending DoPrint()
Ending main()
</pre>
<p><strong>Return values</strong></p>
<p>If you remember, when main finishes executing, it returns a value back to the operating system (the caller) by using a return statement.  Functions you write can return a single value to their caller as well.  We do this by changing the return type of the function in the function&#8217;s declaration.  A return type of <strong>void</strong> means the function does not return a value.  A return type of int means the function returns an integer value to the caller.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// void means the function does not return a value to the caller
void ReturnNothing()
{
    // This function does not return a value
}

// int means the function returns an integer value to the caller
int Return5()
{
    return 5;
}
</pre>
<p>Let&#8217;s use these functions in a program:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; Return5(); // prints 5
cout &lt;&lt; Return5() + 2; // prints 7
cout &lt;&lt; ReturnNothing(); // This will not compile
</pre>
<p>In the first statement, Return5() is executed.  The function returns the value of 5 back to the caller, which passes that value to cout.</p>
<p>In the second statement, Return5() is executed and returns the value of 5 back to the caller.  The expression 5 + 2 is then evaluated to 7.  The value of 7 is passed to cout.</p>
<p>In the third statement, ReturnNothing() returns void.  It is not valid to pass void to cout, and the compiler will give you an error when you try to compile this line.</p>
<p>One commonly asked question is, &#8220;Can my function return multiple values using a return statement?&#8221;.  The answer is no.  Functions can only return a single value using a return statement.  However, there are ways to work around the issue, which we will discuss when we get into the in-depth section on functions.</p>
<p><strong>Returning to main</strong></p>
<p>You now have the conceptual tools to understand how the main() function actually works.  When the program is executed, the operating system makes a function call to main().  Execution then jumps to the top of main.  The statements in main are executed sequentially.  Finally, main returns a integer value (usually 0) back to the operating system.  This is why main is declared as <code>int main()</code>.</p>
<p>Some compilers will let you get away with declaring main as <code>void main()</code>.  Technically this is illegal.  When these compilers see <code>void main()</code>, they interpret it as:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int main()
{
    // your code here
    return 0;
}
</pre>
<p>You should always declare main as returning an int and your main function should return 0 (or another integer if there was an error).</p>
<p><strong>Parameters</strong></p>
<p>In the return values subsection, you learned that a function can return a value back to the caller.  <strong>Parameters</strong> are used to allow the caller to pass information to a function!  This allows functions to be written to perform generic tasks without having to worry about the specific values used, and leaves the exact values of the variables up to the caller.  </p>
<p>This is a case that is best learned by example.  Here is an example of a very simple function that adds two numbers together and returns the result to the caller.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
//#include &lt;stdafx.h&gt; // Visual Studio users need to uncomment this line
#include &lt;iostream&gt;

// add takes two integers as parameters, and returns the result of their sum
// add does not care what the exact values of x and y are
int add(int x, int y)
{
    return x + y;
}

int main()
{
    using namespace std;
    // It is the caller of add() that decides the exact values of x and y
    cout &lt;&lt; add(4, 5) &lt;&lt; endl; // x=4 and y=5 are the parameters
    return 0;
}
</pre>
<p>When function add() is called, x is assigned the value 4, and y is assigned the value 5.  The function evaluates x + y, which is the value 9, and then returns this value to the caller.  This value of 9 is then sent to cout to be printed on the screen.</p>
<p>Output:</p>
<pre>
9
</pre>
<p>Let&#8217;s take a look at a couple of other calls to functions():</p>
<pre class="brush: cpp; title: ; notranslate" title="">
//#include &lt;stdafx.h&gt; // Visual Studio users need to uncomment this line
#include &lt;iostream&gt;

int add(int x, int y)
{
    return x + y;
}

int multiply(int z, int w)
{
    return z * w;
}

int main()
{
    using namespace std;
    cout &lt;&lt; add(4, 5) &lt;&lt; endl; // evalutes 4 + 5
    cout &lt;&lt; add(3, 6) &lt;&lt; endl; // evalues 3 + 6
    cout &lt;&lt; add(1, 8) &lt;&lt; endl; // evalues 1 + 8

    int a = 3;
    int b = 5;
    cout &lt;&lt; add(a, b) &lt;&lt; endl; // evaluates 3 + 5

    cout &lt;&lt; add(1, multiply(2, 3)) &lt;&lt; endl; // evalues 1 + (2 * 3)
    cout &lt;&lt; add(1, add(2, 3)) &lt;&lt; endl; // evalues 1 + (2 + 3)
    return 0;
}
</pre>
<p>This program produces the output:</p>
<pre>
9
9
9
8
7
6
</pre>
<p>The first three statements are straightforward.</p>
<p>The fourth is relatively easy as well:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
    int a = 3;
    int b = 5;
    cout &lt;&lt; add(a, b) &lt;&lt; endl; // evaluates 3 + 5
</pre>
<p>In this case, add() is called where x = a and y = b.  Since a = 3 and b = 5, add(a, b) = add(3, 5), which resolves to 8.</p>
<p>Let&#8217;s take a look at the first tricky statement in the bunch:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
    cout &lt;&lt; add(1, multiply(2, 3)) &lt;&lt; endl; // evalues 1 + (2 * 3)
</pre>
<p>When the CPU tries to call function add(), it assigns x = 1, and y = multiply(2, 3).  y is not an integer, it is a function call that needs to be resolved.  So before the CPU calls add(), it calls multiply() where z = 2 and w = 3. multiply(2, 3) produces the value of 6, which is assigned to add()&#8217;s parameter y.  Since x = 1 and y = 6, add(1, 6) is called, which evaluates to 7.  The value of 7 is passed to cout.</p>
<p>Or, less verbosely (where the => symbol is used to represent evaluation):<br />
add(1, multiply(2, 3)) => add(1, 6) => 7</p>
<p>The following statement looks tricky because one of the parameters given to add() is another call to add().</p>
<pre class="brush: cpp; title: ; notranslate" title="">
    cout &lt;&lt; add(1, add(2, 3)) &lt;&lt; endl; // evalues 1 + (2 + 3)
</pre>
<p>But this case works exactly the same as the above case where one of the parameters is a call to multiply().</p>
<p>Before the CPU can evaluate the outer call to add(), it must evaluate the inner call to add(2, 3).  add(2, 3) evaluates to 5.  Now it can evaluate add(1, 5), which evaluates to the value 6.  cout is passed the value 6.</p>
<p>Less verbosely:<br />
add(1, add(2, 3)) => add(1, 5) => 6</p>
<p><strong>Effectively using functions</strong></p>
<p>One of the biggest challenges new programmers encounter (besides learning the language) is learning when and how to use functions effectively.  Functions offer a great way to break your program up into manageable and reusable parts, which can then be easily connected together to perform a larger and more complex task.  By breaking your program into smaller parts, the overall complexity of the program is reduced, which makes the program both easier to write and to modify.</p>
<p>Typically, when learning C++, you will write a lot of programs that involve 3 subtasks:</p>
<ol>
<li>Reading inputs from the user
<li>Calculating a value from the inputs
<li>Printing the calculated value
</ol>
<p>For simple programs, reading inputs from the user can generally be done in main().  However, step #2 is a great candidate for a function.  This function should take the user inputs as a parameter, and return the calculated value.  The calculated value can then be printed (either directly in main(), or by another function if the calculated value is complex or has special printing requirements).</p>
<p>A good rule of thumb is that each function should perform one (and only one) task.  New programmers often write functions that combine steps 2 and 3 together.  However, because calculating a value and printing it are two different tasks, this violates the one and only one task guideline.  Ideally, a function that calculates a value should return the value to the caller and let the caller decide what to do with the calculated value.</p>
<p><strong>Quiz</strong></p>
<p>1) What&#8217;s wrong with this program fragment?</p>
<pre class="brush: cpp; title: ; notranslate" title="">
void multiply(int x, int y)
{
    return x * y;
}

int main()
{
    cout &lt;&lt; multiply(4, 5) &lt;&lt; endl;
    return 0;
}
</pre>
<p>2) What&#8217;s wrong with this program fragment?</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int multiply(int x, int y)
{
    int product = x * y;
}

int main()
{
    cout &lt;&lt; multiply(4, 5) &lt;&lt; endl;
    return 0;
}
</pre>
<p>3) What value does the following program fragment print?</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int add(int x, int y, int z)
{
    return x + y + z;
}

int multiply(int x, int y)
{
    return x * y;
}

int main()

{
    cout &lt;&lt; multiply(add(1, 2, 3), 4) &lt;&lt; endl;
    return 0;
}
</pre>
<p>4) Write a function called doubleNumber() that takes one integer parameter and returns double it&#8217;s value.</p>
<p>5) Write a complete program that reads an integer from the user (using cin, discussed in section 1.3), doubles it using the doubleNumber() function you wrote for question 4, and then prints the doubled value out to the console.</p>
<p><strong>Quiz Answers</strong></p>
<p>To see these answers, select the area below with your mouse.</p>
<p>1) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id649441813'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id649441813" style="display:none">multiply() is defined as returning void, which means it can&#8217;t return a value.  Since the function is trying to return a value, this function will produce a compiler error.  The function should return an int.</div>
<p>2) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id344562057'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id344562057" style="display:none">multiply() calculates a value and puts the result in a variable, but never returns the value to the caller.  Because there is no return statement, and the function is supposed to return an int, this will produce a compiler error.</div>
<p>3) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id295608959'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id295608959" style="display:none">multiply is called where x = add(1, 2, 3), and y = 4.  First, the CPU resolves x = add(1, 2, 3), which returns 1 + 2 + 3, or x = 6.  multiply(6, 4) = 24, which is the answer.</div>
<p>4) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id1881586888'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id1881586888" style="display:none">
<pre class="brush: cpp; title: ; notranslate" title="">
int doubleNumber(int x)
{
    return 2 * x;
}
</pre>
</div>
<p>5) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id1366111524'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id1366111524" style="display:none">
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;

int doubleNumber(int x)
{
    return 2 * x;
}

int main()
{
    using namespace std;
    int x;
    cin &gt;&gt; x;
    cout &lt;&lt; doubleNumber(x) &lt;&lt; endl;
    return 0;
}

// The following is an alternate way of doing main:
int main()
{
    using namespace std;
    int x;
    cin &gt;&gt; x;
    x = doubleNumber(x);
    cout &lt;&lt; x &lt;&lt; endl;
    return 0;
}
</pre>
</div>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../15-a-first-look-at-operators/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 1.5 &#8212; A first look at operators</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter1" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../13-a-first-look-at-variables/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 1.3 &#8212; A first look at variables (and cin)</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../13-a-first-look-at-variables/default.htm" rel="prev">1.3 &#8212; A first look at variables (and cin)</a> &nbsp;</div><div class="newer">&nbsp; <a href="../16-whitespace-and-basic-formatting/default.htm" rel="next">1.6 &#8212; Whitespace and basic formatting</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">225 comments to 1.4 &#8212; A first look at functions</h3>

	<div class="clearfix navigation-comments-above"><a class="prev page-numbers" href="comment-page-2/#comments">&laquo; Older Comments</a>
<a class='page-numbers' href='comment-page-1/#comments'>1</a>
<a class='page-numbers' href='comment-page-2/#comments'>2</a>
<span class='page-numbers current'>3</span></div>
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment byuser comment-author-victory501 even thread-even depth-1 clearfix" id="comment-95314">
		<div id="div-comment-95314" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2a46a87f0ca45585c6d9b1c932112fcd@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">victory501</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95314">
		April 10, 2011 at 10:01 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>does this code work for #5?</p>
<p><code></p>
<p>#include "stdafx.h"</p>
<p>#include </p>
<p>int doublenumber(int x)<br />
{<br />
	return 2 * x;<br />
}<br />
int main()<br />
{<br />
	int x;<br />
	x = 5;<br />
    using namespace std;<br />
    cout &lt;&gt; x;<br />
    cout &lt;&lt; &quot;You entered &quot; &lt;&lt; 2 * x &lt;&lt; endl;</p>
<p>    return 0;<br />
}</code></p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-scottt117 odd alt depth-2 clearfix" id="comment-95421">
		<div id="div-comment-95421" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3329e1a687959338322838f58610ee32@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Scottt117</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95421">
		May 7, 2011 at 2:33 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>My &#8216;double number&#8217; code:</p>
<p>#include<br />
#include </p>
<p>int main ()<br />
{<br />
    using namespace std;<br />
    int x;<br />
    cin &gt;&gt; x;<br />
    cout &lt;&lt; &quot; &quot; &lt;&lt; endl;<br />
    cout &lt;&lt; &quot;multiplied by 2 is: &quot;;<br />
    cout &lt;&lt; x*2 &lt;&lt; endl;<br />
    system (&quot;PAUSE&quot;);<br />
    return 0;</p>
<p>}</p>
<p>Simple.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-devilrider666 even thread-odd thread-alt depth-1 clearfix" id="comment-95325">
		<div id="div-comment-95325" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/482216aebb33b0264557d40e12593a87@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Aditya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95325">
		April 13, 2011 at 3:44 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>why is declaring void main()<br />
illegal??</p>
<p>my compiler has no problem in compiling it.</p>
<p>also when we enter return 0;<br />
are we able to see it in the output screen??</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-lynx1241 odd alt depth-2 clearfix" id="comment-95366">
		<div id="div-comment-95366" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2d0c67e0ef00634fd2244a2859ae5fb0@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">lynx1241</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95366">
		April 24, 2011 at 4:42 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>As the text above already stated, <b>some</b> compilers will let you get away with declaring main as void main(). But they will still interpret it as:</p>
<p><code>int main()<br />
{<br />
    // your code here<br />
    return 0;<br />
}</code></p>
<p>Others will just generate an error.</p>
		</div>
</li>
		<li class="comment byuser comment-author-bdbbdb2727 even depth-2 clearfix" id="comment-96521">
		<div id="div-comment-96521" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d8762fba816f7ebae3a47dc43961741a@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">brandon broadwater</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-96521">
		November 30, 2011 at 6:10 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>the reason that you cant use the statement &#8220;void&#8221; for the main function, is because in the main function, you have to return an integer. you know how you have to return 0; at the end of the main function? that just means you should have no errors. but anyway, 0 is an integer, and thats why you always have to use &#8220;int&#8221;.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-enak101 odd alt thread-even depth-1 clearfix" id="comment-95363">
		<div id="div-comment-95363" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0a1872d2b3b2ee4cd6418614a2de0184@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">enak101</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95363">
		April 23, 2011 at 7:09 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>I just wanted to say the answer for number 5 results in errors compiling. Visual C++ 2010. I used someone&#8217;s from comments and it worked fine.</p>
<p>// 1.4 (4).cpp : Defines the entry point for the console application.<br />
//</p>
<p>#include &#8220;stdafx.h&#8221;<br />
#include<br />
using namespace std;</p>
<p>int doubleNumber(int x)<br />
{<br />
    return 2 * x;<br />
}<br />
int main()<br />
{<br />
	cout &lt;&lt; &quot;Input a number to be doubled:&quot; &lt;&gt; x;<br />
	cout &lt;&lt; &quot;The number: &quot; &lt;&lt; x &lt;&lt; &quot; has been entered&quot; &lt;&lt; endl;<br />
	cout &lt;&lt; &quot;Your number has been doubled to: &quot; &lt;&lt; doubleNumber(x) &lt;&lt; endl;<br />
	return 0;<br />
}</p>
<p>This works fine.</p>
<p>#include<br />
02</p>
<p>03<br />
int doubleNumber(int x)<br />
04<br />
{<br />
05<br />
    return 2 * x;<br />
06<br />
}<br />
07</p>
<p>08<br />
int main()<br />
09<br />
{<br />
10<br />
    using namespace std;<br />
11<br />
    int x;<br />
12<br />
    cin &gt;&gt; x;<br />
13<br />
    cout &lt;&lt; doubleNumber(x) &lt;&gt; x;<br />
23<br />
    x = doubleNumber(x);<br />
24<br />
    cout &lt;&lt; x &lt;&lt; endl;<br />
25<br />
    return 0;<br />
26<br />
}</p>
<p>This doesn&#039;t work. I tried using each method of int main twice and that didn&#039;t work.</p>
<p>If you could change it that would be good for people in the future.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-lynx1241 even depth-2 clearfix" id="comment-95367">
		<div id="div-comment-95367" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2d0c67e0ef00634fd2244a2859ae5fb0@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">lynx1241</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95367">
		April 24, 2011 at 4:59 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Maybe you should consider removing the ..eNumber(x)<b>  x</b><b>;.. part and instead use the cin function as suggested. Also alter the empty preprocessor directive to
<pre>&lt;code&gt;#include &lt;iostream&gt;;&lt;code&gt;</pre>
<p>, and declare <code>using namespace std;</code> inside the functions wich use cout or cin. That should fix it.</b></p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-enak101 odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95364">
		<div id="div-comment-95364" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0a1872d2b3b2ee4cd6418614a2de0184@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">enak101</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95364">
		April 23, 2011 at 7:09 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Ignore the number lines there haha i didnt paste the number lines into IDE.</p>
		</div>
</li>
		<li class="comment byuser comment-author-cooper507 even thread-even depth-1 clearfix" id="comment-95371">
		<div id="div-comment-95371" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3c9a877d5fb9cee4c2add695866ec5ff@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">cooper507</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95371">
		April 24, 2011 at 8:36 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>ok guys quick question<br />
when you run this program why does the words &#8220;Starting DoPrint()&#8221; pop up before &#8220;In DoPrint2()&#8221; even the the DoPrint2()function is listed first?</p>
<p>#include &#8220;stdafx.h&#8221;<br />
#include </p>
<p>void DoPrint2()<br />
{<br />
    using namespace std;<br />
    cout &lt;&lt; &quot;In DoPrint2()&quot; &lt;&lt; endl;<br />
}</p>
<p>// Declaration of function DoPrint()<br />
void DoPrint()<br />
{<br />
    using namespace std;<br />
    cout &lt;&lt; &quot;Starting DoPrint()&quot; &lt;&lt; endl;<br />
    DoPrint2(); // This is a function call to DoPrint2()<br />
    DoPrint2(); // This is a function call to DoPrint2()<br />
    cout &lt;&lt; &quot;Ending DoPrint()&quot; &lt;&lt; endl;<br />
}</p>
<p>// Declaration of main()<br />
int main()<br />
{<br />
    using namespace std;<br />
    cout &lt;&lt; &quot;Starting main()&quot; &lt;&lt; endl;<br />
    DoPrint(); // This is a function call to DoPrint()<br />
    cout &lt;&lt; &quot;Ending main()&quot; &lt;&lt; endl;<br />
    return 0;<br />
}</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-a-random-noob odd alt depth-2 clearfix" id="comment-95455">
		<div id="div-comment-95455" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8b323e59e8e38f15578d719cee2c9437@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">A Random Noob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95455">
		May 15, 2011 at 3:02 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Because the DoPrint() function was called first by main().</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-wordpress even depth-3 clearfix" id="comment-95590">
		<div id="div-comment-95590" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7a06616091040333cab24133008167c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WordPress</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95590">
		June 18, 2011 at 10:28 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>The becomes virtually unnecessary when it comes to multiple functions being called. The main() function is ALWAYS the first function to start executing even if it may not be the first thing in the source code. Whatever function is called by main() will take action no matter what the order is in the source code. Order only matters inside functions.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-cooper507 odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95372">
		<div id="div-comment-95372" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3c9a877d5fb9cee4c2add695866ec5ff@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">cooper507</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95372">
		April 24, 2011 at 8:38 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>what exactly does the command &#8220;endl&#8221; do? i have an idea but i would like to know precisely what it does.</p>
<p>thx guys :)</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-a-random-noob even depth-2 clearfix" id="comment-95456">
		<div id="div-comment-95456" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8b323e59e8e38f15578d719cee2c9437@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">A Random Noob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95456">
		May 15, 2011 at 3:03 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>End Line.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-cooper507 odd alt thread-even depth-1 clearfix" id="comment-95373">
		<div id="div-comment-95373" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3c9a877d5fb9cee4c2add695866ec5ff@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">cooper507</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95373">
		April 24, 2011 at 8:41 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>do you have to have a main() function in all programs?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-a-random-noob even depth-2 clearfix" id="comment-95457">
		<div id="div-comment-95457" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8b323e59e8e38f15578d719cee2c9437@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">A Random Noob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95457">
		May 15, 2011 at 3:03 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Yes.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-cooper507 odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95374">
		<div id="div-comment-95374" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3c9a877d5fb9cee4c2add695866ec5ff@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">cooper507</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95374">
		April 24, 2011 at 8:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>in the piece of code, for example:</p>
<p>int add(int x, int y)<br />
{<br />
    return x + y;<br />
}</p>
<p>does it matter that when you create a function you have the (int x, int y) in the parenthesis? what does it do for the function? </p>
<p>heres another example:</p>
<p>int multiply(int z, int w)<br />
{<br />
    return z * w;<br />
}</p>
		</div>
</li>
		<li class="comment byuser comment-author-cooper507 even thread-even depth-1 clearfix" id="comment-95385">
		<div id="div-comment-95385" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3c9a877d5fb9cee4c2add695866ec5ff@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">cooper507</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95385">
		April 25, 2011 at 5:08 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>how do i activate numbered lines?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-a-random-noob odd alt depth-2 clearfix" id="comment-95458">
		<div id="div-comment-95458" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8b323e59e8e38f15578d719cee2c9437@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">A Random Noob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95458">
		May 15, 2011 at 3:04 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Depends on which IDE you&#8217;re using.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-homesweetrichard even thread-odd thread-alt depth-1 clearfix" id="comment-95447">
		<div id="div-comment-95447" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d085ba5f101996486964f33a78ce469e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Homesweetrichard</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95447">
		May 15, 2011 at 9:13 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>can we write it like this &#8220;void DoPrint() {&#8221; please sense its easier to read both my mac and me. Since this is universally understood. programming grammar.                 </p>
<p>Not like this<br />
&#8220;void DoPrint()<br />
{&#8221;<br />
Which is not universally understood grammar.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-a-random-noob odd alt depth-2 clearfix" id="comment-95459">
		<div id="div-comment-95459" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8b323e59e8e38f15578d719cee2c9437@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">A Random Noob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95459">
		May 15, 2011 at 3:06 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>You can do it that way too! :D</p>
<p>Programmers tend to use the second one because it makes it more clearer.(Is that a word? O.o)</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars even depth-3 clearfix" id="comment-95592">
		<div id="div-comment-95592" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95592">
		June 19, 2011 at 5:29 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>&#8220;It makes it more clear&#8221; would correct I think.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-homesweetrichard odd alt thread-even depth-1 clearfix" id="comment-95449">
		<div id="div-comment-95449" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d085ba5f101996486964f33a78ce469e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Homesweetrichard</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95449">
		May 15, 2011 at 10:50 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Also, this reads as if you could nest this (refering to the doprints section)&#8230; Or maybe im a idiot&#8230;</p>
<p>also i noticed all basic versions of math were used expect division, is there a reason why?</p>
<p>also why does this code work, Expecailly main2, i understand doprint and doprint2, but why does it understand main2. if it understands it as another main (which it doesnt appeer so, i have tryed removing main2 which has caused it to be ignored. I have also tryed moving it after main [main2 was ingored with our without the "main2();" in the main.].) Or is it for just having a name or does it have more privilage?</p>
<pre>
#include iostream

void DoPrint() {
	using namespace std;  // we need this in each function that uses cout and endl
	cout &lt;&lt; &quot;In DoPrint()&quot; &lt;&lt; endl;
	cout &lt;&lt; &quot;nice to meet you!&quot; &lt;&lt; endl;

}

int main2 () {
	using namespace std;
	cout &lt;&lt; &quot;print and main both are crazy if this works&quot; &lt;&lt; endl;
	cout &lt;&gt; x; // same

	}

int main () {
	using namespace std;
	cout &lt;&lt; &quot;Starting main()&quot; &lt;&lt; endl;
	cout &lt;&lt; &quot;Hello world!&quot; &lt;&lt; endl; //standard hellow world intro, 1.1
	DoPrint(); // This is a function call to DoPrint()
	main2();
	cout &lt;&lt; &quot;Ending main()&quot; &lt;&lt; endl;

	return 0;

}
</pre>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-a-random-noob even depth-2 clearfix" id="comment-95460">
		<div id="div-comment-95460" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8b323e59e8e38f15578d719cee2c9437@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">A Random Noob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95460">
		May 15, 2011 at 3:08 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>I am not a pro here, but, I think that there is only one main, main2 is the same as doprint2, but, main <b>isn&#8217;t</b> the same as doprint.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-da-rage44 odd alt depth-3 clearfix" id="comment-95919">
		<div id="div-comment-95919" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/34bcd193bfcd557780bce97f00dc5e5a@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Da-Rage44</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95919">
		August 22, 2011 at 10:14 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>You have a backwards &#8220;&lt;&quot; for one, that and you have no tags on  also even if you fix the &#8220;&lt;&quot; &quot;cout &lt;&lt; x;&quot;  still leaves x as an unidentified integer. Your function also has no return value. Here is your code fixed.<br />
#include &quot;stdafx.h&quot;<br />
#include </p>
<p>void DoPrint() {<br />
	using namespace std;  // we need this in each function that uses cout and endl<br />
	cout &lt;&lt; &quot;In DoPrint()&quot; &lt;&lt; endl;<br />
	cout &lt;&lt; &quot;nice to meet you!&quot; &lt;&lt; endl;</p>
<p>}</p>
<p>int main2 ()<br />
{<br />
	using namespace std;<br />
	int x = 4;<br />
	cout &lt;&lt; &quot;print and main both are crazy if this works&quot; &lt;&lt; endl;<br />
	cout &lt;&lt; x; // same</p>
<p>	return 0;<br />
	}</p>
<p>int main () {<br />
	using namespace std;<br />
	cout &lt;&lt; &quot;Starting main()&quot; &lt;&lt; endl;<br />
	cout &lt;&lt; &quot;Hello world!&quot; &lt;&lt; endl; //standard hellow world intro, 1.1<br />
	DoPrint(); // This is a function call to DoPrint()<br />
	main2();<br />
	cout &lt;&lt; &quot;Ending main()&quot; &lt;&lt; endl;</p>
<p>	return 0;</p>
<p>}<br />
X has been defined and your int main2() function has a return value.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-a-random-noob even depth-2 clearfix" id="comment-95461">
		<div id="div-comment-95461" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8b323e59e8e38f15578d719cee2c9437@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">A Random Noob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95461">
		May 15, 2011 at 3:09 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Also division is also used in C++. read on&#8230;</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-homesweetrichard odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95450">
		<div id="div-comment-95450" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d085ba5f101996486964f33a78ce469e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Homesweetrichard</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95450">
		May 15, 2011 at 10:53 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>int main2 () {<br />
	using namespace std;<br />
	cout &lt;&lt; &quot;print and main both are crazy if this works&quot; &lt;&lt; endl;<br />
	cout &lt;&gt; x; // same</p>
<p>	return -2;</p>
<p>	}</p>
		</div>
</li>
		<li class="comment byuser comment-author-homesweetrichard even thread-even depth-1 clearfix" id="comment-95451">
		<div id="div-comment-95451" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d085ba5f101996486964f33a78ce469e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Homesweetrichard</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95451">
		May 15, 2011 at 10:53 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>okay i cant get all my code and comments on..</p>
		</div>
</li>
		<li class="comment byuser comment-author-homesweetrichard odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95452">
		<div id="div-comment-95452" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d085ba5f101996486964f33a78ce469e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Homesweetrichard</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95452">
		May 15, 2011 at 10:57 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p><code><br />
#include &lt;iostream&gt;</p>
<p>void DoPrint() {<br />
	using namespace std;  // we need this in each function that uses cout and endl<br />
	cout &lt;&lt; &quot;In DoPrint()&quot; &lt;&lt; endl;<br />
	cout &lt;&lt; &quot;nice to meet you!&quot; &lt;&lt; endl;</p>
<p>}</p>
<p>int main2 () {<br />
	using namespace std;<br />
	cout &lt;&lt; &quot;print and main both are crazy if this works&quot; &lt;&lt; endl;<br />
	cout &lt;&lt; &quot;Enter a number: &quot;;  // no real reason for this being here other than to know the event happend</p>
<p>	int x;  // Same<br />
	cin &gt;&gt; x; // same</p>
<p>	}</p>
<p>int main () {<br />
	using namespace std;<br />
	cout &lt;&lt; &quot;Starting main()&quot; &lt;&lt; endl;<br />
	cout &lt;&lt; &quot;Hello world!&quot; &lt;&lt; endl; //standard hellow world intro, 1.1<br />
	DoPrint(); // This is a function call to DoPrint()<br />
	cout &lt;&lt; &quot;Ending main()&quot; &lt;&lt; endl;<br />
	main2();<br />
	return 0;</p>
<p>}<br />
</code></p>
		</div>
</li>
		<li class="comment byuser comment-author-homesweetrichard even thread-even depth-1 clearfix" id="comment-95453">
		<div id="div-comment-95453" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d085ba5f101996486964f33a78ce469e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Homesweetrichard</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95453">
		May 15, 2011 at 11:15 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>int crap () {<br />
	using namespace std;<br />
	cout &lt;&lt; &quot;crap, here&quot; &lt;&lt; endl;<br />
}</p>
<p>i also add that one, into the code most i got was a warning (warning: control reaches end of non-void function)(script still worked),  </p>
<p>main now looks like this</p>
<p>int main () {<br />
	using namespace std;<br />
	cout &lt;&lt; &quot;Starting main()&quot; &lt;&lt; endl;<br />
	cout &lt;&lt; &quot;roll call, world!&quot; &lt;&lt; endl; //standard hello world intro, 1.1<br />
	DoPrint(); // This is a function call to DoPrint()<br />
	cout &lt;&lt; &quot;Ending main()&quot; &lt;&lt; endl;<br />
	main2();<br />
	crap();<br />
	return 0;</p>
<p>}</p>
		</div>
</li>
		<li class="comment byuser comment-author-homesweetrichard odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95454">
		<div id="div-comment-95454" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d085ba5f101996486964f33a78ce469e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Homesweetrichard</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95454">
		May 15, 2011 at 12:12 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>is there a easyer way to do math with cpp, as if its not already hard enough to write already.</p>
		</div>
</li>
		<li class="comment byuser comment-author-ingthinks even thread-even depth-1 clearfix" id="comment-95542">
		<div id="div-comment-95542" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/26a2fe4f48ae147e8a14986b91eea566@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ingthinks</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95542">
		June 9, 2011 at 9:48 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Here is my solution to #5:</p>
<p>#include &#8220;stdafx.h&#8221;<br />
#include </p>
<p>int doubleNumber(int x) // doubles value of x<br />
{<br />
	return x * 2;<br />
}</p>
<p>int main()<br />
{<br />
	using namespace std;<br />
	int y;              // declares variable y<br />
	int x;              // declares variable x<br />
	cout &lt;&gt; x;           // defines x as users input<br />
	y = x;              // defines y as equal to x to display the number that was doubled<br />
	cout &lt;&lt; y &lt;&lt; &quot; doubled is &quot; &lt;&lt; doubleNumber(x) &lt;&lt; endl;<br />
	return 0;<br />
}</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars odd alt depth-2 clearfix" id="comment-95543">
		<div id="div-comment-95543" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95543">
		June 9, 2011 at 11:03 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>You don&#8217;t actually need y, as you can simply do this<br />
cout &lt;&lt; x &lt;&lt; &quot; doubled is &quot; &lt;&lt; doubleNumber(x) &lt;&lt; When you take the x the first time, it will hold the original number, when you use doubleNumber, it will output the result of x * 2.<br />
That way the code is more optimized, as it requires less memory to hold the values, and it will no longer need to assign the value of x to y, which is a waste of CPU cycles (I know that in this case the difference will be a nanosecond at most, however in bigger programs this difference might be seconds).</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-ingthinks even depth-3 clearfix" id="comment-95557">
		<div id="div-comment-95557" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/26a2fe4f48ae147e8a14986b91eea566@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ingthinks</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95557">
		June 14, 2011 at 12:46 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>i see, thanks for helping me to understand this better<br />
here is my updated code:</p>
<p>#include &#8220;stdafx.h&#8221;<br />
#include </p>
<p>int doubleNumber(int x) // doubles value of x<br />
{<br />
	return x * 2;<br />
}</p>
<p>int main()<br />
{<br />
	using namespace std;<br />
	int x;              // declares variable x<br />
	cout &lt;&gt; x;           // defines x as users input<br />
	cout &lt;&lt; x &lt;&lt; &quot; doubled is &quot; &lt;&lt; doubleNumber(x) &lt;&lt; endl;<br />
	return 0;<br />
}</p>
<p>same functionality as my original program but i can see how this is a better way of doing it</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-ingthinks odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95558">
		<div id="div-comment-95558" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/26a2fe4f48ae147e8a14986b91eea566@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ingthinks</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95558">
		June 14, 2011 at 12:47 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p><code></p>
<p>#include &quot;stdafx.h&quot;<br />
#include &lt;iostream&gt;</p>
<p>int doubleNumber(int x) // doubles value of x<br />
{<br />
	return x * 2;<br />
}</p>
<p>int main()<br />
{<br />
	using namespace std;<br />
	int x;              // declares variable x<br />
	cout &lt;&lt; &quot;Input an integer to double: &quot;;<br />
	cin &gt;&gt; x;           // defines x as users input<br />
	cout &lt;&lt; x &lt;&lt; &quot; doubled is &quot; &lt;&lt; doubleNumber(x) &lt;&lt; endl;<br />
	return 0;<br />
}<br />
</code></p>
		</div>
</li>
		<li class="comment byuser comment-author-wordpress even thread-even depth-1 clearfix" id="comment-95587">
		<div id="div-comment-95587" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7a06616091040333cab24133008167c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WordPress</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95587">
		June 18, 2011 at 9:52 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex, are parameters only used for mathematics?<br />
By the way, I found out a way to calculate the addition of two numbers with only one function =D</p>
<p>#include(less than)iostream(more than)<br />
#include(less than)conio.h(more than)<br />
using namespace std;<br />
int main(){//returns 0<br />
    double dA,dB,dC;<br />
    cout&lt;&gt;dA;<br />
    cout&lt;&gt;dB;<br />
    dC=dA+dB;<br />
    cout&lt;&lt;dA&lt;&lt;&quot; + &quot;&lt;&lt;dB&lt;&lt;&quot; = &quot;&lt;&lt;dC&lt;&gt;dA;<br />
    cin&gt;&gt;dB;<br />
    dC=dA+dB;<br />
    cout&lt;&lt;dC;<br />
}</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-wordpress odd alt depth-2 clearfix" id="comment-95588">
		<div id="div-comment-95588" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7a06616091040333cab24133008167c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WordPress</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95588">
		June 18, 2011 at 10:00 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>?? My code&#8217;s gone haywire&#8230; Let me retype it here:</p>
<p>int main()<br />
{<br />
    double dA,dB,dC;<br />
    cin&gt;&gt;dA;<br />
    cin&gt;&gt;dB;<br />
    dC=dA+dB;<br />
    cout&lt;&lt;dC;<br />
    system(&quot;pAuSe&quot;;<br />
}</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-wordpress even depth-3 clearfix" id="comment-95589">
		<div id="div-comment-95589" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7a06616091040333cab24133008167c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WordPress</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95589">
		June 18, 2011 at 10:24 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>system(&#8220;PaUSe&#8221;);*</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars odd alt depth-4 clearfix" id="comment-95593">
		<div id="div-comment-95593" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95593">
		June 19, 2011 at 5:31 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>DON&#8217;T USE SYSTEM(&#8220;PAUSE&#8221;); :/<br />
<a href="../../../www.gidnetwork.com/b-61.html" rel="nofollow">http://www.gidnetwork.com/b-61.html</a></p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-wordpress even depth-5 clearfix" id="comment-95604">
		<div id="div-comment-95604" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7a06616091040333cab24133008167c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WordPress</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95604">
		June 19, 2011 at 10:53 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>&#8230; Whats wrong with my code it always disappears&#8230;<br />
Anyway whats wrong with system(&#8220;PauSe&#8221;);? I use MSVC++ so the DOS blinks out of existence the moment I open it up. What else shall I use? _getch(); from conio.h? Sleep(Number_of_milliseeconds_here); from Windows.h? :)</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-wordpress odd alt depth-6 clearfix" id="comment-95605">
		<div id="div-comment-95605" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7a06616091040333cab24133008167c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WordPress</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95605">
		June 19, 2011 at 10:53 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>milliseconds*</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars even depth-7 clearfix" id="comment-95612">
		<div id="div-comment-95612" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95612">
		June 21, 2011 at 6:59 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>It&#8217;s wordpress at fault. Appearently it has HTML enabled, and&#8230; yeah. you got the point. It removes parts of the code it seems.<br />
Read the link I provided &#8211; it explains quite nicely why system(&#8220;PAUSE&#8221;) should not be used. ever.<br />
Feel free to use getch, cin, getline and similar functions.<br />
Sleep should not be used for this kind of situation.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-wordpress odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95591">
		<div id="div-comment-95591" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7a06616091040333cab24133008167c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WordPress</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95591">
		June 19, 2011 at 12:08 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex, I love these tutorials.</p>
		</div>
</li>
		<li class="comment byuser comment-author-theultimateaim even thread-even depth-1 clearfix" id="comment-95619">
		<div id="div-comment-95619" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/f4332938e5230b00d7c2e40df954045c@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Lakshya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95619">
		June 22, 2011 at 7:26 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>here is my code :</p>
<pre>

#include &lt;iostream&gt;

int doublenumber (int x)
{
    return 2*x;
}

int main()
{
    using namespace std;
    cout &lt;&lt; &quot;Enter number to be doubled:&quot;;
    int x;
    cin &gt;&gt; x;
    cout &lt;&lt; &quot; The doubled number is:&quot; ;
    x = doublenumber(x);
    cout &lt;&lt; x &lt;&lt; endl;
}
</pre>
		</div>
</li>
		<li class="comment byuser comment-author-sachinbhanushali odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95632">
		<div id="div-comment-95632" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/085439209479f25c0a21097d36cfce77@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.computereducation.co.cc/default.htm' rel='external nofollow' class='url'>sachinbhanushali</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95632">
		June 26, 2011 at 2:51 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Visit <a href="../../../www.computereducation.co.cc/default.htm" title="computer education The IT Blog" rel="nofollow"> The IT Blog for eBooks N Solutions with Lots of Hacking Tricks</a></p>
		</div>
</li>
		<li class="comment byuser comment-author-evilgrin even thread-even depth-1 clearfix" id="comment-95648">
		<div id="div-comment-95648" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/070b32cdd90c24d129e406fb2f5fc2bf@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Victor Campello</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95648">
		June 30, 2011 at 1:34 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>after debugging a dozen times and re-read the past chapters I finally got it! (I didn&#8217;t want to pick the answer).</p>
<p>//btw: I made a few tweaks to my code based on the other users.</p>
<p>#include  // Visual Studio users need to uncomment this line<br />
#include </p>
<p>int doublenumber (int x)<br />
{<br />
	return 2 * x;<br />
}</p>
<p>int main()<br />
{<br />
	using namespace std;<br />
	cout &lt;&gt; y;<br />
	cout &lt;&lt; &quot;The number doubled is: &quot;;<br />
	cout &lt;&lt; doublenumber(y) &lt;&lt; endl;    </p>
<p>	cin.clear();<br />
	cin.ignore(255, &#039;\n&#039;);<br />
	cin.get();<br />
	return 0;<br />
}</p>
		</div>
</li>
		<li class="comment byuser comment-author-betefeel odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95659">
		<div id="div-comment-95659" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ef6964162af9936c3f4e3eb3d87d4381@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">betefeel</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95659">
		July 3, 2011 at 9:04 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Took me some time but finally got 5 Yay!</p>
<p>#include &#8220;stdafx.h&#8221;</p>
<p>#include </p>
<p>int doubleNumber(int x)<br />
{<br />
	return x + x;<br />
}</p>
<p>int main()<br />
{</p>
<p>	using namespace std;<br />
	cout &lt;&lt; &quot;Enter your number to double: &quot; &lt;&gt; x;<br />
	cout &lt;&lt; &quot;Your number doubled is: &quot; &lt;&lt; endl;<br />
	cout &lt;&lt; doubleNumber(x) &lt;&lt; endl;</p>
<p>}</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-betefeel even depth-2 clearfix" id="comment-95660">
		<div id="div-comment-95660" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ef6964162af9936c3f4e3eb3d87d4381@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">betefeel</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95660">
		July 3, 2011 at 9:11 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Copied wrong</p>
<p>int doubleNumber(int x)<br />
{<br />
	return x + x;<br />
}</p>
<p>int main()<br />
{</p>
<p>	using namespace std;<br />
	cout &lt;&lt; &quot;Enter your number to double: &quot; &lt;&gt; x;<br />
	cout &lt;&lt; &quot;Your number doubled is: &quot; &lt;&lt; endl;<br />
	cout &lt;&lt; doubleNumber(x) &lt;&lt; endl;</p>
<p>}</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-yahsharahla odd alt thread-even depth-1 clearfix" id="comment-95829">
		<div id="div-comment-95829" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9a232c8510b94dae714f3bd5aaad8b8c@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Yahsharahla</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-95829">
		August 6, 2011 at 9:10 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi I decided to post mine since it looks like I chose a different way to make this program but with the same results. </p>
<pre>#include &quot;stdafx.h&quot;
#include &lt;iostream&gt;

int doubleNumber()
{
	using namespace std;
	cout &lt;&lt; &quot;Input a number.&quot; &lt;&lt; endl; // Asks the user to enter a number
	int x;
	cin &gt;&gt; x; //Reads user&#039;s input and stores it in place of x
	return (x * 2);
}

int aI()
{
	using namespace std;
	cout &lt;&lt; &quot;Hi, let&#039;s play a game!&quot; &lt;&lt; endl; // A little A.I. lol
	cin.get();
	cout &lt;&lt; &quot;I guarantee that I can double any number that you input.&quot; &lt;&lt; endl;
	cin.get();
	return (0);
}

int main()
{
	using namespace std;
	aI();
	cout &lt;&lt; &quot;You&#039;re number doubled is....&quot; &lt;&lt; doubleNumber() &lt;&lt; endl;
	return (0);
}
</pre>
		</div>
</li>
		<li class="comment byuser comment-author-grif even thread-odd thread-alt depth-1 clearfix" id="comment-96478">
		<div id="div-comment-96478" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a89982a778a4a3a6f24ba301e4d1cc70@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Grif</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-3/#comment-96478">
		November 26, 2011 at 8:56 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">Log in to Reply</a></span>		 
		</div>
		<p>Very much a beginner here, but there&#8217;s something I need a little clarification with &#8211; switching the order of &#8220;main()&#8221; and &#8220;add(x, y)&#8221; in the code seems to cause an error (I was trying to input it that way due to my own OCD wanting main to be up the top of the code). </p>
<p>The result seemed to be that &#8220;main()&#8221; had no idea that &#8220;add(x, y)&#8221; even existed unless &#8220;add(x, y)&#8221; was assigned/created in code *before* &#8220;main()&#8221;.</p>
<p>Is this always the case? That &#8220;function a&#8221; trying to call &#8220;function b&#8221; requires function b to be defined (and placed literally above function a&#8217;s code in the editor) before it&#8217;s run?</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	<div class="clearfix navigation-comments-below"><a class="prev page-numbers" href="comment-page-2/#comments">&laquo; Older Comments</a>
<a class='page-numbers' href='comment-page-1/#comments'>1</a>
<a class='page-numbers' href='comment-page-2/#comments'>2</a>
<span class='page-numbers current'>3</span></div>



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f14-a-first-look-at-functions_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../13-a-first-look-at-variables/default.htm" rel="prev">1.3 &#8212; A first look at variables (and cin)</a> &nbsp;</div><div class="newer">&nbsp; <a href="../16-whitespace-and-basic-formatting/default.htm" rel="next">1.6 &#8212; Whitespace and basic formatting</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'23'});
var load_cmc = function(){linktracker_init(3928254,23,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.699 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:21:10 -->
<!-- Compression = gzip -->