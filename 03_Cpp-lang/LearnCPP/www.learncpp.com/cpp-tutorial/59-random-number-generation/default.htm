<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0076)http://www.learncpp.com/cpp-tutorial/59-random-number-generation/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>5.9 &#8212; Random number generation &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 5.9 &#8212; Random number generation Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='15.6 &#8212; Exception dangers and downsides' href='../156-exception-dangers-and-downsides/default.htm' />
<link rel='next' title='&lt;b&gt;Please report any site issues here&lt;/b&gt;' href='../../site-news/probable-downtime-this-weekend-121208-121408/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-3w' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-218 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../156-exception-dangers-and-downsides/default.htm" rel="prev">15.6 &#8212; Exception dangers and downsides</a> &nbsp;</div><div class="newer">&nbsp; <a href="../1-10a-how-to-design-your-first-programs/default.htm" rel="next">1.10a &#8212; How to design your first programs</a> &raquo;</div></div>
<div class="post-218 post type-post status-publish format-standard hentry category-cpp-tutorial category-computer-game-programming tag-c tag-prng tag-programming tag-rand tag-random tag-rng tag-srand tag-tutorial" id="post-218">


<div class="post-headline">		<h1>5.9 &#8212; Random number generation</h1>
		</div>
<div class="post-byline">By Alex, on December 7th, 2008</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>The ability to generate random numbers can be useful in certain kinds of programs, particularly in games, statistics modeling programs, and scientific simulations that need to model random events.  Take games for example &#8212; Without random events, monsters would always attack you the same way, you&#8217;d always find the same treasure, the dungeon layout would never change, etc&#8230; and that would not make for a very good game.</p>
<p>So how do we generate random numbers?  In real life, we often generate random results by doing things like flipping a coin, rolling a dice, or shuffling a deck of cards.  These events involve so many physical variables (eg. gravity, friction, air resistance, momentum, etc&#8230;) that they become almost impossible to predict or control, and produce results that are for all intents and purposes random.</p>
<p>However, computers aren&#8217;t designed to take advantage of physical variables &#8212; your computer can&#8217;t toss a coin, throw a dice, or shuffle real cards.  Computers live in a very controlled electrical world where everything is binary (false or true) and there is no in-between.  By their very nature, computers are designed to produce results that are as predictable as possible.  When you tell the computer to calculate 2 + 2, you ALWAYS want the answer to be 4.  Not 3 or 5 on occasion.</p>
<p>Consequently, computers are generally incapable of generating random numbers.  Instead, they must simulate randomness, which is most often done using pseudo-random number generators.</p>
<p>A <strong>pseudo-random number generator (PRNG)</strong> is a program that takes a starting number (called a <strong>seed</strong>), and performs mathematical operations on it to transform it into some other number that appears to be unrelated to the seed.  It then takes that generated number and performs the same mathematical operation on it to transform it into a new number that appears unrelated to the number it was generated from.  By continually applying the algorithm to the last generated number, it can generate a series of new numbers that will appear to be random if the algorithm is complex enough.</p>
<p>It&#8217;s actually fairly easy to write a PRNG.  Here&#8217;s a short program that generates 100 pseudo-random numbers:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;stdafx.h&gt;
#include &lt;iostream&gt;
using namespace std;

unsigned int PRNG()
{
    // our initial starting seed is 5323
    static unsigned int nSeed = 5323;

    // Take the current seed and generate a new value from it
    // Due to our use of large constants and overflow, it would be
    // very hard for someone to predict what the next number is
    // going to be from the previous one.
    nSeed = (8253729 * nSeed + 2396403);

    // Take the seed and return a value between 0 and 32767
    return nSeed  % 32767;
}

int main()
{
    // Print 100 random numbers
    for (int nCount=0; nCount &lt; 100; ++nCount)
    {
        cout &lt;&lt; PRNG() &lt;&lt; &quot;\t&quot;;

        // If we've printed 5 numbers, start a new column
        if ((nCount+1) % 5 == 0)
            cout &lt;&lt; endl;
	}
}
</pre>
<p>The result of this program is:</p>
<pre>
20433	22044	9937	30185	29341
14783	29730	8430	3076	28768
18053	16066	26537	100	30493
4943	19511	19251	6669	32117
31575	3373	32383	30496	12710
23999	11929	5425	9938	12107
28541	1938	3450	20283	16726
6440	4938	26094	24391	12248
24803	30416	16244	19590	6644
24646	4873	2841	23831	23476
17958	8827	17400	32129	32760
25744	25405	13591	8859	15932
19086	19666	19265	14179	1165
27168	20996	29427	5857	3434
18964	11980	564	4620	400
17362	16934	11889	419	9714
19808	29699	3694	25612	5512
20256	10009	10247	1860	1846
1487	14030	2615	16035	8107
28736	267	29395	9438	20294
</pre>
<p>Each number appears to be pretty random with respect to the previous one.  As it turns out, our algorithm actually isn&#8217;t very good, for reasons we will discuss later.  But it does effectively illustrate the principle of PRNG number generation.</p>
<p><strong>Generating random numbers in C++</strong></p>
<p>C (and by extension C++) comes with a built-in pseudo-random number generator.  It is implemented as two separate functions that live in the cstdlib header:</p>
<p><strong>srand()</strong> sets the initial seed value.  srand() should only be called once.</p>
<p><strong>rand()</strong> generates the next random number in the sequence (starting from the seed set by srand()).</p>
<p>Here&#8217;s a sample program using these functions:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;stdafx.h&gt;
#include &lt;iostream&gt;
#include &lt;cstdlib&gt; // for rand() and srand()
using namespace std;

int main()
{
    srand(5323); // set initial seed value to 5323

    // Print 100 random numbers
    for (int nCount=0; nCount &lt; 100; ++nCount)
    {
        cout &lt;&lt; rand() &lt;&lt; &quot;\t&quot;;

        // If we've printed 5 numbers, start a new column
        if ((nCount+1) % 5 == 0)
            cout &lt;&lt; endl;
	}
}
</pre>
<p>Here&#8217;s the output of this program:</p>
<pre>
17421	8558	19487	1344	26934
7796	28102	15201	17869	6911
4981	417	12650	28759	20778
31890	23714	29127	15819	29971
1069	25403	24427	9087	24392
15886	11466	15140	19801	14365
18458	18935	1746	16672	22281
16517	21847	27194	7163	13869
5923	27598	13463	15757	4520
15765	8582	23866	22389	29933
31607	180	17757	23924	31079
30105	23254	32726	11295	18712
29087	2787	4862	6569	6310
21221	28152	12539	5672	23344
28895	31278	21786	7674	15329
10307	16840	1645	15699	8401
22972	20731	24749	32505	29409
17906	11989	17051	32232	592
17312	32714	18411	17112	15510
8830	32592	25957	1269	6793
</pre>
<p><strong>The range of rand()</strong></p>
<p>rand() generates pseudo-random integers between 0 and RAND_MAX, a constant in cstdlib that is typically set to 32767.</p>
<p>Generally, we do not want random numbers between 0 and RAND_MAX &#8212; we want numbers between two other values, which we&#8217;ll call nLow and nHigh.  For example, if we&#8217;re trying to simulate the user rolling a dice, we want random numbers between 1 and 6.</p>
<p>It turns out it&#8217;s quite easy to take the result of rand() can convert it into whatever range we want:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// Generate a random number between nLow and nHigh (inclusive)
unsigned int GetRandomNumber(int nLow, int nHigh)
{
    return (rand() % (nHigh - nLow + 1)) + nLow;
}
</pre>
<p><strong>PRNG sequences</strong></p>
<p>If you run the rand() sample program above multiple times, you will note that it prints the same result every time!  This means that while each number in the sequence is seemingly random with regards to the previous ones, the entire sequence is not random at all!  And that means our program ends up totally predictable (the same inputs lead to the same outputs every time).  There are cases where this can be useful or even desired (eg. you want a scientific simulation to be repeatable, or you&#8217;re trying to debug why your random dungeon generator crashes).</p>
<p>But often, this is not what is desired.  If you&#8217;re writing a game of hi-lo (where the user has 10 tries to guess a number, and the computer tells them whether their guess is too high or to low), you don&#8217;t want the program picking the same numbers each time.  So let&#8217;s take a deeper look at why this is happening, and how we can fix it.</p>
<p>Remember that each number in a PRNG sequence is generated from the previous number, in a deterministic way.  Thus, given any starting seed number, PRNGs will always generate the same sequence of numbers from that seed as a result!  We are getting the same sequence because our starting seed number is always 5323.</p>
<p>In order to make our entire sequence randomized, we need some way to pick a seed that&#8217;s not a fixed number.  The first answer that probably comes to mind is that we need a random number!  That&#8217;s a good thought, but if we need a random number to generate random numbers, then we&#8217;re in a catch-22.  It turns out, we really don&#8217;t need our seed to be a random number &#8212; we just need to pick something that changes each time the program is run.  Then we can use our PRNG to generate a unique sequence of pseudo-random numbers from that seed.</p>
<p>The commonly accepted method for doing this is to enlist the system clock.  Each time the user runs the program, the time will be different.  If we use this time value as our seed, then our program will generate a different sequence of numbers each time it is run!</p>
<p>C comes with a function called time() that returns the number of seconds since midnight on Jan 1, 1970.  To use it, we merely need to include the ctime header, and then initialize srand() with a call to time(0):</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;stdafx.h&gt;
#include &lt;iostream&gt;
#include &lt;cstdlib&gt; // for rand() and srand()
#include &lt;ctime&gt; // for time()
using namespace std;

int main()
{

    srand(time(0)); // set initial seed value to system clock
    for (int nCount=0; nCount &lt; 100; ++nCount)
    {
        cout &lt;&lt; rand() &lt;&lt; &quot;\t&quot;;

        if ((nCount+1) % 5 == 0)
            cout &lt;&lt; endl;
	}
}
</pre>
<p>Now our program will generate a different sequence of random numbers every time!</p>
<p><strong>What is a good PRNG?</strong></p>
<p>As I mentioned above, the PRNG we wrote isn&#8217;t a very good one.  This section will discuss the reasons why.  It is optional reading because it&#8217;s not strictly related to C or C++, but if you like programming you will probably find it interesting anyway.</p>
<p>In order to be a good PRNG, the PRNG needs to exhibit a number of properties:</p>
<p>First, the PRNG should generate each number with approximately the same probability.  This is called distribution uniformity.  If some numbers are generated more often than others, the result of the program that uses the PRNG will be biased!</p>
<p>For example, let&#8217;s say you&#8217;re trying to write a random item generator for a game.  You&#8217;ll pick a random number between 1 and 10, and if the result is a 10, the monster will drop a powerful item instead of a common one.  You would expect a 1 in 10 chance of this happening.  But if the underlying PRNG is not uniform, and generates a lot more 10s than it should, your players will end up getting more rare items than you&#8217;d intended, possibly trivializing the difficulty of your game.</p>
<p>Generating PRNGs that produce uniform results is difficult, and it&#8217;s one of the main reasons the PRNG we wrote at the top of this lesson isn&#8217;t a very good PRNG.</p>
<p>Second, the method by which the next number in the sequence shouldn&#8217;t be obvious or predictable.  For example, consider the following PRNG algorithm: <code>nNum = nNum + 1</code>.  This PRNG is perfectly uniform, but it&#8217;s not very useful as a sequence of random numbers!</p>
<p>Third, the PRNG should have a good dimensional distribution of numbers.  This means it should return low numbers, middle numbers, and high numbers seemingly at random.  A PRNG that returned all low numbers, then all high numbers may be uniform and non-predictable, but it&#8217;s still going to lead to biased results, particularly if the number of random numbers you actually use is small.</p>
<p>Fourth, all PRNGs are periodic, which means that at some point the sequence of numbers generated will eventually begin to repeat itself.  As mentioned before, PRNGs are deterministic, and given an input number, a PRNG will produce the same output number every time.  Consider what happens when a PRNG generates a number it has previously generated.  From that point forward, it will begin to duplicate the sequence between the first occurrence of that number and the next occurrence of that number over and over.  The length of this sequence is known as the <strong>period</strong></p>
<p>For example, here are the first 100 numbers generated from a PRNG with poor periodicity:</p>
<pre>
112	9	130	97	64
31	152	119	86	53
20	141	108	75	42
9	130	97	64	31
152	119	86	53	20
141	108	75	42	9
130	97	64	31	152
119	86	53	20	141
108	75	42	9	130
97	64	31	152	119
86	53	20	141	108
75	42	9	130	97
64	31	152	119	86
53	20	141	108	75
42	9	130	97	64
31	152	119	86	53
20	141	108	75	42
9	130	97	64	31
152	119	86	53	20
141	108	75	42	9
</pre>
<p>You will note that it generated 9 as the second number, and 9 again as the 16th number.  The PRNG gets stuck generating the sequence in-between these two 9&#8242;s repeatedly:  9-130-97-64-31-152-119-86-53-20-141-108-75-42-(repeat).</p>
<p>A good PRNG should have a long period for all seed numbers.  Designing an algorithm that meets this property can be extremely difficult &#8212; most PRNGs will have long periods for some seeds and short periods for others.  If the user happens to pick that seed, then the PRNG won&#8217;t be doing a good job.</p>
<p>Despite the difficulty in designing algorithms that meet all of these criteria, a lot of research has been done in this area because of it&#8217;s importance to scientific computing.</p>
<p><strong>rand() is a mediocre PRNG</strong></p>
<p>The algorithm used to implement rand() can vary from compiler to compiler, leading to results that may not be consistent across compilers.  Most implementations of rand() use a method called a <a href="../../../en.wikipedia.org/wiki/linear_congruential_generator">Linear Congruential Generator (LCG)</a>.  If you have a look at the first example in this lesson, you&#8217;ll note that it&#8217;s actually a LCG, though one with intentionally poorly picked bad constants.  LCGs tend to have shortcomings that make them not good choices for certain kinds of problems.</p>
<p>One of the main shortcomings of rand() is that RAND_MAX is usually set to 32767 (essentially 16-bits).  This means if you want to generate numbers over a larger range (eg. 32-bit integers), the algorithm is not suitable.  Also, rand() isn&#8217;t good if you want to generate random floating point numbers (eg. between 0.0 and 1.0), which is often useful when doing statistical modelling.  Finally, rand() tends to have a relatively short period compared to other algorithms.</p>
<p>That said, rand() is entirely suitable for learning how to program, and for programs in which a high-quality PRNG is not a necessity.  For such applications, I would highly recommend <a href="../../../www.math.sci.hiroshima-u.ac.jp/~m-mat/mt/emt.html">Mersenne Twister</a>, which produces great results and is relatively easy to use.</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../61-arrays-part-i/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 6.1 &#8212; Arrays (Part I)</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter5" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../58-break-and-continue/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 5.8 &#8212; Break and Continue</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>, <a href="../../category/computer-game-programming/default.htm" title="View all posts in Game Programming" rel="category tag">Game Programming</a> &nbsp; <img src="../../blog/wp-content/themes/atahualpa353/images/icons/tag-gray.gif" alt="" /> <a href="../../tag/c/default.htm" rel="tag">c++</a>, <a href="../../tag/prng/default.htm" rel="tag">prng</a>, <a href="../../tag/programming/default.htm" rel="tag">programming</a>, <a href="../../tag/rand/default.htm" rel="tag">rand</a>, <a href="../../tag/random/default.htm" rel="tag">random</a>, <a href="../../tag/rng/default.htm" rel="tag">rng</a>, <a href="../../tag/srand/default.htm" rel="tag">srand</a>, <a href="../../tag/tutorial/default.htm" rel="tag">tutorial</a> &nbsp;   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../156-exception-dangers-and-downsides/default.htm" rel="prev">15.6 &#8212; Exception dangers and downsides</a> &nbsp;</div><div class="newer">&nbsp; <a href="../1-10a-how-to-design-your-first-programs/default.htm" rel="next">1.10a &#8212; How to design your first programs</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">56 comments to 5.9 &#8212; Random number generation</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-34001">
		<div id="div-comment-34001" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2c389b5cd23043f5741e31773a69ab6e@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.goingnowere.webs.com/default.htm' rel='external nofollow' class='url'>leonid.s</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-34001">
		December 8, 2008 at 9:05 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi Alex, it&#8217;s good to see you&#8217;ve put in something about random numbers,now I can make games with random numbers&#8230;.<br />
thanks for the great tutorial alex</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-34661">
		<div id="div-comment-34661" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/97fc1850bffb2863e149adcef7978418@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ivan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-34661">
		December 15, 2008 at 10:03 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>&#8220;Prev/Next Posts&#8221; at the top of the page points back to a higher numbered section (15.6), and forward to something else.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-35418">
		<div id="div-comment-35418" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-35418">
		December 22, 2008 at 11:02 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Yeah, that one is generated automatically by my wordpress theme and is set to display articles in the order they were written.  This 5.9 section was written out of order, hence the weirdness.  I&#8217;ll look into removing it.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-35274">
		<div id="div-comment-35274" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/32b9b11c218385a2ff74f9fc63afdad3@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Pathik</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-35274">
		December 21, 2008 at 10:05 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<pre>

#include &lt;stdafx.h&gt;
#include &lt;iostream&gt;
#include &lt;cstdlib&gt; // for rand() and srand()
#include &lt;ctime&gt; // for time()
using namespace std;

int main()
{

    srand(time()); // set initial seed value to system clock
    for (int nCount=0; nCount &lt; 100; ++nCount)
    {
        std::cout &lt;&lt; rand() &lt;&lt; &quot;t&quot;;

        if ((nCount+1) % 5 == 0)
            std::cout &lt;&lt; std::endl;
	}
}
<!--formatted--></pre>
<p>This code in visual c++ 2005 express edition gives this error at compile time:</p>
<p>&#8216;error C2661: &#8216;time&#8217; : no overloaded function takes 0 arguments&#8217;</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-35282">
		<div id="div-comment-35282" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e308f6008501a59ff6d735bdf48b0da2@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Andy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-35282">
		December 21, 2008 at 12:35 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>You want to use this line
<pre>srand(time(0))</pre>
<p> instead of
<pre>srand(time())</pre>
<p> for the first line in main</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-diyon odd alt thread-odd thread-alt depth-1 clearfix" id="comment-35741">
		<div id="div-comment-35741" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/69aa30a53222ccf3a7d144d862d6b48d@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">diyon</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-35741">
		December 26, 2008 at 9:57 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi, I&#8217;m new to C++. and would like to know how to write a programe to generate random numbers uniformly distributed between 0 and 1.<br />
Thank you,</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-35924">
		<div id="div-comment-35924" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-35924">
		December 29, 2008 at 8:57 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>rand() generates numbers between 0 and RAND_MAX.  So to generate numbers between 0 and 1, simply divide the result of rand() by RAND_MAX (make sure to use a cast to cast the result to a double, otherwise you&#8217;ll get integer division).</p>
<p>eg.</p>
<pre>
double dUniform = static_cast&lt;double&gt;(rand()) / RAND_MAX;
</pre>
		</div>
</li>
</ul>
</li>
		<li class="pingback odd alt thread-even depth-1 clearfix" id="comment-35927">
		<div id="div-comment-35927" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../58-break-and-continue/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 5.8 &#8212; Break and continue</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-35927">
		December 29, 2008 at 9:06 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 5.9 &#8212; Random number generation  [...]</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-37339">
		<div id="div-comment-37339" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e3cad4765283fcc649b2e94749b83156@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">vandana</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-37339">
		January 13, 2009 at 3:32 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi,</p>
<p>its really good informaion about random no.<br />
but i have one doubt if ((nCount+1) % 5 == 0) this statement return some no.,<br />
but rand() fuction generate random no., why you wrote this statement.<br />
plz clear my doubt.</p>
<p>Tahnking you.</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-38552">
		<div id="div-comment-38552" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/966d66750bd2b3e91da9eacc9b17f3a5@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Spock</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-38552">
		January 21, 2009 at 10:13 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hey Alex, </p>
<p>Your codes above have the
<pre>using namespace std;</pre>
<p> declared, yet you also use (for example): </p>
<pre>std::cout &lt;&lt; rand() &lt;&lt; &quot;\t&quot;;   </pre>
<p>I thought that the first declaration negated the need for the std:: statement.</p>
<p>Thanks!</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-41983">
		<div id="div-comment-41983" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-41983">
		February 5, 2009 at 11:22 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>You are correct, the added std:: prefixes are redundant in this case.  I&#8217;ve gone ahead and removed them.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-44782">
		<div id="div-comment-44782" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/28ef07cebaf8f382683b0930e3cfbbe9@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Abby</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-44782">
		February 17, 2009 at 10:57 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Is it possible to create a random statement for a group of words that I come up with, not just random numbers?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-48423">
		<div id="div-comment-48423" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-48423">
		March 1, 2009 at 11:36 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Not directly.  However, you can put your words in an array, and then use a random number to index that array.  I cover arrays in the next chapter, I think.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-52370">
		<div id="div-comment-52370" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/527de0c38c39ead5f2f77fbc4622bbb8@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Sam</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-52370">
		March 22, 2009 at 5:45 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi Alex,</p>
<p>I am trying to implement a fighting system into a game I am making. I need to use random numbers to determine if you hit or miss and then how much damage you do. I just am not sure how to do that. I read what you wrote about the random numbers and I am kinda new at c++. so far what I have is (minus all the other code) </p>
<p>#include iostream<br />
#include cstdlib<br />
#include ctime</p>
<p>(sorry had to remove  so they would show)</p>
<p>int main(){</p>
<p>    int hit = rand ();</p>
<p>    for (int hit; hit &lt; 100; ++hit)<br />
       {<br />
        if ( hit less than 100 and greater than 50 ) {<br />
           cout&lt;&lt;&#8221;You hit.&#8221;</p>
<p>}</p>
<p>and thats what I have so far because I don&#8217;t know if I should keep going if I need to fix something. (PS. sorry for using words when i tried posting it did stuff to the code)</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-59299">
		<div id="div-comment-59299" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/509364130c1c94262fb4474c6595f676@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jason</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-59299">
		April 27, 2009 at 8:01 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hey Sam,</p>
<p>Use this code:</p>
<p>#include<br />
#include<br />
#include  //Needed to get current time</p>
<p>int main()<br />
{<br />
    //Seeds the random number genarator with the current time<br />
    //so you get different result every time your program runs<br />
    srand( time(NULL) );</p>
<p>    //Chooses a random number between 0-100 using %(Mod)<br />
    int hit = rand() % 100;</p>
<p>    //If hit is 50-100 than hit, else miss.<br />
    if ( (hit&gt;=50) &amp;&amp; (hit&lt;=100) )<br />
       cout &lt;&lt; ”You hit.”;<br />
    else<br />
       cout &lt;&lt; &#8220;You missed.&#8221;;<br />
}</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-52530">
		<div id="div-comment-52530" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/60c249741a7e716eaaef728a1b98c226@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../none/default.htm' rel='external nofollow' class='url'>Dan</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-52530">
		March 22, 2009 at 9:12 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hey Alex, thanks for making the great tutorials.  </p>
<p>I&#8217;m wondering if there&#8217;s any way to generate 30 random numbers and store them in an array.  I&#8217;m able to generate a random number and store it in an array, but whenever I try to access the array every single indexed number in it is the same random number. I&#8217;m thinking that this is perhaps because the random number is based on the system clock and all 30 numbers are created at the same time?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-59737">
		<div id="div-comment-59737" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-59737">
		May 1, 2009 at 8:14 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>I don&#8217;t see any reason why what you are doing wouldn&#8217;t work.  If you initialize the array using a loop like this:</p>
<pre>
for (int nCount=0; nCount &lt; nArraySize; ++nCount)
    nArray[nCount] = rand() % 100;
</pre>
<p>you should get a different number in each slot.</p>
<p>If you&#8217;re not, then I suspect you&#8217;re either initializing your array incorrectly or your rand() really isn&#8217;t returning random numbers for some reason.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-56579">
		<div id="div-comment-56579" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9101e0306b90e5d2cbd842bde9c50f56@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Markos</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-56579">
		April 7, 2009 at 2:43 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi , thank you for this information , but i have a question. Is there a way that i can generate a random number  between two ranges of numbers( like, i want to generate a random number that is in (0 to 200) or (400 to 1300) ). </p>
<p>with best wishes</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-72429">
		<div id="div-comment-72429" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b4a2bb6b1913cf8c36abb7f60d891431@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Josh Browning</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-72429">
		November 16, 2009 at 4:26 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m not sure if there&#8217;s a better way to do this, but you could generate a random boolean (i.e. rand()%2) and then use an if statement to determine which range to use.  So, for example, if the random boolean is 0, then pick a random number between 0 to 200, else pick one between 400 to 1300.  If you want one range to show up more often than the other, just pick a random integer first (maybe from 0 to 9) and have only 0 and 1 lead to the range 400 to 1300.  Then, 80% of the time you will have a random number between 0 to 200, and 20% between 400 to 1300 (if your RNG is good).</p>
		</div>
</li>
</ul>
</li>
		<li class="pingback odd alt thread-odd thread-alt depth-1 clearfix" id="comment-62818">
		<div id="div-comment-62818" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../../../infostareducation.com/blogspot/@p=3' rel='external nofollow' class='url'>infostareducation.com</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-62818">
		June 21, 2009 at 10:35 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] view source [...]</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-63462">
		<div id="div-comment-63462" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ebf2907704f1c8257231bdfd3b5909d8@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../mucadeleci.blogspot.com/default.htm' rel='external nofollow' class='url'>gundoganfa</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63462">
		June 30, 2009 at 3:30 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>once we needed to use the actual eth packet numbers and some system data to generate a rand number in an embedded device&#8230;</p>
<p>in some cases it&#8217;s really difficult to generate (so-called)random numbers.</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-63842">
		<div id="div-comment-63842" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/490c644a3b32a73792de8e9ea3b13ac5@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../255.com/default.htm' rel='external nofollow' class='url'>Ronnie</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63842">
		July 6, 2009 at 2:22 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Why do you need to declare nSeed with the static key word with this? I don&#8217;t see the point in needing its file scope.</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-66167">
		<div id="div-comment-66167" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">baldo</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-66167">
		August 13, 2009 at 3:05 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>nSeed is a local variable for the PRNG function. The static keyword has another meaning when used for local variables. In this case, nSeed variable &#8220;retains it’s value even after the scope in which it has been created has been exited! Fixed duration variables are only created (and initialized) once, and then they are persisted throughout the life of the program.&#8221; See more here: <a href="../43-file-scope-and-the-static-keyword/default.htm" title="the_static_keyword" rel="nofollow">Lesson 4.3. the static keyword</a></p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-67339">
		<div id="div-comment-67339" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/481a94d6a9e138fb86dc12311b8e6825@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.number.com.pt/index.html' rel='external nofollow' class='url'>Vermute</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-67339">
		August 28, 2009 at 3:45 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>See: <a href="../../../www.number.com.pt/index.html" rel="nofollow">http://www.number.com.pt/index.html</a></p>
<p>x_n+1 = frac(s+nx_n)</p>
<p>This algorithm is very elegant, fast and with good qualities.</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-71839">
		<div id="div-comment-71839" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/cd59f9466942654493db9a7937dd1292@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tobi</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-71839">
		November 6, 2009 at 4:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>nvm</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-72842">
		<div id="div-comment-72842" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/27e7c66eb379d9cff6c9d86c6ac3ef52@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Hank</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-72842">
		November 22, 2009 at 10:05 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>I have an issue with your mapping implementation (the GetRandomNumber function). It&#8217;s fine for small ranges like the dice example, but for larger target ranges, you can get serious uniformity issues. For example, let&#8217;s say you want a random number between 0 and 21,844 (about 2/3 of rand()&#8217;s RAND_MAX). With GetRandomNumber, for numbers that already fall in the target range, you get a 1-to-1 mapping (0 becomes 0, 1 becomes 1, etc.), then for the rest of the domain of rand(), the output essentially starts over at 0 and overlaps onto the first half of the target range. Therefore, you&#8217;re twice as likely to get a number between 0 and 10,922 as you are to get one between 10,923 and 21,844, when the probabilities should be equal! Thus I&#8217;d recommend instead just using *, /, + and &#8211; to convert (probably need to cast to a float first, then truncate).</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-73798">
		<div id="div-comment-73798" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/50079d78a712e7aae38063ef63777abe@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../123/default.htm' rel='external nofollow' class='url'>12345</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-73798">
		December 7, 2009 at 7:10 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>I dont understand in your first example how
<pre>return nSeed % 32767;</pre>
<p> is going to give us a number between 0 and 32767.Isnt % supposed to give the remainder of the division?And since nSeed is always the same number,since we do the same arithetic operations with it each time,wont the remainder be the same,resulting in the return value being the same?</p>
<p>I hope you understand my question ;P</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-77785">
		<div id="div-comment-77785" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/66efcb194ab89b1d8c5f445f20b796c6@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">BlackCAT</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77785">
		February 3, 2010 at 7:44 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi, im new to programming in C++&#8230;<br />
I&#8217;ve been trying to think of an algorithm<br />
but just cant!<br />
How do i write code that;<br />
//select 2 numbers randomly out of 6 constant numbers<br />
//which is<br />
//9, 14, 19, 25, 29, 37<br />
Pls, need help ASAP!<br />
Thanks a lot in advance.</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-78235">
		<div id="div-comment-78235" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/90a219eb341a83b8a09767ad52b71a56@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">.......</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78235">
		February 12, 2010 at 11:23 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Any way to create a random char?</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-80703">
		<div id="div-comment-80703" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d25b58d6894baeebd9dde4fd89bedac6@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../110-a-first-look-at-the-preprocessor/default.htm' rel='external nofollow' class='url'>Mike</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-80703">
		March 16, 2010 at 1:55 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>You can use ASCII numbers and use static_cast to make them into characters</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-78539">
		<div id="div-comment-78539" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7c2390c20489daa6bfe12fddbadaa069@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">RAMI</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78539">
		February 18, 2010 at 12:56 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi when i run my program it give me a random number but when i rerun it agian it give me the same number i want each time i run the program i want it to give me a diffrent number</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-80695">
		<div id="div-comment-80695" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d25b58d6894baeebd9dde4fd89bedac6@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../110-a-first-look-at-the-preprocessor/default.htm' rel='external nofollow' class='url'>Mike</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-80695">
		March 16, 2010 at 12:09 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi Alex, could you please explain how this works?</p>
<pre>// Generate a random number between nLow and nHigh (inclusive)
unsigned int GetRandomNumber(int nLow, int nHigh)
{
    return (rand() % (nHigh - nLow + 1)) + nLow;
}</pre>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-copier1 even depth-2 clearfix" id="comment-95143">
		<div id="div-comment-95143" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0ac4f3e643504b9edcca9de78d8d2bd8@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">copier1</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95143">
		January 31, 2011 at 11:43 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>nHigh-nLow+1 gives the size of the range. I.E. 41 to 94 has 54 possible numbers (inclusive). 94-41+1=54. This generates a random number from 0 to 53. Adding the nLow value puts that number into the desired range.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-84325">
		<div id="div-comment-84325" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4b5068e1917741b8c3150153e21668b7@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tutorialer.com/default.htm' rel='external nofollow' class='url'>Shuuuuuu</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-84325">
		May 8, 2010 at 4:59 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex, you have a v good understanding of the field which you deal with. Thanks for all these detailed tutorials. Keep up the good work.<br />
Thankyou Alex.</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-84928">
		<div id="div-comment-84928" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/295eb647b8d7141a61532013bbc93676@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Nathan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-84928">
		May 18, 2010 at 6:24 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<pre>using namespace std;

int nNum;
bool check;

int main()
{
    srand(time(0)); // set initial seed value to system clock
	int nNum = rand();
    cout &lt;&lt; nNum;
	while (check() == false)
	{
		check();
	}
}

bool check()
{
	int nCheck;
	cin &lt;&lt; nCheck;
	if (nCheck == nNum)
	{
		cout &lt;&lt; &quot;Correct!&quot; &lt;&lt; endl;
		return 1;
	}
	else if (nCheck &lt; nNum)
	{
		cout &lt;&lt; &quot;Too Low.&quot; &lt;&lt; endl;
		return 0;
	}
	else if (nCheck &gt; nNum)
	{
		cout &lt;&lt; &quot;Too High.&quot; &lt;&lt; endl;
		return 0;
	}
}
<!--formatted--></pre>
<p>Hey I don&#8217;t know if anyone could help me but I&#8217;m trying to make the game Alex mentioned called Hi-Lo and I get the errors </p>
<pre>
&quot;main.cpp(15) : error C2064: term does not evaluate to a function taking 0 arguments&quot; 

and 

&quot;main.cpp(15) : fatal error C1903: unable to recover from previous error(s); stopping compilation&quot;<!--formatted--></pre>
<p> Can anyone tell me what I did wrong?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-dhananjay odd alt depth-2 clearfix" id="comment-95398">
		<div id="div-comment-95398" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c13ad922de78814a49af2e688bf87628@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">dhananjay</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95398">
		April 29, 2011 at 2:05 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Declare function prototype as bool check(), instead of bool check.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-85518">
		<div id="div-comment-85518" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e85fb0a07d0c838a1930a5ee051c88b5@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Erik</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-85518">
		May 28, 2010 at 10:13 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi Alex!<br />
I want to start learning C++,and I have an idea of a program,what I want to create. I want to randomize some sentences(for example:you push a button of a program,and it shows a sentence:Welcome to my world!then push again,and shows:How are you?) Is it possible to do with this tutorial?</p>
<p>Hope to hear from you soon!</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-86372">
		<div id="div-comment-86372" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/bc0de3d48f5e8bea39608d8d0a20367d@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Gigith</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-86372">
		June 12, 2010 at 10:59 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Why is stdafx.h included?<br />
I could understand you breaking GCC/MinGW/Other compatibility if you had to, but it doesn&#8217;t look like it even gets used in those examples.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-copier1 even depth-2 clearfix" id="comment-95144">
		<div id="div-comment-95144" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0ac4f3e643504b9edcca9de78d8d2bd8@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">copier1</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95144">
		January 31, 2011 at 11:48 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>As was mentioned in an earlier lesson, Visual C++ requires this line in every file. I think it&#8217;s supposed to be in quotes (&#8220;&#8221;), though.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-88614">
		<div id="div-comment-88614" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c01c191aa6ce002329cbf7a20ffc76aa@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jjtricky</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-88614">
		July 17, 2010 at 5:04 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>I really don&#8217;t get this line:</p>
<pre> if ((nCount+1) % 5 == 0) </pre>
<p>Surely, this would break the line after the fourth number, as:</p>
<pre>
nCount=4
(4+1)/5 

5/5 = 1.0
</pre>
<p>Therefore, the line is ended</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-copier1 even depth-2 clearfix" id="comment-95145">
		<div id="div-comment-95145" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0ac4f3e643504b9edcca9de78d8d2bd8@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">copier1</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95145">
		January 31, 2011 at 11:52 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Ummm, the modulo function is NOT the division function. It only returns the remainder. 5/5 = 1 remainder 0.</p>
		</div>
</li>
		<li class="comment byuser comment-author-copier1 odd alt depth-2 clearfix" id="comment-95166">
		<div id="div-comment-95166" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0ac4f3e643504b9edcca9de78d8d2bd8@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">copier1</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95166">
		February 8, 2011 at 1:07 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Therefore, this expression resolves to true whenever nCount+1 is divisible by five.</p>
<p>The reason for the +1 is that nCount starts at 0, not 1.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-89675">
		<div id="div-comment-89675" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/105c3d0f41d519b667eca38c37dff048@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jack Sparrow II</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-89675">
		August 5, 2010 at 7:16 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>My question is how do I generate random numbers without generating the same ones multiple times?</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-92328">
		<div id="div-comment-92328" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/bcaa72488c6ed9dc79feb4df9a9d8304@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Wolf</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-92328">
		September 19, 2010 at 12:00 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m wondering the same thing.</p>
<p>I need to write a program that randomizes a deck of cards, but I can&#8217;t be assigning the same random value to multiple cards in the deck.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-89889">
		<div id="div-comment-89889" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ab6ed6e04f040babf24ef00c4685d3e5@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">THE TERMINATOR</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-89889">
		August 8, 2010 at 12:53 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>HELP!!! MY PRNG KEEPS PRINTING &#8220;4 8 15 16 23 42&#8243; NO MATTER WHAT I DO!!!!!</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-92055">
		<div id="div-comment-92055" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a7c3f8f7b489a1df1e6d5149c3385260@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../n/a' rel='external nofollow' class='url'>Norbert</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-92055">
		September 14, 2010 at 3:07 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Just a quick question, what will happen with the function time() in 69 years from 1970 (year 2039). Will every program in the world that uses time() crash? I imagine no one tought this would be an issue in 1970 xD.</p>
		</div>
</li>
		<li class="comment byuser comment-author-copier1 even thread-even depth-1 clearfix" id="comment-95147">
		<div id="div-comment-95147" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0ac4f3e643504b9edcca9de78d8d2bd8@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">copier1</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95147">
		February 1, 2011 at 10:52 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m sorry, not usually picky about grammar. But &#8220;dice&#8221; is the plural form of the word. If you want the singular version, it&#8217;s &#8220;die&#8221;.</p>
		</div>
</li>
		<li class="comment byuser comment-author-cubbi odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95320">
		<div id="div-comment-95320" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/363e49843e26763a496164190940ece4@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">cubbi</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95320">
		April 12, 2011 at 5:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>While commonly used in bad textbooks, the % operator should NOT be used to limit the range of values produced by std::rand(): it results in a non-uniform distribution. If you must use std::rand(), divide by RAND_MAX (cast to double).</p>
		</div>
</li>
		<li class="comment byuser comment-author-jonathonjones even thread-even depth-1 clearfix" id="comment-95419">
		<div id="div-comment-95419" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a260e22d8e95a86899183b9cb24a19ec@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jonathonjones</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95419">
		May 6, 2011 at 2:26 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Minor nitpick: in the examples, you have the following comment:</p>
<p>// If we&#8217;ve printed 5 numbers, start a new column</p>
<p>But actually, you&#8217;re starting a new row, not a new column.</p>
		</div>
</li>
		<li class="comment byuser comment-author-dragon odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95463">
		<div id="div-comment-95463" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1d94ba6ab6d42dc2954ba2805378b957@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Dragon</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95463">
		May 16, 2011 at 12:33 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Where do you put the code that keeps the application up for more than a millisecond?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-zingmars even depth-2 clearfix" id="comment-95599">
		<div id="div-comment-95599" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../127.0.0.1/default.htm' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95599">
		June 19, 2011 at 10:05 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>right before the return statement.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-coyote odd alt thread-even depth-1 clearfix" id="comment-95634">
		<div id="div-comment-95634" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4d5fdd58bbe916d0f189eeb097aa4ba3@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">coyote</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95634">
		June 26, 2011 at 4:57 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Just as a heads up, I noticed that when I ran the last program for random numbers I did get output that was as high as: 2033645517.  This is on a linux box so it might be that different systems/compilers have different defaults for the RAND_MAX constant.</p>
		</div>
</li>
		<li class="comment byuser comment-author-jupi even thread-odd thread-alt depth-1 clearfix" id="comment-95937">
		<div id="div-comment-95937" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0cfb1dfc4f5bda35f171dcb05a1c158f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jupi</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95937">
		August 25, 2011 at 3:00 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>In the function:</p>
<p><code>unsigned int GetRandomNumber(int nLow, int nHigh)<br />
{<br />
    return (rand() % (nHigh - nLow + 1)) + nLow;<br />
}</code></p>
<p>I don&#8217;t understand why those operations are being done to the random number. I also don&#8217;t get how using the modulus operator can change the maximum value for a random number (as in the first example: <code>return nSeed  % 32767;</code>). Will someone explain please?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-jupi odd alt depth-2 clearfix" id="comment-95940">
		<div id="div-comment-95940" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0cfb1dfc4f5bda35f171dcb05a1c158f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jupi</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95940">
		August 26, 2011 at 3:39 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Nevermind, I figured it out!</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-hypehuman even thread-even depth-1 clearfix" id="comment-95943">
		<div id="div-comment-95943" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/912826daba5c2384cd9097ab122c35e0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">hypehuman</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95943">
		August 28, 2011 at 10:07 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex, your tutorial is awesome! I&#8217;ve been using it for a while and having a lot of fun. I managed to make a program that intelligently plays Minesweeper because of your tutorial!</p>
<p>Anyway, I think this is a mistake:</p>
<p>&#8220;Second, the method by which the next number in the sequence shouldn’t be obvious or predictable.&#8221;</p>
<p>should be:</p>
<p>&#8220;Second, the method by which the next number in the sequence <strong>is generated</strong> shouldn’t be obvious or predictable.&#8221;</p>
		</div>
</li>
		<li class="comment byuser comment-author-wilprim odd alt thread-odd thread-alt depth-1 clearfix" id="comment-96510">
		<div id="div-comment-96510" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/905f6a60be4040c79c7515e9d7673447@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.loopsmart.com/default.htm' rel='external nofollow' class='url'>primecodz</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96510">
		November 29, 2011 at 12:44 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">Log in to Reply</a></span>		 
		</div>
		<p>So I tried to make a random number generator between 1 and 13. And at the end when you guess correctly it shows how many times you guessed. It is funny though because it seems whenever I enter 3 into the program it comes out blank and ends the program. </p>
<p>Here is the code:<br />
#include<br />
#include<br />
#include </p>
<p>using namespace std;</p>
<p>int counter=0;</p>
<p>unsigned int getRandom(int nHigh, int nLow){<br />
	return (rand() % (nHigh &#8211; nLow + 1)) + nLow;<br />
}<br />
int main(){<br />
	int x, y;<br />
	x=1;<br />
	y=13;<br />
	int nGuess;</p>
<p>	cout &lt;&lt; &quot;Enter a gues between 1 and 6: &quot; &lt;&gt; nGuess;<br />
	getRandom(y,x);<br />
	if (nGuess &lt; getRandom(y,x)){<br />
		cout &lt;&lt; &quot;too low try again&quot; &lt; getRandom(y,x)){<br />
		cout &lt;&lt; &quot;Too high try again&quot; &lt;&lt; endl;<br />
		counter=counter+1;<br />
		main();<br />
	}<br />
	else if (nGuess == getRandom(y,x)){<br />
		cout &lt;&lt; &quot;Congradulations!&quot; &lt;&lt; endl;<br />
		cout &lt;&lt; &quot;Number of Guesses: &quot; &lt;&lt; counter &lt;&lt; endl;</p>
<p>	}<br />
	system (&quot;PAUSE&quot;);<br />
	return 0;<br />
}</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f59-random-number-generation_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../156-exception-dangers-and-downsides/default.htm" rel="prev">15.6 &#8212; Exception dangers and downsides</a> &nbsp;</div><div class="newer">&nbsp; <a href="../1-10a-how-to-design-your-first-programs/default.htm" rel="next">1.10a &#8212; How to design your first programs</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'218'});
var load_cmc = function(){linktracker_init(3928254,218,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.575 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:41:30 -->
<!-- Compression = gzip -->