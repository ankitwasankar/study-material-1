<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0077)http://www.learncpp.com/cpp-tutorial/82-classes-and-class-members/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>8.2 &#8212; Classes and class members &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 8.2 &#8212; Classes and class members Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='8.1 &#8212; Welcome to object-oriented programming' href='../81-welcome-to-object-oriented-programming/default.htm' />
<link rel='next' title='8.3 &#8212; Public vs private access specifiers' href='../83-public-vs-private-access-specifiers/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-21' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-125 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../81-welcome-to-object-oriented-programming/default.htm" rel="prev">8.1 &#8212; Welcome to object-oriented programming</a> &nbsp;</div><div class="newer">&nbsp; <a href="../83-public-vs-private-access-specifiers/default.htm" rel="next">8.3 &#8212; Public vs private access specifiers</a> &raquo;</div></div>
<div class="post-125 post type-post status-publish format-standard hentry category-cpp-tutorial" id="post-125">


<div class="post-headline">		<h1>8.2 &#8212; Classes and class members</h1>
		</div>
<div class="post-byline">By Alex, on August 30th, 2007</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>While C++ provides a number of basic data types (eg. char, int, long, float, double, etc&#8230;) that are often sufficient for solving relatively simple problems, it can be difficult to solve complex problems using just these types.  One of C++&#8217;s more useful features is the ability to define your own data types that better correspond to the problem being worked upon.  You have already seen how <a href="../45-enumerated-types/default.htm">enumerated types</a> and <a href="../47-structs/default.htm">structs</a> can be used to create your own custom data types.</p>
<p>Here is an example of a struct used to hold a date:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
struct DateStruct
{
    int nMonth;
    int nDay;
    int nYear;
};
</pre>
<p>Enumerated types and structs represent the traditional non-object-oriented programming world, as they can only hold data.  If you want to initialize or manipulate this data, you either have to do so directly, or write functions that take a DateStruct as a parameter:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// Declare a DateStruct variable
DateStruct sToday;

// Initialize it manually
sToday.nMonth = 10;
sToday.nDay = 14;
sToday.nYear = 2020;

// Here is a function to initialize a date
void SetDate(DateStruct &amp;sDate, int nMonth, int nDay, int Year)
{
    sDate.nMonth = nMonth;
    sDate.nDay = nDay;
    sDate.nYear = nYear;
}

// Init our date to the same date using the function
SetDate(sToday, 10, 14, 2020);
</pre>
<p>In the world of object-oriented programming, we often want our types to not only hold data, but provide functions that work with the data as well.  In C++, this is done via the <strong>class</strong> keyword.  Using the class keyword defines a new user-defined type called a class.</p>
<p><strong>Classes</strong></p>
<p>In C++, classes are very much like structs, except that classes provide much more power and flexibility.  In fact, the following struct and class are effectively identical:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
struct DateStruct
{
    int nMonth;
    int nDay;
    int nYear;
};

class Date
{
public:
    int m_nMonth;
    int m_nDay;
    int m_nYear;
};
</pre>
<p>Note that the only difference is the <em>public:</em> keyword in the class.  We will discuss it&#8217;s function in the next lesson.</p>
<p>Just like a struct definition, a class definition does not declare any memory.  It only defines what the class looks like.  In order to use a class, a variable of that class type must be declared:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
Date cToday; // declare a variable of class Date

// Assign values to our members using the member selector operator (.)
cToday.m_nMonth = 10;
cToday.m_nDay = 14;
cToday.m_nYear = 2020;
</pre>
<p>In C++, when we declare a variable of a class, we call it <strong>instantiating</strong> the class.  The variable itself is called an <strong>instance</strong> of the class.  A variable of a class type is also called an <strong>object</strong>.</p>
<p><strong>Member Functions</strong></p>
<p>In addition to holding data, classes can also contain functions!  Here is our Date class with a function to set the date:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
class Date
{
public:
    int m_nMonth;
    int m_nDay;
    int m_nYear;

    void SetDate(int nMonth, int nDay, int nYear)
    {
        m_nMonth = nMonth;
        m_nDay = nDay;
        m_nYear = nYear;
    }
};
</pre>
<p>Just like member variables of a struct or class, member functions of a class are accessed using the member selector operator (.):</p>
<pre class="brush: cpp; title: ; notranslate" title="">
Date cToday;
cToday.SetDate(10, 14, 2020); // call SetDate() on cToday
</pre>
<p>Note that in the original struct version of SetDate(), we needed to pass the struct itself to the SetDate() function as the first parameter.  Otherwise, SetDate() wouldn&#8217;t know what DateStruct we wanted to work on.</p>
<p>However, in our class version of SetDate(), we do not need to pass cToday to SetDate()!  Because SetDate() is being called on cToday, the member variables in SetDate() will refer to the member variables of cToday!  Thus, inside function SetDate(), <code>m_nDay</code> is actually referring to <code>cToday.m_nDay</code>.  If we called cTomorrow.SetDate(), <code>m_nDay</code> inside of SetDate() would refer to <code>cTomorrow.m_nDay</code>.</p>
<p>Using the &#8220;m_&#8221; prefix for member variables helps distinguish member variables from function parameters or local variables inside member functions.  This is useful for several reasons.  First, when we see an assignment to a variable with the &#8220;m_&#8221; prefix, we know that we are changing the state of the class.  Second, unlike function parameters or local variables, which are declared within the function, member variables are declared in the class definition.  Consequently, if we want to know how a variable with the &#8220;m_&#8221; prefix is declared, we know that we should look in the class definition instead of within the function.</p>
<p>By convention, class names should begin with an upper case letter.</p>
<p>Here&#8217;s another example of a class:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;
class Employee
{
public:
    char m_strName[25];
    int m_nID;
    double m_dWage;

    // Set the employee information
    void SetInfo(char *strName, int nID, double dWage)
    {
        strncpy(m_strName, strName, 25);
        m_nID = nID;
        m_dWage = dWage;
    }

    // Print employee information to the screen
    void Print()
    {
        using namespace std;
        cout &lt;&lt; &quot;Name: &quot; &lt;&lt; m_strName &lt;&lt; &quot;  Id: &quot; &lt;&lt;
            m_nID &lt;&lt; &quot;  Wage: $&quot; &lt;&lt; m_dWage &lt;&lt; endl;
    }
};

int main()
{
    // Declare two employees
    Employee cAlex;
    cAlex.SetInfo(&quot;Alex&quot;, 1, 25.00);

    Employee cJoe;
    cJoe.SetInfo(&quot;Joe&quot;, 2, 22.25);

    // Print out the employee information
    cAlex.Print();
    cJoe.Print();

    return 0;
}
</pre>
<p>This produces the output:</p>
<pre>
Name: Alex  Id: 1  Wage: $25
Name: Joe  Id: 2  Wage: $22.25
</pre>
<p>Warning: One of the most common C++ mistakes is to forget to end all class (and struct) declarations with a semicolon.  This can cause the compiler to report all sorts of weird, seemingly-unrelated errors!</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../83-public-vs-private-access-specifiers/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 8.3 &#8212; Public vs private access specifiers</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter8" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../81-welcome-to-object-oriented-programming/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 8.1 &#8212; Welcome to object-oriented programming</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../81-welcome-to-object-oriented-programming/default.htm" rel="prev">8.1 &#8212; Welcome to object-oriented programming</a> &nbsp;</div><div class="newer">&nbsp; <a href="../83-public-vs-private-access-specifiers/default.htm" rel="next">8.3 &#8212; Public vs private access specifiers</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">41 comments to 8.2 &#8212; Classes and class members</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-6030">
		<div id="div-comment-6030" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/57af6323e74fcdae7cab644d32b4b6bd@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Renu</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6030">
		January 14, 2008 at 3:39 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>cAlex.Print();<br />
    cJoe.Print();   </p>
<p>    return 0;<br />
};  ======&gt; LINE 41</p>
<p>Semicolon in line 41 after } </p>
<p>Infact i copy pasted whole code and compiled it and didnt get any error with &#8220;}; &#8221; even with semicolon after closing braces.Does compiler ignore that?</p>
<p>Thanks,<br />
Renu</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-6034">
		<div id="div-comment-6034" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6034">
		January 14, 2008 at 4:43 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>It&#8217;s possible to declare stuff after the end of main() &#8212; for example, other variables, functions, etc&#8230;  The compiler treats that ; as a blank statement, which compiles to nothing.  So it&#8217;s essentially ignored.  There&#8217;s no reason for that ; to be there (it was a typo), but it doesn&#8217;t hurt either.  (As a note to future readers, I removed the extraneous semicolon).</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-10856">
		<div id="div-comment-10856" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2b415bdba532ed0a3055daf570c6c967@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">dano</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-10856">
		April 3, 2008 at 11:48 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>I get build errors the on beginning example when trying to initialize manually.</p>
<pre>
struct DateStruct
{
  int nMonth;
  int nDay;
  int nYear;
};

DateStruct sToday;

  sToday.nMonth = 10; ---- Errors here.
  sToday.nDay = 14;
  sToday.nYear = 2014;

void SetDate(DateStruct &#038;sDate, int nMonth, int nDay, int nYear)...
</pre>
<p>The error is: &#8220;expected constructor, destructor, or type conversion before &#8216;.&#8217; token.</p>
<p>Also, not quite sure why the &#038; reference for the &#038;sDate in the SetDate function?<br />
Is this so just passing the reference instead of whole structure when calling the<br />
function?</p>
<p>Thank you for your help.</p>
<p>p.s. Love these lessons</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-10889">
		<div id="div-comment-10889" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-10889">
		April 3, 2008 at 4:50 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hmm, that&#8217;s an odd one.  Is the code that uses sToday inside a function, or is it floating in global space?  Declarations can be in global space, but code that executes instructions can not be.  I would put the following code:</p>
<pre>
DateStruct sToday;

  sToday.nMonth = 10;
  sToday.nDay = 14;
  sToday.nYear = 2014;
</pre>
<p>inside your main() function and then see if it works.  I suspect it will.</p>
<p>Also, as far as the &#038; goes, that means we&#8217;re passing a DateStruct by reference instead of by value.  This will allow SetDate to modify the actual sDate we pass in instead of just a copy.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-10923">
		<div id="div-comment-10923" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2b415bdba532ed0a3055daf570c6c967@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">dano</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-10923">
		April 4, 2008 at 8:27 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>This is the whole thing I&#8217;m trying&#8230;</p>
<pre>
#include 

struct DateStruct
{
  int nMonth;
  int nDay;
  int nYear;
};

int myInt = 5;

DateStruct sToday;
//sToday.nMonth = 10; *will cause error here
//sToday.nDay = 14;
//sToday.nYear = 2014;

void SetDate(DateStruct &amp;sDate, int nMonth, int nDay, int nYear)
{
  sDate.nMonth = nMonth;
  sDate.nDay = nDay;
  sDate.nYear = nYear;
}

int main()
{
  using namespace std;

  DateStruct sToday;

  sToday.nMonth = 10; * works O.K. if I assign here.
  sToday.nDay = 14;
  sToday.nYear = 2014;

  SetDate(sToday, 4, 4, 2008);

  cout < < "Date values are: " << sToday.nMonth << "/" << sToday.nDay << "/" << sToday.nYear << endl;

  return(0);
}
</pre>
<p>If I comment out setting the global sToday members and use the ones in main()<br />
it works O.K. but not vice versa. So.... you can assign a value to global variables<br />
when they are declared but not members of a struct? (int myInt = 5;)<br />
Unless I'm making a syntax mistake somewhere. Need grouping braces? {} ?</pre>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-10933">
		<div id="div-comment-10933" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-10933">
		April 4, 2008 at 10:58 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>I see what you are trying to do.  Yeah, you can&#8217;t assign struct variables in global space that way.  If you want to initialize your global struct, you have to do it like this:</p>
<pre>
DateStruct sToday = { 10, 14, 2014 };
</pre>
		</div>
</li>
		<li class="comment even depth-2 clearfix" id="comment-92134">
		<div id="div-comment-92134" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c59152a77c0bc073fe6f2a3141b99010@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Henk</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-92134">
		September 16, 2010 at 4:29 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>The author doesn&#8217;t seem to understand pointers correctly.<br />
The usual way to write this code is:</p>
<pre>void SetDate(DateStruct *sDate, int nMonth, int nDay, int nYear)
{
  sDate-&gt;nMonth = nMonth;
  sDate-&gt;nDay = nDay;
  sDate-&gt;nYear = nYear;
}</pre>
<p>And then called it like this:</p>
<pre>SetDate(&amp;sToday, 4, 4, 2008);</pre>
<p>The thinking is this.<br />
You want something changed. Therefor you need to give the function the address of what needs to be changed. So the input argument must be a pointer. (Hence the *sSDate). When you call the function, you pass it the address of what needs to be changed.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-11023">
		<div id="div-comment-11023" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b409bf7cf6650704ed10f7325402977d@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">prabhakar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-11023">
		April 5, 2008 at 4:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>i have a very fundamental problem.<br />
a &#8216;class&#8217; is declared. it has one &#8216;private data-member&#8217; and one &#8216;public member-function&#8217;. </p>
<p>an object (instance of the class) is created after the &#8216;closing curly brackets and the semicolon&#8217;  of the class-declaration.</p>
<p>what is the address of the class ?<br />
what is the address of the class-object ?<br />
what is the address of the member-function ?</p>
<p>please enlighten me to keep up my tempo of persuing c++.</p>
<p>thanks<br />
prabhakar.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-11034">
		<div id="div-comment-11034" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-11034">
		April 5, 2008 at 9:17 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>The class itself does not have an address, because it is just a definition.</p>
<p>An object of the class does have an address, because it is an actual variable.  You can find the address by using the address-of (&#038;) operator:</p>
<pre>
Foo cMyFoo; // declare a Foo object
cout < < &#038;cMyFoo << endl; // print its address
</pre>
<p>Member functions also have an address, because you can set a pointer to them, and you can pass their address into a function:</p>
</pre>
<pre>
int (Foo::*ptr)() = &#038;Foo::GetValue;
</pre>
<p>ptr is a pointer to a member function of Foo that takes no parameters and returns an integer.  It is being set to the address of the Foo::GetValue() function.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-11076">
		<div id="div-comment-11076" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a5e1b87e393d14131e7b144d423ea979@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ny</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-11076">
		April 6, 2008 at 4:56 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi alex.. </p>
<p>still i  am confusing about using strncpy.. </p>
<p>following line in ur program how its work i still didnt understand </p>
<p>strncpy(m_strName, strName, 25); </p>
<p>kind regards</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-11186">
		<div id="div-comment-11186" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-11186">
		April 7, 2008 at 7:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>strncpy simply copies N character of a zero-terminated string into another string.  So the above line copies 25 characters from strName to m_strName.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-3 clearfix" id="comment-74610">
		<div id="div-comment-74610" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8dc5612a27a4e1147c43d89471876c34@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.mayurgupta.com/default.htm' rel='external nofollow' class='url'>Mayur Gupta</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-74610">
		December 21, 2009 at 4:24 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex, </p>
<p>But don&#8217;t we have to de-reference the strName pointer to copy the value? I noticed that even if we dereference the pointer like below, it gives positive results.</p>
<pre>strncpy(m_strName, *strName, 25); </pre>
<p>Does strncpy() takes care of extracting a string from an address?? or is it something else?</p>
<p>Please explain.</p>
<p>Regards,<br />
Mayur.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="pingback even thread-odd thread-alt depth-1 clearfix" id="comment-14388">
		<div id="div-comment-14388" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../81-welcome-to-object-oriented-programming/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 8.1 &#8212; Welcome to object-oriented programming</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-14388">
		May 4, 2008 at 5:53 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; 7.11 &#8212; Namespaces | Home | 8.2 &#8212; Classes and class members &raquo;     Thursday, August 23rd, 2007 at 10:54 [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-25329">
		<div id="div-comment-25329" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d225707c4f5a6080c9c3443c58c66ec0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Grant</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-25329">
		August 29, 2008 at 4:35 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi Alex, Great site!</p>
<p>My question is, why can&#8217;t I take the address of a member function through an instance? For example:</p>
<p>class foo<br />
{<br />
void fooFun(){};<br />
};</p>
<p>main()<br />
{<br />
foo x;<br />
void (*MyfooFun)() = &amp;x.fooFun;<br />
}</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-26070">
		<div id="div-comment-26070" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-26070">
		September 2, 2008 at 10:25 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Actually, you can, but you have to get the syntax right, and the syntax is so horrid I always have to look it up every time I want to use it.</p>
<pre>
class Foo
{
public:
    void Fun()
    {
    std::cout &lt;&lt; &quot;Fun called&quot; &lt;&lt; std::endl;
    };
};

int main()
{
    Foo pfcnX; // declare a Foo variable
    void (Foo::*MyFcn)() = pfcnX.Fun; // Set MyFcn to point to pfcnX.Fun
    (pfcnX.*MyFcn)(); // call MyFcn on pfcnX
    return 0;
}
</pre>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-3 clearfix" id="comment-26081">
		<div id="div-comment-26081" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d225707c4f5a6080c9c3443c58c66ec0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.grantandveronika.talktalk.net/default.htm' rel='external nofollow' class='url'>Grant</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-26081">
		September 3, 2008 at 12:13 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Thanks, Alex, however that syntax does not compile (for me at least). The error message explicitly suggests using </p>
<p>&amp;Foo::Fun</p>
<p>and not</p>
<p>pfcnX.Fun</p>
<p>if I use</p>
<p>&amp;pfcnX.Fun</p>
<p>the error is:</p>
<p>&#8216;&amp;&#8217; : illegal operation on bound member function expression</p>
<p>Anyway, you&#8217;ve shown me how to do it via the class scope syntax and I agree with you that the<br />
usage is pretty ugly!<br />
(PS I used the tags but they don&#8217;t work for me)</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-4 clearfix" id="comment-27027">
		<div id="div-comment-27027" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-27027">
		September 10, 2008 at 10:03 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<pre>void (Foo::*MyFcn)() = Foo::Fun; // Set MyFcn to point to pfcnX.Fun</pre>
<p>and</p>
<pre>void (Foo::*MyFcn)() = &amp;Foo::Fun; // Set MyFcn to point to pfcnX.Fun<!--formatted--></pre>
<p>both seem to work under Visual Studio 6.  Microsoft&#8217;s compilers are sometimes permissive in that they will allow you to do things that aren&#8217;t officially part of the C++ spec &#8212; I&#8217;m not sure if this is one of them.</p>
<p>Also, I think I fixed the issue with the PRE tags (finally), for future reference.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-frangdara odd alt thread-odd thread-alt depth-1 clearfix" id="comment-29093">
		<div id="div-comment-29093" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/669065e706652bf22ca85c1da270a014@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">frangdara</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-29093">
		October 4, 2008 at 6:48 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>hello everybody</p>
<p>I copid the following code and compiled it. It gives the error &#8220;Explicit decleration of function &#8216;int strcpy()&#8217; &#8221;</p>
<pre>

#include &lt;iostream&gt;
class Employee
{
public:
    char m_strName[25];
    int m_nID;
    double m_dWage;

    // Set the employee information
    void SetInfo(char *strName, int nID, double dWage)
    {
        strncpy(m_strName, strName, 25);
        m_nID = nID;
        m_dWage = dWage;
    }

    // Print employee information to the screen
    void Print()
    {
        using namespace std;
        cout &lt;&lt; &quot;Name: &quot; &lt;&lt; m_strName &lt;&lt; &quot;  Id: &quot; &lt;&lt;
            m_nID &lt;&lt; &quot;  Wage: $&quot; &lt;&lt; m_dWage &lt;&lt; endl;
    }
};

int main()
{
    // Declare two employees
    Employee cAlex;
    cAlex.SetInfo(&quot;Alex&quot;, 1, 25.00);

    Employee cJoe;
    cJoe.SetInfo(&quot;Joe&quot;, 2, 22.25);

    // Print out the employee information
    cAlex.Print();
    cJoe.Print();

    return 0;
}
</pre>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-33949">
		<div id="div-comment-33949" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/cfdd51a9318f3d51f9085dbe0f4a9635@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">M.N. Jayaram</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-33949">
		December 8, 2008 at 4:14 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi</p>
<p>Which compiler r u using?. I have no problems. I use Code::Blocks studio, the open source cross platform IDE.</p>
		</div>
</li>
		<li class="comment odd alt depth-2 clearfix" id="comment-51509">
		<div id="div-comment-51509" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3db403b4b8348f76b34e1d75d8d7480e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Dayu</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-51509">
		March 18, 2009 at 8:09 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>To Alex:</p>
<p>Thanks for this excellent tutorial. </p>
<p>I also have some problems with this code. I am using Code::Blocks 8.02. I use GCC compiler. </p>
<p>When I compile it, I have the following error:<br />
&#8230;HElloWorld/main.cpp|13|error: ‘strncpy’ was not declared in this scope|</p>
<p>I then add &#8220;#include &#8220;. Everything works fine except I still get the warning:</p>
<p>&#8230;/HElloWorld/main.cpp|31|warning: deprecated conversion from string constant to ‘char*’|</p>
		</div>
<ul class='children'>
		<li class="comment even depth-3 clearfix" id="comment-64011">
		<div id="div-comment-64011" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/075f44340a326dc55deb97bec4c84b91@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jeffrey Rolland</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-64011">
		July 9, 2009 at 9:20 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>You must add</p>
<pre>
#include &lt;cstring&gt;
<!--formatted--></pre>
<p>to compile with g++ and it will compile. Note that you will still get the warnings, but they are just warnings, not errors; you can ignore the warnings and you will get valid output.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-4 clearfix" id="comment-93034">
		<div id="div-comment-93034" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d66e1032af80c05449cbeefdcd707840@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">alex</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-93034">
		October 1, 2010 at 3:01 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>When you&#8217;ll run the class Employee through g++ you&#8217;ll get some warnings:</p>
<p>1) You must include the string library because it will not recognise you the strncpy<br />
‘strncpy’ was not declared in this scope</p>
<p>2) You have to put const in front of your char pointer otherwise you&#8217;ll receive an warning like below:<br />
deprecated conversion from string constant to ‘char*’</p>
<p>So to solve this warning you have to make like that:</p>
<p>  void SetInfo(const char *strName, int nID, double dWage)<br />
  {</p>
<p>  }</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="pingback even thread-even depth-1 clearfix" id="comment-30959">
		<div id="div-comment-30959" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../83-public-vs-private-access-specifiers/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 8.3 &#8212; Public vs private access specifiers</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-30959">
		October 25, 2008 at 9:43 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; 8.2 &#8212; Classes and class members | Home | 8.4 &#8212; Access functions and encapsulation &raquo;     Tuesday, September 4th, 2007 at [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-33948">
		<div id="div-comment-33948" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/cfdd51a9318f3d51f9085dbe0f4a9635@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">M.N. Jayaram</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-33948">
		December 8, 2008 at 3:42 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Superb tutorial!</p>
<p>In the Employee class, I would rather have the statement </p>
<p>using namespace std;</p>
<p>after the #include rather than in the middle of Employee.Print().</p>
		</div>
</li>
		<li class="comment byuser comment-author-abhi_n7 even thread-even depth-1 clearfix" id="comment-65392">
		<div id="div-comment-65392" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9fba51ffeef8baa81f57a68ee0d94827@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Prem</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65392">
		July 31, 2009 at 7:22 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hello,</p>
<p>I am a beginner in C++&#8230;.I have a few doubts/questions regarding the classes programs above..</p>
<p>In the above program of Today&#8217;s date, it prints the Today&#8217;s date, either you declare it directly in (), like (7,31,2009) or you enter it manually using &#8216;cin&#8217; for each of the month, date and year.<br />
But if I want the program to print the Tomorrow&#8217;s and Yesterday&#8217;s date by default, after getting the Today&#8217;s date as input, how could I go for it (using &#8216;class&#8217; offcourse)?</p>
<p>- Prem</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-71822">
		<div id="div-comment-71822" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1114c2d1a0202f0ae44f679621b2badb@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">thejoker585</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-71822">
		November 6, 2009 at 1:10 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>simply you will make a function let&#8217;s name it tomorrowdate and you will add 1 to day and the same to months and years but of course you have to but if conditions to mange this system as there are some months that consists of 30 and others of 31 and another if condition to add 1 to months if day &gt; 31 or 30 you must choose depending on the month no. and so on, i hope i helped u :D</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-75825">
		<div id="div-comment-75825" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c555dddd74a5adcb250f6627a7706a34@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">K.A.</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-75825">
		January 5, 2010 at 9:50 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>This section needs rewrite because, apparently, struct is grossly underestimated here and the following code works like a charm:</p>
<pre>
#include "iostream" // somehow brackets don't display :-)
using namespace std;

struct Date
{
private:
    int m_nMonth;
    int m_nDay;
    int m_nYear;
public:
    void SetDate(int nMonth, int nDay, int nYear)
    {
        m_nMonth = nMonth;
        m_nDay = nDay;
        m_nYear = nYear;
    }
    void PrintDate()
    {
        cout &lt;&lt; m_nMonth &lt;&lt; &quot; &quot; &lt;&lt;  m_nDay &lt;&lt; &quot; &quot; &lt;&lt;  m_nYear &lt;&lt; endl;
    }
};

int main()
{
    Date cToday; // this IS struct  NOT a class
    cToday.SetDate(10, 14, 2020); // call SetDate() on cToday
    cToday.PrintDate();
    return 0;
}

<!--formatted--></pre>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-77899">
		<div id="div-comment-77899" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b99ad3f056f4630b085729d4ac865dc4@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">srinu</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77899">
		February 5, 2010 at 12:58 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi Alex,<br />
        Why the size of empty Class is one byte?<br />
        Why the size of empty structure is 0 byte?</p>
<p>Regards,<br />
Srinu.</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-84893">
		<div id="div-comment-84893" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/31d43fbadaa7574ed657ab33999ac63b@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">concerned citizen</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-84893">
		May 18, 2010 at 6:19 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Here&#8217;s some insight to that:</p>
<p><a href="../../../bytes.com/topic/c/insights/660463-sizeof-empty-class-structure-1-a" rel="nofollow">http://bytes.com/topic/c/insights/660463-sizeof-empty-class-structure-1-a</a></p>
<p>Basically, if it were size 0 and you made an array out of it, since each array element is 0 in size the entire array would occupy 0 and there would be no way to differentiate say position 0 from position 3</p>
		</div>
</li>
		<li class="comment byuser comment-author-auasp odd alt depth-2 clearfix" id="comment-95692">
		<div id="div-comment-95692" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/287e685c290e9c5c3628aa93c9bef739@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Auasp</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95692">
		July 11, 2011 at 6:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>empty struct also occupy 1 byte.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-79434">
		<div id="div-comment-79434" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/fd738d19d3909d8700dfd543f4eb73fd@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Mahesh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-79434">
		March 1, 2010 at 10:52 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Structs can also hold member functions.</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-81498">
		<div id="div-comment-81498" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7cb96bc9a1d304e4597fbc1306b68dc3@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">kruti</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-81498">
		March 24, 2010 at 10:20 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi Alex,<br />
I m not getting the meaning of this line </p>
<p>&#8220;Just like a struct definition, a class definition does not declare any memory.&#8221;</p>
<p>please explain it in details.</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-81610">
		<div id="div-comment-81610" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d25b58d6894baeebd9dde4fd89bedac6@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../110-a-first-look-at-the-preprocessor/default.htm' rel='external nofollow' class='url'>Mike</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-81610">
		March 25, 2010 at 4:53 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<pre> DateStruct sToday;

// Initialize it manually
sToday.nMonth = 10;
sToday.nDay = 14;
sToday.nYear = 2020;

// Here is a function to initialize a date
void SetDate(DateStruct &amp;sDate, int nMonth, int nDay, int Year)
{
    sDate.nMonth = nMonth;
    sDate.nDay = nDay;
    sDate.nYear = nYear;
}

// Init our date to the same date using the function
SetDate(sToday, 10, 14, 2020); </pre>
<p>Hi Alex, just so you know in this code
<pre> int Year </pre>
<p> is supposed to be
<pre> int nYear </pre>
<p>Quick question, why do you use DateStruct &amp;sDate in the function instead of just DateStruct sDate (with no ampersand)<br />
Thx. Love your tutorials xD</p>
		</div>
</li>
		<li class="pingback odd alt thread-even depth-1 clearfix" id="comment-87410">
		<div id="div-comment-87410" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../../../cplusplus.psexam.com/c-tutorial-and-online-ebook/default.htm' rel='external nofollow' class='url'>C++ Tutorial and Online Ebook</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-87410">
		June 29, 2010 at 4:59 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 8.2 Classes and class members [...]</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-89416">
		<div id="div-comment-89416" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d99b45bf55bc4cc7e1dc21ffcc7d2630@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ellankavi</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-89416">
		August 1, 2010 at 4:38 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi, I have a question.. Can one class be used to initialize another class? Something like this:</p>
<pre>
class One
{
 ....
};

class Two
{
 One NewOne;
 ....
};
</pre>
<p>When I tried to do this, I had some problems in passing parameters to &#8216;class One&#8217; from &#8216;class Two&#8217;.</p>
<p>Thanks</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-89782">
		<div id="div-comment-89782" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2e2cfb68cec4477fec4b5557a0529a37@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Biraj Borah</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-89782">
		August 7, 2010 at 3:36 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>HI ellanKavi </p>
<p>    Yes u can go ahead and make object of one class in other class ..This is called COMPOSITION ,because the new class is composed of existing class.</p>
<p>just look the example below to get more info on how to pass parameter </p>
<p>class One<br />
{<br />
private :<br />
  int m_temp ;<br />
public :<br />
  One(){m_temp = 0;}   // this is the default Constructor </p>
<p> void set(int i)        // This the setter of the class<br />
  {<br />
    m_temp = i ;<br />
  }<br />
};</p>
<p>class Two<br />
{</p>
<p>public :<br />
 One NewOne ;  // Embedded Object </p>
<p>};</p>
<p>int main ()<br />
{<br />
 Two objTwo ;<br />
 objTwo.NewOne.set(37);  // access the embedded object<br />
 return 0 ;<br />
}</p>
<p>You can also go ahead and make a parameterised constructor in the class One and then the value can be passed as a parameter when the class One is instanciated .</p>
<p>Regards<br />
Biraj Borah<br />
Pune</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-93513">
		<div id="div-comment-93513" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/f8220f4c4f20032f9acc3ceb57a412b1@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">hazel reen</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-93513">
		October 9, 2010 at 8:03 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>hye..can you help me with this task please?</p>
<p>Question 2:<br />
													Consider the above figure. You can determine the position of a point using the point’s coordinate. Using a class, you need to write a complete C++ program to determine which part a point belongs to based on these :<br />
i.	the black area shows that the point is in 1st quadrant<br />
ii.	the blue area shows that the point is in 2nd quadrant<br />
iii.	the red area shows that the point is in 3rd quadrant and<br />
iv.	the green area shows that the point is in 4th quadrant.<br />
If the point is in any part of the y axis, (see the y point), then point is said to be at the x axis. And if the point is at any part of the x axis (see the x point), then it is said to be y axis.<br />
Your program should also provide a constructor function to enables an object to be initializes when it is declared.</p>
		</div>
</li>
		<li class="comment byuser comment-author-niranjan odd alt thread-odd thread-alt depth-1 clearfix" id="comment-94993">
		<div id="div-comment-94993" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/f250b00b69f4e2eb1909b93a470e05b3@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Niranjan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-94993">
		December 2, 2010 at 4:52 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi can you explain me the difference between the class declaration and definition , I am bit confused about this .</p>
<p>class example<br />
{<br />
    int a ;<br />
    public :<br />
           fun () { &#8230;.}<br />
};</p>
<p>is this is called as a class declaration or definition ?</p>
		</div>
</li>
		<li class="comment byuser comment-author-swengineer even thread-even depth-1 clearfix" id="comment-95119">
		<div id="div-comment-95119" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/55eddb03eeaf352cd86f04eaafe12131@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">SWEngineer</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95119">
		January 22, 2011 at 6:18 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Simple well described tutorial. </p>
<p>Thanks.</p>
		</div>
</li>
		<li class="comment byuser comment-author-newuser odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95336">
		<div id="div-comment-95336" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/976fc6c0b77af195f4427f5edeac36f5@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">newUser</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95336">
		April 15, 2011 at 8:34 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Wondering if using a class to replace struct is a good idea? And if Mahesh is right, the only different would then be that a class can go private (among other things)!</p>
		</div>
</li>
		<li class="comment byuser comment-author-dog44wgm even thread-even depth-1 clearfix" id="comment-96298">
		<div id="div-comment-96298" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9c71ff5967562bc826392bff4e7079f8@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">dog44wgm</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96298">
		November 4, 2011 at 9:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">Log in to Reply</a></span>		 
		</div>
		<p>Mahesh IS right.</p>
<p>Alex wrote &#8220;In C++, classes are very much like structs, except that classes provide much more power and flexibility&#8221;.</p>
<p>But to nitpick, I think he meant to say &#8220;In C++, classes and structs are very much like structures in C, except that they provide much more power and flexibility&#8221;.</p>
<p>In fact, C++ classes and structs are identical &#8211; in the sense that a struct can be/do anything that a class can be/do, and vice versa.</p>
<p>Here is the exhaustive list of differences between a class and a struct: </p>
<p>1. By default, class members are private, struct members are public.<br />
2. By default, classes are inherited privately, structs are inherited publicly.</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f82-classes-and-class-members_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../81-welcome-to-object-oriented-programming/default.htm" rel="prev">8.1 &#8212; Welcome to object-oriented programming</a> &nbsp;</div><div class="newer">&nbsp; <a href="../83-public-vs-private-access-specifiers/default.htm" rel="next">8.3 &#8212; Public vs private access specifiers</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'125'});
var load_cmc = function(){linktracker_init(3928254,125,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.498 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:49:57 -->
<!-- Compression = gzip -->