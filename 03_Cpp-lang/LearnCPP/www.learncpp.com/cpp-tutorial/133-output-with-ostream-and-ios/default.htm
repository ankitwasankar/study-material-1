<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0080)http://www.learncpp.com/cpp-tutorial/133-output-with-ostream-and-ios/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>13.3 &#8212; Output with ostream and ios &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 13.3 &#8212; Output with ostream and ios Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='13.2 &#8212; Input with istream' href='../132-input-with-istream/default.htm' />
<link rel='next' title='13.4 &#8212; Stream classes for strings' href='../134-stream-classes-for-strings/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-35' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-191 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../132-input-with-istream/default.htm" rel="prev">13.2 &#8212; Input with istream</a> &nbsp;</div><div class="newer">&nbsp; <a href="../134-stream-classes-for-strings/default.htm" rel="next">13.4 &#8212; Stream classes for strings</a> &raquo;</div></div>
<div class="post-191 post type-post status-publish format-standard hentry category-cpp-tutorial" id="post-191">


<div class="post-headline">		<h1>13.3 &#8212; Output with ostream and ios</h1>
		</div>
<div class="post-byline">By Alex, on March 12th, 2008</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>In this section, we will look at various aspects of the iostream output class (ostream).</p>
<p>Note: All of the I/O functionality in this lesson lives in the std namespace.  That means all I/O objects and functions either have to be prefixed with &#8220;std::&#8221;, or the &#8220;using namespace std;&#8221; statement has to be used.</p>
<p><strong>The insertion operator</strong></p>
<p>The insertion operator (<<) is used to put information into an output stream.  C++ has predefined insertion operations for all of the built-in data types, and you've already seen how you can <a href="../93-overloading-the-io-operators/default.htm">overload the insertion operator</a> for your own classes.</p>
<p>In the lesson on <a href="../131-input-and-output-io-streams/default.htm">streams</a>, you saw that both istream and ostream were derived from a class called ios.  One of the jobs of ios (and ios_base) is to control the formatting options for output.</p>
<p><strong>Formatting</strong></p>
<p>There are two ways to change the formatting options: flags, and manipulators.  You can think of <strong>flags</strong> as boolean variables that can be turned on and off.  <strong>Manipulators</strong> are objects placed in a stream that affect the way things are input and output.</p>
<p>To switch a flag on, use the <strong>setf()</strong> function, with the appropriate flag as a parameter.  For example, by default, C++ does not print a + sign in front of positive numbers.  However, by using the ios::showpos flag, we can change this behavior:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout.setf(ios::showpos); // turn on the ios::showpos flag
cout &lt;&lt; 27 &lt;&lt; endl;
</pre>
<p>This results in the following output:</p>
<pre>
+27
</pre>
<p>It is possible to turn on multiple ios flags at once using the OR (|) operator:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout.setf(ios::showpos | ios::uppercase); // turn on the ios::showpos and ios::uppercase flag
cout &lt;&lt; 27 &lt;&lt; endl;
</pre>
<p>To turn a flag off, use the <strong>unsetf()</strong> function:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout.setf(ios::showpos); // turn on the ios::showpos flag
cout &lt;&lt; 27 &lt;&lt; endl;
cout.unsetf(ios::showpos); // turn off the ios::showpos flag
cout &lt;&lt; 28 &lt;&lt; endl;
</pre>
<p>This results in the following output:</p>
<pre>
+27
28
</pre>
<p>There&#8217;s one other bit of trickiness when using setf() that needs to be mentioned.  Many flags belong to groups, called format groups.  A <strong>format group</strong> is a group of flags that perform similar (sometimes mutually exclusive) formatting options.  For example, a format group named &#8220;basefield&#8221; contains the flags &#8220;oct&#8221;, &#8220;dec&#8221;, and &#8220;hex&#8221;, which controls the base of integral values.  By default, the &#8220;dec&#8221; flag is set.  Consequently, if we do this:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout.setf(ios::hex); // try to turn on hex output
cout &lt;&lt; 27 &lt;&lt; endl;
</pre>
<p>We get the following output:</p>
<pre>
27
</pre>
<p>It didn&#8217;t work!  The reason why is because setf() only turns flags on &#8212; it isn&#8217;t smart enough to turn mutually exclusive flags off.  Consequently, when we turned ios::hex on, ios::dec was still on, and ios::dec apparently takes precedence.  There are two ways to get around this problem.</p>
<p>First, we can turn off ios::dec so that only ios::hex is set:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout.unsetf(ios::dec); // turn off decimal output
cout.setf(ios::hex); // turn on hexadecimal output
cout &lt;&lt; 27 &lt;&lt; endl;
</pre>
<p>Now we get output as expected:</p>
<pre>
1b
</pre>
<p>The second way is to use a different form of setf() that takes two parameters: the first parameter is the flag to set, and the second is the formatting group it belongs to.  When using this form of setf(), all of the flags belonging to the group are turned off, and only the flag passed in is turned on.  For example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
// Turn on ios::hex as the only ios::basefield flag
cout.setf(ios::hex, ios::basefield);
cout &lt;&lt; 27 &lt;&lt; endl;
</pre>
<p>This also produces the expected output:</p>
<pre>
1b
</pre>
<p>Using setf() and unsetf() tends to be awkward, so C++ provides a second way to change the formatting options: manipulators.  The nice thing about manipulators is that they are smart enough to turn on and off the appropriate flags.  Here is an example of using some manipulators to change the base:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; hex &lt;&lt; 27 &lt;&lt; endl; // print 27 in hex
cout &lt;&lt; 28 &lt;&lt; endl; // we're still in hex
cout &lt;&lt; dec &lt;&lt; 29 &lt;&lt; endl; // back to decimal
</pre>
<p>This program produces the output:</p>
<pre>
1b
1c
29
</pre>
<p>In general, using manipulators is much easier than setting and unsetting flags.  Many options are available via both flags and manipulators (such as changing the base), however, other options are only available via flags or via manipulators, so it&#8217;s important to know how to use both.</p>
<p><strong>Useful formatters</strong></p>
<p>Here is a list of some of the more useful flags, manipulators, and member functions.  Flags live in the ios class, manipulators lives in the std namespace, and the member functions live in the ostream class.</p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Group</th>
<th>Flag</th>
<th>Meaning</th>
</tr>
<tr>
<td></td>
<td>boolalpha</td>
<td>If set, booleans print &#8220;true&#8221; or &#8220;false&#8221;.  If not set, booleans print 0 or 1</td>
</tr>
</table>
<p></p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Manipulator</th>
<th>Meaning</th>
</tr>
<tr>
<td>boolalpha</td>
<td>Booleans print &#8220;true&#8221; or &#8220;false&#8221;</td>
</tr>
<tr>
<td>noboolalpha</td>
<td>Booleans print 0 or 1 (default)</td>
</tr>
</table>
<p>Example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; true &lt;&lt; &quot; &quot; &lt;&lt; false &lt;&lt; endl;

cout.setf(ios::boolalpha);
cout &lt;&lt; true &lt;&lt; &quot; &quot; &lt;&lt; false &lt;&lt; endl;

cout &lt;&lt; noboolalpha &lt;&lt; true &lt;&lt; &quot; &quot; &lt;&lt; false &lt;&lt; endl;

cout &lt;&lt; boolalpha &lt;&lt; true &lt;&lt; &quot; &quot; &lt;&lt; false &lt;&lt; endl;
</pre>
<p>Result:</p>
<pre>
0 1
true false
0 1
true false
</pre>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Group</th>
<th>Flag</th>
<th>Meaning</th>
</tr>
<tr>
<td></td>
<td>showpos</td>
<td>If set, prefix positive numbers with a +</td>
</tr>
</table>
<p></p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Manipulator</th>
<th>Meaning</th>
</tr>
<tr>
<td>showpos</td>
<td>Prefixes positive numbers with a +</td>
</tr>
<tr>
<td>noshowpos</td>
<td>Doesn&#8217;t prefix positive numbers with a +</td>
</tr>
</table>
<p>Example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; 5 &lt;&lt; endl;

cout.setf(ios::showpos);
cout &lt;&lt; 5 &lt;&lt; endl;

cout &lt;&lt; noshowpos &lt;&lt; 5 &lt;&lt; endl;

cout &lt;&lt; showpos &lt;&lt; 5 &lt;&lt; endl;
</pre>
<p>Result:</p>
<pre>
5
+5
5
+5
</pre>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Group</th>
<th>Flag</th>
<th>Meaning</th>
</tr>
<tr>
<td></td>
<td>uppercase</td>
<td>If set, uses upper case letters</td>
</tr>
</table>
<p></p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Manipulator</th>
<th>Meaning</th>
</tr>
<tr>
<td>uppercase</td>
<td>Uses upper case letters</td>
</tr>
<tr>
<td>nouppercase</td>
<td>Uses lower case letters</td>
</tr>
</table>
<p>Example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; 12345678.9 &lt;&lt; endl;

cout.setf(ios::uppercase);
cout &lt;&lt; 12345678.9 &lt;&lt; endl;

cout &lt;&lt; nouppercase &lt;&lt; 12345678.9&lt;&lt; endl;

cout &lt;&lt; uppercase &lt;&lt; 12345678.9 &lt;&lt; endl;
</pre>
<p>Result:</p>
<pre>
1.23457e+007
1.23457E+007
1.23457e+007
1.23457E+007
</pre>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Group</th>
<th>Flag</th>
<th>Meaning</th>
</tr>
<tr>
<td>basefield</td>
<td>dec</td>
<td>Prints values in decimal (default)</td>
</tr>
<tr>
<td>basefield</td>
<td>hex</td>
<td>Prints values in hexadecimal</td>
</tr>
<tr>
<td>basefield</td>
<td>oct</td>
<td>Prints values in octal</td>
</tr>
<tr>
<td>basefield</td>
<td>(none)</td>
<td>Prints values according to leading characters of value</td>
</tr>
</table>
<p></p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Manipulator</th>
<th>Meaning</th>
</tr>
<tr>
<td>dec</td>
<td>Prints values in decimal</td>
</tr>
<tr>
<td>hex</td>
<td>Prints values in hexadecimal</td>
</tr>
<tr>
<td>oct</td>
<td>Prints values in octal</td>
</tr>
</table>
<p>Example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; 27 &lt;&lt; endl;

cout.setf(ios::dec, ios::basefield);
cout &lt;&lt; 27 &lt;&lt; endl;

cout.setf(ios::oct, ios::basefield);
cout &lt;&lt; 27 &lt;&lt; endl;

cout.setf(ios::hex, ios::basefield);
cout &lt;&lt; 27 &lt;&lt; endl;

cout &lt;&lt; dec &lt;&lt; 27 &lt;&lt; endl;
cout &lt;&lt; oct &lt;&lt; 27 &lt;&lt; endl;
cout &lt;&lt; hex &lt;&lt; 27 &lt;&lt; endl;
</pre>
<p>Result:</p>
<pre>
27
27
33
1b
27
33
1b
</pre>
<p>By now, you should be able to see the relationship between setting formatting via flag and via manipulators.  In future examples, we will use manipulators unless they are not available.</p>
<p><strong>Precision, notation, and decimal points</strong></p>
<p>Using manipulators (or flags), it is possible to change the precision and format with which floating point numbers are displayed.  There are several formatting options that combine in somewhat complex ways, so we will take a closer look at this.</p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Group</th>
<th>Flag</th>
<th>Meaning</th>
</tr>
<tr>
<td>floatfield</td>
<td>fixed</td>
<td>Uses decimal notation for floating-point numbers</td>
</tr>
<tr>
<td>floatfield</td>
<td>scientific</td>
<td>Uses scientific notation for floating-point numbers</td>
</tr>
<tr>
<td>floatfield</td>
<td>(none)</td>
<td>Uses fixed for numbers with few digits, scientific otherwise</td>
</tr>
<tr>
<td>floatfield</td>
<td>showpoint</td>
<td>Always show a decimal point and trailing 0&#8242;s for floating-point values</td>
</tr>
</table>
<p></p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Manipulator</th>
<th>Meaning</th>
</tr>
<tr>
<td>fixed</td>
<td>Use decimal notation for values</td>
</tr>
<tr>
<td>scientific</td>
<td>Use scientific notation for values</td>
</tr>
<tr>
<td>showpoint</td>
<td>Show a decimal point and trailing 0&#8242;s for floating-point values</td>
</tr>
<tr>
<td>noshowpoint</td>
<td>Don&#8217;t show a decimal point and trailing 0&#8242;s for floating-point values</td>
</tr>
<tr>
<td>setprecision(int)</td>
<td>Sets the precision of floating-point numbers (defined in iomanip.h)</td>
</tr>
</table>
<p></p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Member function</th>
<th>Meaning</th>
</tr>
<tr>
<td>precision()</td>
<td>Returns the current precision of floating-point numbers</td>
</tr>
<tr>
<td>precision(int)</td>
<td>Sets the precision of floating-point numbers and returns old precision</td>
</tr>
</table>
<p>If fixed or scientific notation is used, precision determines how many decimal places in the fraction is displayed.   Note that if the precision is less than the number of significant digits, the number will be rounded.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; fixed &lt;&lt; endl;
cout &lt;&lt; setprecision(3) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(4) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(5) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(6) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(7) &lt;&lt; 123.456 &lt;&lt; endl;

cout &lt;&lt; scientific &lt;&lt; endl;
cout &lt;&lt; setprecision(3) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(4) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(5) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(6) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(7) &lt;&lt; 123.456 &lt;&lt; endl;
</pre>
<p>Produces the result:</p>
<pre>
123.456
123.4560
123.45600
123.456000
123.4560000

1.235e+002
1.2346e+002
1.23456e+002
1.234560e+002
1.2345600e+002
</pre>
<p>If neither fixed nor scientific are being used, precision determines how many significant digits should be displayed.  Again, if the precision is less than the number of significant digits, the number will be rounded.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; setprecision(3) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(4) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(5) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(6) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(7) &lt;&lt; 123.456 &lt;&lt; endl;
</pre>
<p>Produces the following result:</p>
<pre>
123
123.5
123.46
123.456
123.456
</pre>
<p>Using the showpoint manipulator or flag, you can make the stream write a decimal point and trailing zeros.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; showpoint &lt;&lt; endl;
cout &lt;&lt; setprecision(3) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(4) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(5) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(6) &lt;&lt; 123.456 &lt;&lt; endl;
cout &lt;&lt; setprecision(7) &lt;&lt; 123.456 &lt;&lt; endl;
</pre>
<p>Produces the following result:</p>
<pre>
123.
123.5
123.46
123.456
123.4560
</pre>
<p>Here&#8217;s a summary table with some more examples:</p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Option</th>
<th>Precision</th>
<th>12345.0</th>
<th>0.12345</th>
</tr>
<tr>
<td rowspan=4>Normal</td>
<td>3</td>
<td>1.23e+004</td>
<td>0.123</td>
</tr>
<tr>
<td>4</td>
<td>1.235e+004</td>
<td>0.1235</td>
</tr>
<tr>
<td>5</td>
<td>12345</td>
<td>0.12345</td>
</tr>
<tr>
<td>6</td>
<td>12345</td>
<td>0.12345</td>
</tr>
<tr>
<td rowspan=4>Showpoint</td>
<td>3</td>
<td>1.23e+004</td>
<td>0.123</td>
</tr>
<tr>
<td>4</td>
<td>1.235e+004</td>
<td>0.1235</td>
</tr>
<tr>
<td>5</td>
<td>12345.</td>
<td>0.12345</td>
</tr>
<tr>
<td>6</td>
<td>12345.0</td>
<td>0.123450</td>
</tr>
<tr>
<td rowspan=4>Fixed</td>
<td>3</td>
<td>12345.000</td>
<td>0.123</td>
</tr>
<tr>
<td>4</td>
<td>12345.0000</td>
<td>0.1235</td>
</tr>
<tr>
<td>5</td>
<td>12345.00000</td>
<td>0.12345</td>
</tr>
<tr>
<td>6</td>
<td>12345.000000</td>
<td>0.123450</td>
</tr>
<tr>
<td rowspan=4>Scientific</td>
<td>3</td>
<td>1.235e+004</td>
<td>1.235e-001</td>
</tr>
<tr>
<td>4</td>
<td>1.2345e+004</td>
<td>1.2345e-001</td>
</tr>
<tr>
<td>5</td>
<td>1.23450e+004</td>
<td>1.23450e-001</td>
</tr>
<tr>
<td>6</td>
<td>1.234500e+004</td>
<td>1.234500e-001</td>
</tr>
</table>
<p><strong>Width, fill characters, and justification</strong></p>
<p>Typically when you print numbers, the numbers are printed without any regard to the space around them.  However, it is possible to left or right justify the printing of numbers.  In order to do this, we have to first define a field width, which defines the number of output spaces a value will have.  If the actual number printed is smaller than the field width, it will be left or right justified (as specified).  If the actual number is larger than the field width, it will not be truncated &#8212; it will overflow the field.</p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Group</th>
<th>Flag</th>
<th>Meaning</th>
</tr>
<tr>
<td>adjustfield</td>
<td>internal</td>
<td>Left-justifies the sign of the number, and right-justifies the value</td>
</tr>
<tr>
<td>adjustfield</td>
<td>left</td>
<td>Left-justifies the sign and value</td>
</tr>
<tr>
<td>adjustfield</td>
<td>right</td>
<td>Right-justifies the sign and value (default)</td>
</tr>
</table>
<p></p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Manipulator</th>
<th>Meaning</th>
</tr>
<tr>
<td>internal</td>
<td>Left-justifies the sign of the number, and right-justifies the value</td>
</tr>
<tr>
<td>left</td>
<td>Left-justifies the sign and value</td>
</tr>
<tr>
<td>right</td>
<td>Right-justifies the sign and value</td>
</tr>
<tr>
<td>setfill(char)</td>
<td>Sets the parameter as the fill character (defined in iomanip.h)</td>
</tr>
<tr>
<td>setw(int)</td>
<td>Sets the field width for input and output to the parameter (defined in iomanip.h)</td>
</tr>
</table>
<p></p>
<table border=1 cellpadding=3 cellspacing=0>
<tr>
<th>Member function</th>
<th>Meaning</th>
</tr>
<tr>
<td>fill()</td>
<td>Returns the current fill character</td>
</tr>
<tr>
<td>fill(char)</td>
<td>Sets the fill character and returns the old fill character</td>
</tr>
<tr>
<td>width()</td>
<td>Returns the current field width</td>
</tr>
<tr>
<td>width(int)</td>
<td>Sets the current field width and returns old field width</td>
</tr>
</table>
<p>In order to use any of these formatters, we first have to set a field width.  This can be done via the width(int) member function, or the setw() manipulator.  Note that right justification is the default.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; -12345 &lt;&lt; endl; // print default value with no field width
cout &lt;&lt; setw(10) &lt;&lt; -12345 &lt;&lt; endl; // print default with field width
cout &lt;&lt; setw(10) &lt;&lt; left &lt;&lt; -12345 &lt;&lt; endl; // print left justified
cout &lt;&lt; setw(10) &lt;&lt; right &lt;&lt; -12345 &lt;&lt; endl; // print right justified
cout &lt;&lt; setw(10) &lt;&lt; internal &lt;&lt; -12345 &lt;&lt; endl; // print internally justified
</pre>
<p>This produces the result:</p>
<pre>
-12345
    -12345
-12345
    -12345
-    12345
</pre>
<p>One thing to note is that setw() and width() only affect the next output statement.  They are not persistent like some other flags/manipulators.</p>
<p>Now, let&#8217;s set a fill character and do the same example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout.fill('*');
cout &lt;&lt; -12345 &lt;&lt; endl; // print default value with no field width
cout &lt;&lt; setw(10) &lt;&lt; -12345 &lt;&lt; endl; // print default with field width
cout &lt;&lt; setw(10) &lt;&lt; left &lt;&lt; -12345 &lt;&lt; endl; // print left justified
cout &lt;&lt; setw(10) &lt;&lt; right &lt;&lt; -12345 &lt;&lt; endl; // print right justified
cout &lt;&lt; setw(10) &lt;&lt; internal &lt;&lt; -12345 &lt;&lt; endl; // print internally justified
</pre>
<p>This produces the output:</p>
<pre>
-12345
****-12345
-12345****
****-12345
-****12345
</pre>
<p>Note that all the blank spaces in the field have been filled up with the fill character.</p>
<p>The ostream class and iostream library contain other output functions, flags, and manipulators that may be useful, depending on what you need to do.  As with the istream class, those topics are really more suited for a tutorial or book focusing on the standard library (such as the excellent <a href="../../../astore.amazon.com/lc0a-20/detail/0201379260/102-6574246-5645752">&#8220;The C++ Standard Template Library&#8221;</a> by Nicolai M. Josuttis).</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../134-stream-classes-for-strings/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 13.4 &#8212; Stream classes for strings</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter13" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../132-input-with-istream/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle>13.2 &#8212; Input with istream</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../132-input-with-istream/default.htm" rel="prev">13.2 &#8212; Input with istream</a> &nbsp;</div><div class="newer">&nbsp; <a href="../134-stream-classes-for-strings/default.htm" rel="next">13.4 &#8212; Stream classes for strings</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">10 comments to 13.3 &#8212; Output with ostream and ios</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="pingback even thread-even depth-1 clearfix" id="comment-24942">
		<div id="div-comment-24942" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../132-input-with-istream/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 13.2 &#8212; Input with istream</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-24942">
		August 25, 2008 at 7:54 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; 13.1 &#8212; Input and output (I/O) streams | Home | 13.3 &#8212; Output with ostream and ios &raquo;     Tuesday, March 4th, 2008 at 4:09 [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-26238">
		<div id="div-comment-26238" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d225707c4f5a6080c9c3443c58c66ec0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.grantandveronika.talktalk.net/default.htm' rel='external nofollow' class='url'>Grant</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-26238">
		September 4, 2008 at 1:10 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi Alex,</p>
<p>It seems to me that the outputting of numbers with iostream is the worst part of C++ (and it&#8217;s not even part of C++!) The thing that really bugs me is the persistance of things like floatfield and the non-persistance of the width settings. It means that for any given output statement you&#8217;ve no idea what will be displayed unless you explicitly set everything. For example, setting output to scientific somewhere in your program means that all subsequent output will be scientific unless you explicitly say otherwise &#8211; the only way I can see to get back to the default output is to use</p>
<p>	std::cout.unsetf(std::ios::scientific|std::ios::showpoint|std::ios::fixed);</p>
<p>Bring on C# (or use stdio) I say.</p>
<p>Anyway enough of that, there are a few typos on this page:</p>
<p>In the description of the floatfield group, &#8220;floatfield&#8221; is missing for showpoint.<br />
In the floating point output examples table, for &#8220;fixed&#8221; precision 3 there are two decimal points, and for &#8220;scientific&#8221; precisions 4-6 there are no decimal points.</p>
<p>VS 2005 seems to have a bug regarding showpoint manipulator. The following code:</p>
<p>	double x = 1.2345;<br />
	cout &lt;&lt; showpoint &lt;&lt; x &lt;&lt; endl;<br />
	cout &lt;&lt; scientific &lt;&lt; x &lt;&lt; endl;<br />
	cout &lt;&lt; showpoint &lt;&lt; x &lt;&lt; endl;<br />
	cout.setf(std::ios::showpoint,std::ios::floatfield);<br />
	cout &lt;&lt; x &lt;&lt; endl;</p>
<p>produces:</p>
<p>1.23450<br />
1.234500e+000<br />
1.234500e+000<br />
1.23450</p>
<p>so you need to use setf to switch from scientific to showpoint (not that I can imagine that will worry too many people!)</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-27033">
		<div id="div-comment-27033" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-27033">
		September 10, 2008 at 10:38 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>I am personally not a fan of the C++ I/O operators for outputting formatted numbers.  In those cases, I usually fall back to the old C-style stdio printf() function way of doing things.  Thanks for noting the errors.</p>
		</div>
</li>
</ul>
</li>
		<li class="pingback odd alt thread-even depth-1 clearfix" id="comment-27036">
		<div id="div-comment-27036" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../134-stream-classes-for-strings/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 13.4 &#8212; Stream classes for strings</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-27036">
		September 10, 2008 at 10:52 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; 13.3 &#8212; Output with ostream and ios | Home | 13.5 &#8212; Stream states and input validation &raquo;     Tuesday, March 18th, 2008 at [...]</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-31671">
		<div id="div-comment-31671" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/149af7a220fc6127018a1a171cef61c3@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Hugh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-31671">
		November 5, 2008 at 12:27 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>So, how do you go about adjusting the size of the exponent from 3 digits to 2? I have a floating point number that I want outputted as 0.000E+00 instead of 0.000E+000.</p>
<p>Any ideas?</p>
<p>Thanks</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-31817">
		<div id="div-comment-31817" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-31817">
		November 8, 2008 at 11:33 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m not sure you can adjust that in scientific notation format.  If there is a way I&#8217;m not aware how.</p>
		</div>
</li>
		<li class="comment even depth-2 clearfix" id="comment-77234">
		<div id="div-comment-77234" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/894109fc87acb478c30cf12fd40f7843@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.youarelost.com/default.htm' rel='external nofollow' class='url'>rsmorph</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77234">
		January 26, 2010 at 11:16 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>I was stuck with the same problem. From the info i&#8217;ve gathered, the number of digits displayed in the exponent in scientific notation is implementation dependent, meaning it depends on the machine you are using.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-68436">
		<div id="div-comment-68436" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/83445e59a9f9678bc0907434d548bb40@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vinny</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-68436">
		September 16, 2009 at 4:55 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>Excellent Site. I am setting a book mark. I tried your examples and everything works fine. I would also like to reset the floating point precision back to its default. I am writing a library routine. I don&#8217;t know what the user will have for their default precision but it would be great to capture it, change the precision to my own, then reset it back.<br />
Thanks,<br />
Vinny</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-86254">
		<div id="div-comment-86254" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9a74e0368a679aa47e3946e4b43cb642@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">cpp-learner</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-86254">
		June 9, 2010 at 8:41 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>Looking forward to see sections on vector, map, iterators, etc&#8230; There are many available sources online but I know when Alex write it it will be the best</p>
		</div>
</li>
		<li class="comment byuser comment-author-emiel odd alt thread-even depth-1 clearfix" id="comment-94934">
		<div id="div-comment-94934" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/81696405fcb28f427ffde6db25dfbe84@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Emiel</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-94934">
		November 17, 2010 at 9:45 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">Log in to Reply</a></span>		 
		</div>
		<p>Great tutorials. I&#8217;ve read them all so far.</p>
<p>However, at the boolalpha example on this page I noticed 0 represents true and 1 represents false?</p>
<p>0 1 &#8211;&gt; should be 1 0<br />
true false<br />
0 1 &#8211;&gt; should be 1 0<br />
true false</p>
<p>I ran the example code to be sure (my world would collapse if true was 0 :P).</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f133-output-with-ostream-and-ios_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../132-input-with-istream/default.htm" rel="prev">13.2 &#8212; Input with istream</a> &nbsp;</div><div class="newer">&nbsp; <a href="../134-stream-classes-for-strings/default.htm" rel="next">13.4 &#8212; Stream classes for strings</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'191'});
var load_cmc = function(){linktracker_init(3928254,191,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.626 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:15:13 -->
<!-- Compression = gzip -->