<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0059)http://www.learncpp.com/cpp-tutorial/47-structs/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>4.7 &#8212; Structs &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 4.7 &#8212; Structs Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='What Google giveth, Google taketh away&#8230;' href='../../site-news/what-google-giveth-google-taketh-away/default.htm' />
<link rel='next' title='5.1 &#8212; Control flow introduction' href='../51-control-flow-introduction/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-18' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-70 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../46-typedefs/default.htm" rel="prev">4.6 &#8212; Typedefs</a> &nbsp;</div><div class="newer">&nbsp; <a href="../51-control-flow-introduction/default.htm" rel="next">5.1 &#8212; Control flow introduction</a> &raquo;</div></div>
<div class="post-70 post type-post status-publish format-standard hentry category-cpp-tutorial" id="post-70">


<div class="post-headline">		<h1>4.7 &#8212; Structs</h1>
		</div>
<div class="post-byline">By Alex, on June 20th, 2007</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>There are many instances in programming where we need more than one variable in order to represent something.  For example, to represent yourself, you might want to store your name, your birthday, your height, your weight, or any other number of characteristics about yourself.  You could do so like this:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
char strName[20];
int nBirthYear;
int nBirthMonth;
int nBirthDay;
int nHeight; // in inches
int nWeight; // in pounds
</pre>
<p>However, you now have 6 independent variables that are not grouped in any way.  If you wanted to pass information about yourself to a function, you&#8217;d have to pass each variable individually.  Furthermore, if you wanted to store information about more people, you&#8217;d have to declare 6 more variables for each additional person!  As you can see, this can quickly get out of control.</p>
<p>Fortunately, C++ allows us to create our own user-defined aggregate data types.  An <strong>aggregate data type</strong> is a data type that groups multiple individual variables together.  One of the simplest aggregate data type is the struct.  A <strong>struct</strong> (short for structure) allows us to group variables of mixed data types together into a single unit.</p>
<p>Because structs are user-defined, we first have to tell the compiler what our struct looks like before we can begin using it.  To do this, we declare our struct using the <em>struct</em> keyword.  Here is an example of a struct declaration:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
struct Employee
{
    int nID;
    int nAge;
    float fWage;
};
</pre>
<p>This tells the compiler that we are defining a struct named Employee.  The Employee struct contains 3 variables inside of it: two ints and a float.  These variables are called <strong>members</strong> (or fields).  Keep in mind that the above is just a declaration &#8212; even though we are telling the compiler that the struct will have variables, no memory is allocated at this time.</p>
<p>In order to use the Employee struct, we simply declare a variable of type Employee:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
Employee sJoe;
</pre>
<p>sJoe is a variable of type Employee.  As with normal variables, declaring a variable allocates memory for that variable.  Typically, the size of a struct is the sum of the size of all it&#8217;s members.  In this case, since each integer is 4 bytes and a float is 4 bytes, Employee would be 12 bytes.  However, some platforms have specific rules about how variables must be laid out in memory &#8212; consequently, the compiler may leave gaps between the variables.  As a result, we can say the struct will be at minimum 12 bytes.</p>
<p>To find out the exact size of Employee, we can use the sizeof operator:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
cout &lt;&lt; &quot;The size of Employee is &quot; &lt;&lt; sizeof(Employee);
</pre>
<p>On the author&#8217;s Pentium 4, this prints <code>The size of Employee is 12</code>.</p>
<p>When we declare a variable such as <code>Employee sJoe</code>, sJoe refers to the entire struct (which contains the member variables).  In order to access the individual members, we use the <strong>member selection operator</strong> (which is a period).  As with normal variables, struct member variables are not initialized, and will typically contain junk.  We must initialize them manually.  Here is an example of using the member selection operator to initialize each member variable:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
Employee sJoe;
sJoe.nID= 14; // initialize nID within sJoe
sJoe.nAge = 32; // initialize nAge within sJoe
sJoe.fWage = 24.15; // initialize fWage within sJoe
</pre>
<p>It is possible to declare multiple variables of the same struct type:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
Employee sJoe; // create an Employee struct for Joe
sJoe.nID = 14;
sJoe.nAge = 32;
sJoe.fWage = 24.15;

Employee sFrank; // create an Employee struct for Frank
sFrank.nID = 15;
sFrank.nAge = 28;
sFrank.fWage = 18.27;
</pre>
<p>In the above example, it is very easy to tell which member variables belong to Joe and which belong to Frank.  This provides a much higher level of organization than individual variables would.  Furthermore, because the members all have the same name, this provides consistency across multiple variables of the same type.</p>
<p>Struct member variables act just like normal variables, so it is possible to do normal operations on them:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int nTotalAge = sJoe.nAge + sFrank.nAge;

if (sJoe.fWage &gt; sFrank.fWage)
    cout &lt;&lt; &quot;Joe makes more than Frank&quot; &lt;&lt; endl;

// Frank got a promotion
sFrank.fWage += 2.50;

// Today is Joe's birthday
sJoe.nAge++;
</pre>
<p>Another big advantage of using structs over individual variables is that we can pass the entire struct to a function that needs to work with the members:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;

void PrintInformation(Employee sEmployee)
{
    using namespace std;
    cout &lt;&lt; &quot;ID:   &quot; &lt;&lt; sEmployee.nID &lt;&lt; endl;
    cout &lt;&lt; &quot;Age:  &quot; &lt;&lt; sEmployee.nAge &lt;&lt; endl;
    cout &lt;&lt; &quot;Wage: &quot; &lt;&lt; sEmployee.fWage &lt;&lt; endl &lt;&lt; endl;
}

int main()
{
    Employee sJoe; // create an Employee struct for Joe
    sJoe.nID = 14;
    sJoe.nAge = 32;
    sJoe.fWage = 24.15;

    Employee sFrank; // create an Employee struct for Frank
    sFrank.nID = 15;
    sFrank.nAge = 28;
    sFrank.fWage = 18.27;

    // Print Joe's information
    PrintInformation(sJoe);

    // Print Frank's information
    PrintInformation(sFrank);

    return 0;
}
</pre>
<p>In the above example, we pass an entire Employee struct to PrintInformation().  This prevents us from having to pass each variable individually.  Furthermore, if we ever decide to add new members to our Employee struct, we will not have to change the function declaration or function call!</p>
<p>PrintInformation() uses the Employee struct passed to it to print out employee information to the screen.  The above program outputs:</p>
<pre>
ID:   14
Age:  32
Wage: 24.15

ID:   15
Age:  28
Wage: 18.27
</pre>
<p>Structs can contain other structs.  For example:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
struct Company
{
    Employee sCEO; // Employee is a struct within the Company struct
    int nNumberOfEmployees;
};

Company sMyCompany;
</pre>
<p>In this case, if we wanted to know what the CEO&#8217;s salary was, we simply use the member selection operator twice: <code>sMyCompany.sCEO.fWage;</code></p>
<p>This selects the sCEO member from sMyCompany, and then selects the fWage member from within sCEO.</p>
<p><strong>Initializer lists</strong></p>
<p>Initializing structs member by member is a little cumbersome, so C++ supports a faster way to initialize structs using an <strong>initializer list</strong>.  This allows you to initialize some or all the members of a struct at declaration time.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
struct Employee
{
    int nID;
    int nAge;
    float fWage;
};

Employee sJoe = {1, 42, 60000.0f}; // nID=1, nAge=42, fWage=60000.0
</pre>
<p>You can use nested initializer lists for nested structs:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
struct Employee
{
    int nID;
    int nAge;
    float fWage;
};

struct Company
{
    Employee sCEO; // Employee is a struct within the Company struct
    int nNumberOfEmployees;
};

Company sCo1 = {{1, 42, 60000.0f}, 5};
</pre>
<p><strong>A few final notes on structs</strong></p>
<p>The &#8220;m_&#8221; Hungarian Notation prefix for members is typically not used for structs, even though structs contain members.  This is (in part) because all variables in a struct are members!  Consequently, labeling them with a &#8220;m_&#8221; prefix is somewhat redundant.</p>
<p>It is common to declare structs in a header file, so they can be accessed by multiple source files.</p>
<p>The class aggregate data type builds on top of the functionality offered by structs.  Classes are at the heart of C++ object-oriented programming.  Understanding structs is the first step towards object-oriented programming!</p>
<p><strong>Quiz</strong></p>
<p>1) You are running a website, and you are trying to keep track of how much money you make per day from advertising.  Declare an advertising struct that keeps track of how many ads you&#8217;ve shown to readers, what percentage of users clicked on ads (as a floating point number between 0 and 1), and how much you earned on average from each ad that was clicked.  Read in values for each of these fields from the user.  Pass the advertising struct to a function that prints each of the values, and then calculates how much you made for that day (multiply all 3 fields together).</p>
<p>2) Write a struct to hold a fraction.  The struct should have a integer numerator and a integer denominator member.  Declare 2 fraction variables and read them in from the user.  Write a function called multiply that takes both fractions, multiplies them together, and prints the result out as a decimal number.</p>
<p><strong>Quiz Answers</strong></p>
<p>1) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id1361169327'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id1361169327" style="display:none">
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;

// First we need to define our Advertising struct
struct Advertising
{
    int nAdsShown;
    float fClickThroughRate; // as a %
    float fAverageEarningsPerClick;
};

void PrintAdvertising(Advertising sAd)
{
    using namespace std;
    cout &lt;&lt; &quot;Number of ads shown: &quot; &lt;&lt; sAd.nAdsShown &lt;&lt; endl;
    cout &lt;&lt; &quot;Click through rate: &quot; &lt;&lt; sAd.fClickThroughRate &lt;&lt; endl;
    cout &lt;&lt; &quot;Average earnings per click: $&quot; &lt;&lt; sAd.fAverageEarningsPerClick &lt;&lt; endl;

    // The following line is split up to reduce the length
    cout &lt;&lt; &quot;Total Earnings: $&quot; &lt;&lt;
        (sAd.nAdsShown * sAd.fClickThroughRate * sAd.fAverageEarningsPerClick) &lt;&lt; endl;
}

int main()
{
    using namespace std;
    // Declare an Advertising struct variable
    Advertising sAd;

    cout &lt;&lt; &quot;How many ads were shown today? &quot;;
    cin &gt;&gt; sAd.nAdsShown;
    cout &lt;&lt; &quot;What was the click through rate? &quot;;
    cin &gt;&gt; sAd.fClickThroughRate;
    cout &lt;&lt; &quot;What was the average earnings per click? &quot;;
    cin &gt;&gt; sAd.fAverageEarningsPerClick;

    PrintAdvertising(sAd);
    return 0;
}
</pre>
</div>
<p>2) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id242597594'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id242597594" style="display:none">
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;

struct Fraction
{
    int nNumerator;
    int nDenominator;
};

void Multiply(Fraction sF1, Fraction sF2)
{
    using namespace std;

    // Don't forget the static cast, otherwise the compiler will do integer division!
    cout &lt;&lt; static_cast&lt;float&gt;(sF1.nNumerator * sF2.nNumerator) /
        (sF1.nDenominator * sF2.nDenominator);
}

int main()
{
    using namespace std;

    // Allocate our first fraction
    Fraction sF1;
    cout &lt;&lt; &quot;Input the first numerator: &quot;;
    cin &gt;&gt; sF1.nNumerator;
    cout &lt;&lt; &quot;Input the first denominator: &quot;;
    cin &gt;&gt; sF1.nDenominator;

    // Allocate our second fraction
    Fraction sF2;
    cout &lt;&lt; &quot;Input the second numerator: &quot;;
    cin &gt;&gt; sF2.nNumerator;
    cout &lt;&lt; &quot;Input the second denominator: &quot;;
    cin &gt;&gt; sF2.nDenominator;

    Multiply(sF1, sF2);

    return 0;
}
</pre>
</div>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../51-control-flow-introduction/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 5.1 &#8212; Control flow introduction</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter4" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../46-typedefs/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 4.6 &#8212; Typedefs</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../46-typedefs/default.htm" rel="prev">4.6 &#8212; Typedefs</a> &nbsp;</div><div class="newer">&nbsp; <a href="../51-control-flow-introduction/default.htm" rel="next">5.1 &#8212; Control flow introduction</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">56 comments to 4.7 &#8212; Structs</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="pingback even thread-even depth-1 clearfix" id="comment-858">
		<div id="div-comment-858" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../82-classes-and-class-members/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 8.2 -- Classes and class members</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-858">
		September 4, 2007 at 1:18 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] better correspond to the problem being worked upon. You have already seen how enumerated types and structs can be used to create your own custom data [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-6606">
		<div id="div-comment-6606" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/65517b5a29bb537453c0fcc2ee00c155@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Skylark</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6606">
		January 25, 2008 at 3:28 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Is there a &#8216;with&#8217; keyword that allows you to edit variables of a structure without having to re-type the name repeatedly [like in Visual Basic]?</p>
<p><code><br />
Employee sFrank //a variable of the Employee type</p>
<p>with sFrank<br />
.nEmployeeID = 15<br />
.nAge = 28<br />
[end with statement]</p>
<p>// or something like that?<br />
</code></p>
<p>Not that I&#8217;m lazy or anything&#8230;</p>
<p>PS: I think there are some unwanted borders/shading on this page.</p>
<p>Bye!</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-6607">
		<div id="div-comment-6607" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6607">
		January 25, 2008 at 3:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Nope, there is no &#8220;with&#8221; keyword, nor any keyword that mimics that kind of functionality.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-sm00th_0perat0r odd alt depth-3 clearfix" id="comment-95225">
		<div id="div-comment-95225" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/587adbce57d2a7f95a98ac67f0b18658@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sm00th_0perat0r</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95225">
		March 1, 2011 at 6:51 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<pre>I&#039;ll bet one could be created!! C++ rocks!!!</pre>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="pingback even thread-even depth-1 clearfix" id="comment-13462">
		<div id="div-comment-13462" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../46-typedefs/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 4.6 &#8212; Typedefs</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-13462">
		April 28, 2008 at 8:44 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...]  4.7 â€” Structs [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-19342">
		<div id="div-comment-19342" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/de4e9534819b7c9154de5d67c84398c0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Mitul Golakiya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-19342">
		June 19, 2008 at 3:45 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>/* Program of Structure Exerice 1 */</p>
<p>#include &lt;iostream.h&gt;<br />
#include &lt;conio.h&gt;</p>
<p>struct web<br />
{<br />
	int adv;<br />
	float rate;<br />
	float click;<br />
};</p>
<p>float money(int adv,float rate,float click)<br />
{<br />
	float totalearning;<br />
	totalearning = (adv * rate * click);<br />
	return totalearning;<br />
}</p>
<p>web mny;</p>
<p>void main()<br />
{<br />
	float res;</p>
<p>	clrscr();</p>
<p>	cout &lt;&lt; &quot;n How many advertise was shown: &quot;;<br />
	cin &gt;&gt; mny.adv;</p>
<p>	cout &lt;&lt; &quot;n What was rate of click : &quot;;<br />
	cin &gt;&gt; mny.rate;</p>
<p>	cout &lt;&lt; &quot;n Average of earning per click : &quot;;<br />
	cin &gt;&gt; mny.click;</p>
<p>	res = money(mny.adv , mny.rate , mny.click);</p>
<p>	cout &lt;&lt; &quot;n The Total earning is &quot; &lt;&lt; res;</p>
<p>	getch();<br />
}</p>
<p>/* End of Program */</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-20482">
		<div id="div-comment-20482" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/660f8246af0d3ca1f15b111bb3c6e428@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Astro</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-20482">
		July 7, 2008 at 2:38 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>We can pass a structure to a function.</p>
<p>But can a function return a structure of data? </p>
<p>Cheers.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-23164">
		<div id="div-comment-23164" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-23164">
		August 8, 2008 at 9:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Yes, a function can return a structure of data.  This is one of the few ways to return multiple values from a function.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-22501">
		<div id="div-comment-22501" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/0e7596c4a36375caa742d175309a1ed3@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">siku</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-22501">
		August 1, 2008 at 11:28 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Is there such a thing like typedef pointers? I got into trouble to initialize PCOORD. Finally I figured it out but I am not sure that am I doing the right thing? I thought it would be good to put this code example here since the mechanism is used in many places.</p>
<p>For example (code):</p>
<p>typedef struct Coordinate<br />
{<br />
   short X;<br />
   short Y;<br />
} COORD, *PCOORD;</p>
<p>int main()<br />
{<br />
   COORD pos;<br />
   pos.X = 0;<br />
   pos.Y = 0;<br />
   PCOORD pPos = &amp;pos;<br />
}</p>
<p>At the beginning my main function looked like the main() below:</p>
<p>int main()<br />
{<br />
   //this is the wrong way to do things<br />
   PCOORD pPos;<br />
   pPos-&gt;X = 0;<br />
   pPos-&gt;Y = 0;<br />
   //if you use pPos now in somewhere compiler gives you warning that pPos is not initialized and my program crashed if I run that.<br />
   // Why is it so? Why I cant initialize?<br />
}</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-23165">
		<div id="div-comment-23165" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-23165">
		August 8, 2008 at 9:51 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Yes, you can do this &#8212; PCOORD is a typedef&#8217;s poniter to a Coordinate struct.  You can&#8217;t initialize your pPos because pPos is a pointer, and you haven&#8217;t set it to point at anything.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-31339">
		<div id="div-comment-31339" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/23490d73ae5456568478541137e2a812@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">som shekhar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-31339">
		October 30, 2008 at 4:22 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
#include&lt;iostream.h&gt;

struct Score
{
	int nScore;
};
void ReadScore(Score s1)
{
	cout&lt;&lt;&quot;\nEnter Score:&quot;;
	cin&gt;&gt;s1.nScore;
}
void PrintScore(Score s1)
{
	cout&lt;&lt;&quot;\nScore=&quot;&lt;&lt; s1.nScore;
}

int main()
{
	Score s1;
	ReadScore(s1);
	PrintScore(s1);
	return 0;
}
</pre>
<p>When i print the score i got junk , i understood since initially s1 was not initialised, and<br />
when it is passed to function ReadScore s1 now become a local scope for that function and<br />
value got destroyed after the function ends and dats y i got junk value.<br />
But When i am doing like this</p>
<pre>
#include&lt;iostream.h&gt;

struct Score
{
	int nScore;
};
void ReadScore(Score s1)
{
	Score s2;
	cout&lt;&lt;&quot;\nEnter Score:&quot;;
	cin&gt;&gt;s2.nScore;
	s1 =s2;
}
void PrintScore(Score s1)
{
	cout&lt;&lt;&quot;\nScore=&quot;&lt;&lt; s1.nScore;
}

int main()
{
	Score s1;
	ReadScore(s1);
	PrintScore(s1);
	return 0;
}
</pre>
<p>i m still getting junk.Well i have created another structure variable s2, and then i assigned<br />
s2 to s1, so it will be copying the score, Correct??? then y the value is getting destroyed after the f<br />
the function ends</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-63757">
		<div id="div-comment-63757" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b7049051adbf6ef4625b968315004896@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Quinn</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63757">
		July 5, 2009 at 5:47 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>This is probably old but I&#8217;ll answer it anyway, for future reference.</p>
<p>ReadScore doesn&#8217;t return the s1 struct. Since s1 is declared locally in both the main function and the ReadScore function, it&#8217;s two separate Score structs. Therefore, when you called ReadScore, it didn&#8217;t change the value of main()s s1 Score struct. To change that code to work right, you&#8217;d either need to use pointers, or you could return the struct from ReadScore. The following examples exclude your other perfectly fine function and struct declaration.</p>
<p>Returning struct:</p>
<pre>Score ReadScore()
{
    cout &lt;&lt; &quot;\nEnter Score: &quot;;
    Score s1;
    cin &gt;&gt; s1.nScore;
    return s1;
}

int main()
{
    Score s1;
    s1 = ReadScore();
    PrintScore(s1);
    return 0;
}</pre>
<p>Or you could use pointers:</p>
<pre>void ReadScore(Score* s1)
{
    cout &lt;&lt; &quot;\nEnter Score: &quot;;
    cin &gt;&gt; s1-&gt;nScore;
}

int main()
{
    Score s1;
    ReadScore(&amp;s1);
    PrintScore(s1);
    return 0;
}</pre>
<p>Hope that helps!</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-31341">
		<div id="div-comment-31341" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/23490d73ae5456568478541137e2a812@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">som shekhar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-31341">
		October 30, 2008 at 4:33 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Okay i understood what can go wrong in the above problem???correct me if i am wrong!!<br />
when i declare Score s1; memory has been allocated lets say its address is 123.<br />
Now when i am passing this s1 to the function ReadScore, this function will create a copy of s1<br />
which will have different memory,(let say its address is 125) so it does everything right,<br />
but doesnt touch at all the address 123..which is still junk. SO i m getting junk correct?</p>
<p>the above problem i overcame ,when i send the reference of the s1!!!<br />
Or else i can call the PrintScore inside the ReadScore function..this will also eliminates the problem.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-31343">
		<div id="div-comment-31343" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/3860fb654fc044c14c373fca4f482d55@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Chris Walker</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-31343">
		October 30, 2008 at 4:54 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Exactly! This is a pass-parameter-by-value-or-reference issue. As a general rule: if you need to modify the struct/obj and keep changes in the previous scope, pass by reference, not by value. Your description of what was happening in your code is spot on.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-33864">
		<div id="div-comment-33864" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/5bce745218b9872c6e51d55c2682f54e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kinten</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-33864">
		December 6, 2008 at 4:01 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>I have see that some people define structs this way</p>
<pre>
struct something {
    int x;
    int y
} something</pre>
<p>What I dont understand is, why they write &#8220;something&#8221; two times?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-33901">
		<div id="div-comment-33901" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-33901">
		December 7, 2008 at 10:54 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>It&#8217;s easier to understand when you use different labels:</p>
<pre>
struct something {
    int x;
    int y;
} somethingelse;
</pre>
<p>In this case, something is the name of the struct itself.  It&#8217;s like naming a function, it&#8217;s just a label to reference it by later.  This doesn&#8217;t actually create a struct object, it just lays out what a struct looks like.</p>
<p>somethingelse declares an actual struct object.  It is a variable that takes up memory.</p>
<p>So when you see something like this:</p>
<pre>
struct something {
    int x;
    int y;
} something;
</pre>
<p>It basically means you&#8217;re defining a struct named something, and then also defining a local variable with the same name.  In my opinion, this is bad coding style since you&#8217;re using the same name for two different things.</p>
<p>Usually when I see this, it&#8217;s because people want a &#8220;one off&#8221; struct &#8212; something that&#8217;s only used once.  In that case, you can just use an anonymous struct:</p>
<pre>
struct {
    int x;
    int y;
} something;
</pre>
<p>This struct has no name and the type can never be referenced directly.  However, something is a variable of that type.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-33978">
		<div id="div-comment-33978" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/61170ab3397f48a447bea7e8fccd3008@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Shai</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-33978">
		December 8, 2008 at 1:18 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>I believe you have a mistake in your PrintInformation() example. The function tries to print the variable nID within sEmployee, but the ID variable was declared as nEmployeeID in the Employee struct.</p>
<p>Extremely helpful tutorials, thanks!</p>
<p>[ Fixed!  Thanks for letting me know.  -Alex ]</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-36922">
		<div id="div-comment-36922" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7e260ba6cae5d3e8cd9820eaac911511@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Alfreda</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-36922">
		January 9, 2009 at 9:16 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<pre> #include 

void PrintInformation(Employee sEmployee)
{
    using namespace std;
    cout &lt;&lt; "ID:   " &lt;&lt; sEmployee.nID &lt;&lt; endl;
    cout &lt;&lt; "Age:  " &lt;&lt; sEmployee.nAge &lt;&lt; endl;
    cout &lt;&lt; "Wage: " &lt;&lt; sEmployee.fWage &lt;&lt; endl &lt;&lt; endl;
}

int main()
{
    Employee sJoe; // create an Employee struct for Joe
    sJoe.nID = 14;
    sJoe.nAge = 32;
    sJoe.fWage = 24.15;

    Employee sFrank; // create an Employee struct for Frank
    sFrank.nID = 15;
    sFrank.nAge = 28;
    sFrank.fWage = 18.27;

    // Print Joe's information
    PrintInformation(sJoe);

    // Print Frank's information
    PrintInformation(sFrank);

    return 0;
} <!--formatted--></pre>
<p>This example does not work for me :S</p>
<p>I get a lot of errors, first of which says &#8220;error: variable or field &#8216;PrintInformation&#8217; declared void&#8221;</p>
<p>And then a bunch of scope errors&#8230;  :S  I&#8217;m using Code::Blocks. Any idea why this is happening?</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-38918">
		<div id="div-comment-38918" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/135da002f770ecc893c9586a48a64d02@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../https@launchpad.net/~gralco' rel='external nofollow' class='url'>gralco</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-38918">
		January 23, 2009 at 10:37 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>1) you need #include </p>
<p>2) you need to include struct then define Employee</p>
<p>3) you need to include a void for each employee, so replace &#8216;sEmployee&#8217; with the employee&#8217;s names and include both in the one void to make it simpler.</p>
<p>4) I&#8217;m guessing alex didn&#8217;t want to make this example one of those &#8220;do it with me&#8217;s&#8221; he also has two void calls for each employee, while you could include both in one, this is what it would be like if you included both in one void&#8230;</p>
<p>#include </p>
<p>using namespace std;</p>
<p>struct Employee //this is where you forgot to include the struct and define &#8220;Employee<br />
{<br />
    int nID;<br />
    int nAge;<br />
    float fWage;<br />
};</p>
<p>void PrintInformation(Employee sFrank, Employee sJoe) //both employees are in one void.<br />
{<br />
    using namespace std;<br />
    cout &lt;&lt; &#8220;ID:   &#8221; &lt;&lt; sFrank.nID &lt;&lt; endl; //Frank starts here.<br />
    cout &lt;&lt; &#8220;Age:  &#8221; &lt;&lt; sFrank.nAge &lt;&lt; endl;<br />
    cout &lt;&lt; &#8220;Wage: &#8221; &lt;&lt; sFrank.fWage &lt;&lt; endl &lt;&lt; endl;<br />
    cout &lt;&lt; &#8220;ID:   &#8221; &lt;&lt; sJoe.nID &lt;&lt; endl; //Joe stats here.<br />
    cout &lt;&lt; &#8220;Age:  &#8221; &lt;&lt; sJoe.nAge &lt;&lt; endl;<br />
    cout &lt;&lt; &#8220;Wage: &#8221; &lt;&lt; sJoe.fWage &lt;&lt; endl &lt;&lt; endl;</p>
<p>}</p>
<p>int main()<br />
{<br />
    Employee sJoe;<br />
    sJoe.nID = 14;<br />
    sJoe.nAge = 32;<br />
    sJoe.fWage = 24.15;</p>
<p>    Employee sFrank;<br />
    sFrank.nID = 15;<br />
    sFrank.nAge = 28;<br />
    sFrank.fWage = 18.27;</p>
<p>    PrintInformation(sFrank, sJoe); // The void is called here.</p>
<p>    return 0;<br />
}</p>
<p>It would probably be a better idea to void the two separately because they&#8217;re different subjects, but for the sake if it being an example I just decided to explain both.<br />
And I also use Code Blocks, its a great IDE!<br />
Hope this cleared it up for you.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-3 clearfix" id="comment-61871">
		<div id="div-comment-61871" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b0037badddb85cf2285691e9808c2fb1@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Imaad</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-61871">
		June 2, 2009 at 11:06 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hello can any body debug following code.Its not running for me&#8230; having lot of errors..<br />
thanks in advance</p>
<p>#include<br />
#include &#8220;stdafx.h&#8221;</p>
<p>void PrintInformation(Employee sFrank, Employee sJoe)<br />
{<br />
using namespace std;<br />
cout &lt;&lt; “ID: ” &lt;&lt; sFrank.nID &lt;&lt; endl;<br />
cout &lt;&lt; “Age: ” &lt;&lt; sFrank.nAge &lt;&lt; endl;<br />
cout &lt;&lt; “Wage: ” &lt;&lt; sFrank.fWage &lt;&lt; endl &lt;&lt; endl;<br />
cout &lt;&lt; “ID: ” &lt;&lt; sJoe.nID &lt;&lt; endl;<br />
cout &lt;&lt; “Age: ” &lt;&lt; sJoe.nAge &lt;&lt; endl;<br />
cout &lt;&lt; “Wage: ” &lt;&lt; sJoe.fWage &lt;&lt; endl &lt;&lt; endl;</p>
<p>}</p>
<p>int main()<br />
{<br />
	using namespace std;<br />
	struct Employee<br />
{<br />
    int nID;<br />
    int nAge;<br />
    float fWage;<br />
};<br />
    Employee sJoe;<br />
    sJoe.nID = 14;<br />
    sJoe.nAge = 32;<br />
    sJoe.fWage = 24.15;</p>
<p>    Employee sFrank;<br />
    sFrank.nID = 15;<br />
    sFrank.nAge = 28;<br />
    sFrank.fWage = 18.27;</p>
<p>    PrintInformation(sFrank, sJoe);<br />
    return 0;<br />
}</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-50281">
		<div id="div-comment-50281" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a9414ab27833c52f686c49a37924edb2@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">surua</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-50281">
		March 11, 2009 at 12:48 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>why can&#8217;t I print the CEO&#8217;s data this way. I think I am doing some silly mistake&#8230;</p>
<pre>

#include &lt;iostream&gt;

using namespace std;
struct Employee
    {
        int nID;
        int nAge;
        float fWage;
    };

struct Company
    {
      Employee sCEO;
      int nNumberOfEmployees;
    };

void PrintInformation(Employee sEmployee)
{
    cout &lt;&lt; &quot;ID:   &quot; &lt;&lt; sEmployee.nID &lt;&lt; endl;
    cout &lt;&lt; &quot;Age:  &quot; &lt;&lt; sEmployee.nAge &lt;&lt; endl;
    cout &lt;&lt; &quot;Wage: &quot; &lt;&lt; sEmployee.fWage &lt;&lt; endl &lt;&lt; endl;
}

int main()
{

    Employee sJoe;
    sJoe.nID=20;
    sJoe.nAge=32;
    sJoe.fWage=12.5;

    PrintInformation(sJoe);

    Company sMyCompany;
    sMyCompany.sCEO.nID=001;
    sMyCompany.sCEO.nAge=48;
    sMyCompany.sCEO.fWage=22.5;

    PrintInformation(sCEO);

    return 0;
}
</pre>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-53039">
		<div id="div-comment-53039" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c9e3caf00e84762fb14a0e49aa15f66a@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">manju</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-53039">
		March 24, 2009 at 10:25 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>U are actually passing the structure sCEO which is not declared . So the compiler gives u an error . Since the sCEO is a member of sMyCompany. U should use sMyCompany.sCEO in order to access the structure of Employee  sCEO . </p>
<p>The following line would fix ur problem<br />
  PrintInformation(sMyCompany.sCEO);<br />
instead of<br />
  PrintInformation(sCEO);</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-62811">
		<div id="div-comment-62811" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ae906b4150691bf9853d4416095ab63e@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Matt B.</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-62811">
		June 21, 2009 at 9:19 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Is it possible to create multiple structs using a for loop?</p>
<pre>
struct sDie
{
    int nFace;
    int nSides;
};

int nDice = 5;
for (int iii = 1; iii &lt;= nDice; iii++)
{
    sDie iii;
    sDie.iii.nFace = iii;
    sDie.iii.nSides = 6;
};
</pre>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-63089">
		<div id="div-comment-63089" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ae906b4150691bf9853d4416095ab63e@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Matt B.</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-63089">
		June 25, 2009 at 10:39 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Nevermind about that last comment. I realized that there was a following article in this tutorial that explains how to accomplish this.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-65822">
		<div id="div-comment-65822" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4cfc70f9a8ae7ce0b38b67c26ea7cf83@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">MusicDave</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65822">
		August 7, 2009 at 12:49 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>My code prints out &#8220;e&#8221; for the name of the football player.  I want it to print &#8220;Jake&#8221;.<br />
Notice that I use cName[15] to allow enough space for the name.  This is probably my mistake.<br />
Everything else prints correctly.  Below are the pertinent chunks of code:</p>
<pre>
struct FootballPlayer
{
	char cName[15];
	int nVertLeap;
	int nBenchPress;
	float fFortyDash;
};

void PrintStats(FootballPlayer sPlayer)
{
	cout &lt;&lt; "Player's Name is " &lt;&lt; sPlayer.cName[15] &lt;&lt; endl;
	cout &lt;&lt; "Vertical Leap = " &lt;&lt; sPlayer.nVertLeap &lt;&lt; " inches" &lt;&lt; endl;
	cout &lt;&lt; "225lb Bench Press = " &lt;&lt; sPlayer.nBenchPress &lt;&lt; " presses" &lt;&lt; endl;
	cout &lt;&lt; "Forty Yard Dash = " &lt;&lt; sPlayer.fFortyDash &lt;&lt; " seconds" &lt;&lt; endl;
} 

FootballPlayer sJake;
	sJake.cName[15] = 'Jake';
	sJake.nVertLeap = 30;
	sJake.nBenchPress = 28;
	sJake.fFortyDash = 4.4;</pre>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-66442">
		<div id="div-comment-66442" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/05e82a1fb6eabaada82e6650cfa460eb@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">twilight</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-66442">
		August 17, 2009 at 12:21 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>you&#8217;ve got one problem I see in your code there:</p>
<p>in the method &#8220;PrintStats&#8221;, the first cout-line: You are printing out cName[15]. Why? first of all, you want the name and not just one character that would reside in &#8220;slot&#8221; 15. Second: Your array of chars &#8220;cName&#8221; only has &#8220;slots&#8221; up to number 14. You created it with a [15], so you have to access the slots with the numbers 0 &#8211; 14. That makes 15 slots. (i.e. Chars in that Array)</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-66037">
		<div id="div-comment-66037" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/05e82a1fb6eabaada82e6650cfa460eb@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">twilight</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-66037">
		August 11, 2009 at 11:26 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>When I understand the solution for 1) right, this is showing us a style of coding this tutorial itself said we should not do.</p>
<p>The method PrintAdvertising() get&#8217;s passed a struct named sAd, while the main-function declares a struct with the name sAd.<br />
So while in the PrintAdvertising() method, the local sAd is hiding the main()-sAd.</p>
<p>Am I right or did I understand something wrong? Thx!</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-71163">
		<div id="div-comment-71163" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/207658e2689f9e39e56b23d010f7cc76@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Shawn</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-71163">
		October 28, 2009 at 2:09 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex</p>
<p>for the quiz 2 how-come the same result is not produced?</p>
<pre>

cout&lt;&lt;static_cast&lt;float&gt;(f1.numerator * f2.numerator) /(f1.denominator * f2.denominator);
</pre>
<p>the correct answer is printed in the above code</p>
<p>but it just prints 0, in the next code, i know i am doing something wrong with type casting, but what exactly am i doing wrong</p>
<pre>

cout&lt;&lt;endl&lt;&lt;&quot;the result is &quot;&lt;&lt;static_cast&lt;float&gt;((f1.numerator)/(f1.denominator)* (f2.numerator)/(f2.denominator));
</pre>
<p>thanks</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-74327">
		<div id="div-comment-74327" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8dc5612a27a4e1147c43d89471876c34@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../default.htm' rel='external nofollow' class='url'>Mayur Gupta</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-74327">
		December 16, 2009 at 12:26 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hello Alex, </p>
<p>I have trouble understanding the following situation, where a struct consisting of int, float and bool types shows a complete size as 12. Whereas, if I display the size of each data-type, it shows 4(int), 4(float), 1(bool).</p>
<p>Please explain.</p>
<p>The code:</p>
<pre>
#include &lt;iostream&gt;

using namespace std;

int main() {
    struct Person {
        int age;
        float wage;
        bool sex;
    };
    Person Mayur;
    cout &lt;&lt; sizeof(int) &lt;&lt; endl;
    cout &lt;&lt; sizeof(float) &lt;&lt; endl;
    cout &lt;&lt; sizeof(bool) &lt;&lt; endl;
    cout &lt;&lt; sizeof(Person) &lt;&lt; endl;
    cout &lt;&lt; sizeof(Mayur) &lt;&lt; endl;
    return 0;
}
</pre>
<p>The Output:</p>
<pre>
4
4
1
12
12
</pre>
<p>Regards,<br />
Mayur</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-77870">
		<div id="div-comment-77870" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/fc369c3c63d96791b1957dbd675c6045@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ole</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77870">
		February 4, 2010 at 4:08 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Let me quote Alex and highligth the important bit that you wonder about:</p>
<p>&#8220;Typically, the size of a struct is the sum of the size of all it’s members. In this case, since each integer is 4 bytes and a float is 4 bytes, Employee would be 12 bytes. However, some platforms have specific rules about how variables must be laid out in memory — consequently, <b>the compiler may leave gaps between the variables.</b> As a result, we can say the struct will be at minimum 12 bytes.&#8221;</p>
<p>Cheers<br />
Ole</p>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-74987">
		<div id="div-comment-74987" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8652c614edf615c1760b7c2df5ffa0a1@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Carter</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-74987">
		December 27, 2009 at 11:18 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>struct Fractions<br />
{<br />
	int nNumerator;<br />
	int nDenominator;<br />
};</p>
<p>int multiply(int x, int y)<br />
{<br />
	return x * y;<br />
}</p>
<p>float produceValue(Fractions sAny)<br />
{<br />
	using namespace std;<br />
	cout &lt;&lt; &quot;Enter a Numerator &quot; &lt;&gt; sAny.nNumerator;<br />
	cout &lt;&lt; &quot;Enter a Denominator &quot; &lt;&gt; sAny.nDenominator;<br />
	return (float)sAny.nNumerator / sAny.nDenominator;<br />
}<br />
	int main()<br />
{<br />
	using namespace std;<br />
	cout &lt;&lt; &quot;Now, we are going to multiply two fractions. First: &quot; &lt;&lt; endl;<br />
	float x = produceValue;<br />
	cout &lt;&lt; &quot;Now, once again &quot; &lt;&lt; endl;<br />
	float y = produceValue;</p>
<p>	cout &lt;&lt; &quot;The answer is &quot; &lt;&lt; multiply(float x, float y);</p>
<p>	return 0;<br />
}</p>
<p>didnt work though, does anyone know why?</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-74990">
		<div id="div-comment-74990" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/8652c614edf615c1760b7c2df5ffa0a1@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Carter</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-74990">
		December 27, 2009 at 11:40 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>sorry i know didt put the brackets. It says that produceValue does not take 0 arguments</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-75744">
		<div id="div-comment-75744" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a81630388b64ff7398d60cc87ffcf20b@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">BX</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-75744">
		January 4, 2010 at 11:46 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Shouldn&#8217;t structure alignment be mentioned in this chapter?</p>
<p>BTW, great free tutorials. Thanks for your effort.</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-77141">
		<div id="div-comment-77141" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/30a3a2da1ca8324162f458702776e04f@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">drow</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77141">
		January 24, 2010 at 4:40 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>#include &#8220;stdafx.h&#8221;</p>
<p>#include </p>
<p>struct advertising<br />
{<br />
	int nAds_shown;<br />
	float percentThatclicked;<br />
	float averageEarned;<br />
};</p>
<p>void read()<br />
{<br />
	using namespace std;<br />
	advertising scompany;<br />
	cin &gt;&gt; scompany.nAds_shown;<br />
	cin &gt;&gt; scompany.percentThatclicked;<br />
	cin &gt;&gt; scompany.averageEarned;<br />
}</p>
<p>int main(advertising scompany)<br />
{<br />
	using namespace std;<br />
	read();<br />
	cout &lt;&lt; scompany.nAds_shown &lt;&lt; endl;<br />
	cout &lt;&lt; scompany.percentThatclicked &lt;&lt; endl;<br />
	cout &lt;&lt; scompany.averageEarned &lt;&lt; endl;<br />
	cout &lt;&lt; scompany.nAds_shown*scompany.percentThatclicked * scompany.averageEarned &lt;&lt; endl;<br />
	return 0;<br />
}</p>
<p>This code compiles and links without a problem, but when I actually run it it returns very odd numbers.<br />
Can anyone help?</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-77792">
		<div id="div-comment-77792" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7093cfbdfb161f952efcf0c9fcd0289@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kiasta</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77792">
		February 3, 2010 at 8:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Try making the void Read() function return the struct advertisementy like so:</p>
<pre>#include &lt;iostream&gt;

struct advertising
{
    int nAds_shown;
    float percentThatclicked;
    float averageEarned;
};

&lt;b&gt;advertising read()
{
    using namespace std;
    advertising scompany;
    cin &gt;&gt; scompany.nAds_shown;
    cin &gt;&gt; scompany.percentThatclicked;
    cin &gt;&gt; scompany.averageEarned;
    return scompany;
}&lt;/b&gt;

int main(advertising scompany)
{
    using namespace std;
    scompany = read();
    cout &lt;&lt; scompany.nAds_shown &lt;&lt; endl;
    cout &lt;&lt; scompany.percentThatclicked &lt;&lt; endl;
    cout &lt;&lt; scompany.averageEarned &lt;&lt; endl;
    cout &lt;&lt; scompany.nAds_shown*scompany.percentThatclicked * scompany.averageEarned &lt;&lt; endl;
    return 0;
}</pre>
<p>What happens is that when you run through the function Read() it stores the data in the SCOPE, and than is destroyed after the function ends. So when you return scompany and store it into scompany on int main(), it passes the values to the main() scope. There might be a little more to it but basically the values are destroyed when Read() ends so you have to pass it on to main() which I have done. BTW I am unsure as to why you included stdafx.h when you have nothing in your program that needs that header, whats even more curious is the way you included it (with &#8220;&#8221; instead of ) and that it compiled at all.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-77742">
		<div id="div-comment-77742" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e7093cfbdfb161f952efcf0c9fcd0289@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kiasta</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77742">
		February 2, 2010 at 1:15 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>In your &#8220;Quiz 1 Answer&#8221; You did not divide the percentage, or at least turn it into a decimal, so the output will be wrong.</p>
<p>For example:</p>
<p>5000 * 50 * $.15 = $37,500<br />
5000 * (50 / 100) * $.15 = $375</p>
<p>The two are very different. The user will not know to put a decimal instead of a whole number (in fact they might even put a modulus after the number which is bad). I guess I am just a little nit-picky. BTW here is my answer if you are interested:</p>
<pre>#include &lt;iostream&gt;
#include &lt;conio.h&gt;

using namespace std;

struct Advertising
{
    int nAds;
    float fPercentageClickedAds;
    float nAdsProfit;
    float fDailyProfit;
};

Advertising DailyProfit(Advertising advertising)
{
    advertising.fDailyProfit = (advertising.nAds *
        advertising.fPercentageClickedAds *
        advertising.nAdsProfit);

    return advertising;
}

int main()
{
    Advertising advertising;

    cout &lt;&lt; &quot;n How many ads have you shown to readers? &quot;;
    cin &gt;&gt; advertising.nAds;

    cout &lt;&lt; &quot;n What percentage of users clicked the ads? &quot;;
    cin &gt;&gt; advertising.fPercentageClickedAds;
    advertising.fPercentageClickedAds /= 100;

    cout &lt;&lt; &quot;n How much did you earn for each ad clicked? &quot;;
    cin &gt;&gt; advertising.nAdsProfit;

    advertising = DailyProfit(advertising);
    cout &lt;&lt; &quot;nn Your daily profit: $&quot; &lt;&lt; advertising.fDailyProfit;
    getch();

    return 0;
}<!--formatted--></pre>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-78320">
		<div id="div-comment-78320" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7c2390c20489daa6bfe12fddbadaa069@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">rami</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78320">
		February 14, 2010 at 11:29 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>k i have problem i tried to make a lot of programs but i get to the same point and get stuck. my problem is i have to codes they work fine, they have been tested.<br />
i need something to execute one of the code<br />
if the user entered a keyword.<br />
so if the user entered c to f i want the<br />
int nCtoF();.. execute but the other one dont.</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-78390">
		<div id="div-comment-78390" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/57dc562c0db737b8ed9472eff9c4b270@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">rehman</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78390">
		February 15, 2010 at 2:55 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi, i am trying to write a program, using classes and structs and inheritence&#8230;</p>
<p>the program kind of represents a university system where tutors teach only specific modules and students are only enrolled on specific modules.</p>
<p>To store information about students and their modules.</p>
<p>the user is prompted to enter the number of modules they undertake and then according to the number they enter they get the option to store information about these modules.</p>
<p>for example if user enters 1 module only 1 struct is called to store the information</p>
<p>but if user enters 3 modules, the program should allow three struct objects to be entered..</p>
<p>i can&#8217;t get three structs to come if the user enters three&#8230;.</p>
<p> and is using classes and struct the best option to solve this problem?</p>
<p>any help please&#8230;.</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-78643">
		<div id="div-comment-78643" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/705d3d68171d2101688bbf385b23c48e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Elqno</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78643">
		February 19, 2010 at 7:12 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>I think that the most optimal way to do (using the less RAM space) would be as you said, using inheritance, and learn polymorphism might help you a lot ;) so you will actually will need classes, you can just avoid structs ;) but if it is about speed, then structs are better than classes&#8230;so think what do you want ;)</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-78557">
		<div id="div-comment-78557" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a70371737248239f2aae9b1de5dfeb1d@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Rafael</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78557">
		February 18, 2010 at 9:09 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>This is my answer for exercise 1 and 2 :</p>
<p>Exercise 1 :</p>
<pre>
#include &lt;iostream&gt;
#include &lt;conio.h&gt;

using namespace std;

struct earn{
    int ads_count ;
    double user_perc ;
    double average_inc ;
}mysite;

void dis_calc(earn x);

int main()
{
    double temp;
    cout &lt;&lt; &quot;Enter Number of ads : &quot; ;
    cin &gt;&gt; mysite.ads_count ;
    cout &lt;&lt; &quot;Enter User Percentage (0-99%) : &quot; ;
    cin &gt;&gt; temp ;
    mysite.user_perc = temp/100 ;
    cout &lt;&lt; &quot;Enter Av. Income : &quot; ;
    cin &gt;&gt; mysite.average_inc ;

    system(&quot;cls&quot;);

    dis_calc(mysite);

    getch();

    return 0;
}

void dis_calc(earn x){

    cout &lt;&lt; &quot;Total Ads No. : &quot; &lt;&lt; x.ads_count &lt;&lt; endl ;
    cout &lt;&lt; &quot;User Percentage : &quot; &lt;&lt; x.user_perc &lt;&lt; endl;
    cout &lt;&lt; &quot;Av. income : &quot; &lt;&lt; x.average_inc &lt;&lt; endl;
    cout &lt;&lt; &quot;******************************&quot; &lt;&lt; endl;
    cout &lt;&lt; &quot;Today total income : &quot; &lt;&lt; endl;
    cout &lt;&lt; &quot;Today total income : &quot; &lt;&lt;     x.ads_count*x.user_perc*x.average_inc &lt;&lt; endl;

    }
</pre>
<p>And Exercise 2 :</p>
<pre>
#include &lt;iostream&gt;

using namespace std;

struct frac{
    double numerator  ;
    double denominator ;
}fract1,fract2;

void multiply(frac x , frac y);

int main()
{
    cout &lt;&lt; &quot;Enter n and m in (n/m).&quot; &lt;&lt; endl;
    cout &lt;&lt;endl;

    cout &lt;&lt; &quot;Enter n for 1st fracion : &quot; ;
    cin &gt;&gt; fract1.numerator ;
    cout &lt;&lt; &quot;Enter m for 1st fracion : &quot; ;
    cin &gt;&gt; fract1.denominator ;

    cout &lt;&lt; &quot;Enter n for 2nd fracion : &quot; ;
    cin &gt;&gt; fract2.numerator ;
    cout &lt;&lt; &quot;Enter m for 2nd fracion : &quot; ;
    cin &gt;&gt; fract2.denominator ;

    system(&quot;cls&quot;);

    multiply(fract1, fract2);
    return 0;
}

void multiply(frac x , frac y){

    double a,b;
    cout &lt;&lt; &quot;1st fraction is : &quot; &lt;&lt; x.numerator &lt;&lt;&quot;/&quot;&lt;&lt;x.denominator &lt;&lt; endl;
    cout &lt;&lt; &quot;2nd fraction is : &quot; &lt;&lt; y.numerator &lt;&lt;&quot;/&quot;&lt;&lt;y.denominator &lt;&lt; endl;
    cout &lt;&lt; endl;

    cout &lt;&lt; &quot;1st X 2nd : &quot; &lt;&lt; x.numerator*y.numerator &lt;&lt;&quot;/&quot;&lt;&lt;x.denominator*y.denominator &lt;&lt; endl;
    a = x.numerator*y.numerator ;
    b = x.denominator*y.denominator ;
    cout &lt;&lt; &quot;1st X 2nd (in decimal) : &quot; &lt;&lt; a/b &lt;&lt; endl ;

}
</pre>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-78642">
		<div id="div-comment-78642" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/705d3d68171d2101688bbf385b23c48e@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Elqno</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-78642">
		February 19, 2010 at 7:07 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hello Alex, I have a qst:</p>
<p>From your code:</p>
<pre>struct Employee
{
    int nID;
    int nAge;
    float fWage;
};
</pre>
<p>when you made the declaration of this:</p>
<pre>Employee sJoe</pre>
<p>shouldn&#8217;t be like this:</p>
<pre>struct Employee sJoe</pre>
<p>or making the struct a typedef?? :</p>
<pre>typedef struct Employee { blabla...};</pre>
<p>I think it should be like that, so then you can declare sJoe as you did&#8230;<br />
I hope that if you reply I will get to my inbox that you did it ;) so I can check what you wrote ;)</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-80580">
		<div id="div-comment-80580" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/897b5d328ac4229a3ece812528ceef28@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">linus</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-80580">
		March 14, 2010 at 11:59 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>why does this give negative result?<br />
// fraction.cpp : Defines the entry point for the console application.<br />
//</p>
<p>#include &#8220;stdafx.h&#8221;<br />
# include </p>
<p>struct sFraction<br />
{<br />
int nNumerator;<br />
int nDenominator;<br />
};</p>
<p>float Product( sFraction s1, sFraction s2)<br />
{<br />
float fResult;<br />
	 fResult= static_cast (s1.nNumerator*s2.nNumerator)/static_cast (s1.nDenominator*s1.nDenominator);<br />
return fResult;<br />
}</p>
<p>int main()<br />
{using namespace std;<br />
sFraction sF1,sF2;<br />
cout&lt;&lt;&quot;input first nummerator&quot;&lt;&gt; sF1.nNumerator;<br />
cout &lt;&lt; &quot;input first denominator&quot;&lt;&gt; sF1.nDenominator;</p>
<p>cout&lt;&lt;&quot;input second numerator&quot;&lt;&gt; sF2.nDenominator;</p>
<p>cout&lt;&lt; &quot;input second denomirator&quot;&lt;&gt; sF2.nDenominator;</p>
<p>cout &lt;&lt; &quot;the result is &quot;&lt;&lt;Product (sF1,sF2)&lt;&lt;endl;<br />
return 0;<br />
}</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-86306">
		<div id="div-comment-86306" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/aa78201f18de003287a557edecccbea1@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Sudheer</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-86306">
		June 11, 2010 at 4:52 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Thanks a lot Alex</p>
<p>Really very useful tutorial on web. Thanks again for the effort :)</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-87334">
		<div id="div-comment-87334" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/5029257a80252856b8f604d2c1b16941@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../fsdfsdf/default.htm' rel='external nofollow' class='url'>luke</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-87334">
		June 28, 2010 at 5:19 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Would someone mind telling me why this is rounding down my answer? I&#8217;m not sure what i&#8217;m doing wrong.</p>
<pre> #include &quot;stdafx.h&quot;

#include &lt;iostream&gt;

using namespace std;

int main()
{
int numerator = 3;
int denominator = 4;

cout &lt;&lt; static_cast&lt;float&gt;(numerator / denominator);

return 0;
}

<!--formatted--></pre>
<p>It&#8217;s giving me the answer 0, but i want 0.75.</p>
<p>I take it i accidently read over one of the earlier lessons which is really confusing me now.</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-91179">
		<div id="div-comment-91179" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/bf6a79276532ceb36c6571caf682944f@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">JD</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-91179">
		August 31, 2010 at 12:49 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>I kinda doubt you&#8217;re still wondering this 2 months later, but in case you haven&#8217;t figured it out:</p>
<pre>cout &lt;&lt; static_cast&lt;float&gt;(numerator / denominator);</pre>
<p>Because the / operator is in the parenthesis, the division is performed first.  Both inputs are integers, so it is performed as an integer operation (and rounded to 0).  Only after the division is complete does it convert the result to float.  You want the division to be a float operation, so you should cast one of the inputs *before* the division, as follows:</p>
<pre>cout &lt;&lt; static_cast&lt;float&gt;(numerator) / denominator;</pre>
<p>This will make it a float operation, and it will not be rounded.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-94516">
		<div id="div-comment-94516" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/112afbc9361ab43f7901000dc2cd7731@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">youjay</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-94516">
		October 22, 2010 at 6:53 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>For the Example in the post, I tried the following<br />
&#8230;&#8230;<br />
&#8230;&#8230;.<br />
int main()<br />
{<br />
struct Employee<br />
    {<br />
      int nID, nAge;<br />
      float fWage;<br />
    };<br />
&#8230;.<br />
&#8230;..</p>
<p>As you can see, I defined struct inside main(). This failed. However, defining Struct outside main() worked? Any reason?</p>
<p>J</p>
		</div>
</li>
		<li class="comment byuser comment-author-wcoaster even thread-even depth-1 clearfix" id="comment-95099">
		<div id="div-comment-95099" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/632851e9dbf8c70f6a90a28267893ed5@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">WCoaster</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95099">
		January 15, 2011 at 4:16 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>The variables inside the structure are treated as local variables inside main(). When you declare it outside main() they become global variables (evil) ;-)</p>
<p>It should work if you initialize your variables before calling a function.</p>
		</div>
</li>
		<li class="comment byuser comment-author-swengineer odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95117">
		<div id="div-comment-95117" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/55eddb03eeaf352cd86f04eaafe12131@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">SWEngineer</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95117">
		January 22, 2011 at 3:31 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Simply well explained tutorial. Thanks.</p>
		</div>
</li>
		<li class="comment byuser comment-author-anas-s even thread-even depth-1 clearfix" id="comment-95133">
		<div id="div-comment-95133" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/931933f8cc7081668ded73cc46c95c59@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">anas.s</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95133">
		January 24, 2011 at 10:31 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Alex,</p>
<p>You&#8217;ve shown that we can pass struct to functions, but here is a question :</p>
<p>Can a function return result of type struct?</p>
		</div>
</li>
		<li class="comment byuser comment-author-groovychicken odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95229">
		<div id="div-comment-95229" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c84dd79479b6bbc19b68566f3e79144e@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Groovychicken</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95229">
		March 5, 2011 at 6:21 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>cout &lt;&lt; &quot;Wage: &quot; &lt;&lt; sEmployee.fWage &lt;&lt; endl &lt;&lt; endl;</p>
<p>is there a reason for 2 endl&#039;s? or is it just a typo :)</p>
		</div>
</li>
		<li class="comment byuser comment-author-zjm970730 even thread-even depth-1 clearfix" id="comment-95356">
		<div id="div-comment-95356" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/09f1545ec017834d724f346ac943fed6@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">JMan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95356">
		April 22, 2011 at 2:50 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>why my code always produce interger output?Can anyone please help me?:(</p>
<p>// Enumeraor.cpp : Defines the entry point for the console application.<br />
//</p>
<p>#include &#8220;stdafx.h&#8221;<br />
#include </p>
<p>struct Fraction<br />
{<br />
	int nNumerator;<br />
	int nDenomintor;<br />
};</p>
<p>double Input()<br />
{<br />
	using namespace std;<br />
	Fraction sFrac;<br />
	cout&lt;&lt;&quot;Enter the numerator of fraction :&quot;&lt;&gt;sFrac.nNumerator;<br />
	cout&lt;&lt;&quot;Enter the denominator of fraction :&quot;&lt;&gt;sFrac.nDenomintor;<br />
	return static_cast(sFrac.nNumerator/sFrac.nDenomintor);<br />
}</p>
<p>int main()<br />
{<br />
	using namespace std;<br />
	double dFracA=Input();<br />
	double dFracB=Input();<br />
	double dResult;<br />
	static_cast(dResult=dFracA*dFracB);<br />
	cout&lt;&lt;&quot;The result is :&quot;&lt;&lt;dResult&lt;&lt;endl;<br />
	return 0;<br />
}</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-lynx1241 odd alt depth-2 clearfix" id="comment-95656">
		<div id="div-comment-95656" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2d0c67e0ef00634fd2244a2859ae5fb0@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">lynx1241</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95656">
		July 3, 2011 at 11:10 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Because you need to choose a type to cast, e.g. static_cast(expression) instead of static_cast(expression).</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-lynx1241 even depth-3 clearfix" id="comment-95657">
		<div id="div-comment-95657" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2d0c67e0ef00634fd2244a2859ae5fb0@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">lynx1241</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95657">
		July 3, 2011 at 11:14 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>html screwed my last comment :/</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-eddyboy18 odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95847">
		<div id="div-comment-95847" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4fd518d21317f7680eae3ac7db2b9af2@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Eddyboy18</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95847">
		August 11, 2011 at 9:24 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>@Jman try this<br />
first ur struct is an integer,and the function double, does that make sense?<br />
Try something like this:<br />
struct fraction<br />
{<br />
int nNumerator;<br />
int nDenominator;<br />
};<br />
void input(fraction obj,int nNum,int nDenom)<br />
{<br />
obj.nNumerator=nNum;<br />
obj.nDenominator=nDenom;<br />
cout&lt;&lt;&quot;the numerator &quot;&lt;&lt;obj.nNumerato&lt;&lt;endl;<br />
cout&lt;&lt;&quot;the denominator&quot;&lt;&lt;obj.nDenominator&lt;&lt;endl;<br />
}<br />
int main()<br />
{<br />
fraction objm;<br />
int nNum1,nDenom1;<br />
cout&lt;&lt;&quot;enter the numerator&quot;&lt;&gt;nNum1;<br />
cout&lt;&lt;&quot;enter the denominator&quot;&lt;&gt;nDenom1;<br />
//call to the function<br />
input(objm,nNum1,nDenom1);<br />
return 0;<br />
}</p>
		</div>
</li>
		<li class="comment byuser comment-author-ranjbar even thread-even depth-1 clearfix" id="comment-96366">
		<div id="div-comment-96366" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/825e9f8cae2fe603b57ec60ec164c5b2@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ranjbar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96366">
		November 11, 2011 at 4:35 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi<br />
in quiz 2 i wrote the program :</p>
<p>#include </p>
<p>struct Fraction<br />
{<br />
    float x;<br />
    float y;<br />
    float frac;</p>
<p>};</p>
<p>void Multiply(Fraction f1, Fraction f2)<br />
{<br />
    using namespace std;</p>
<p>    // Don&#8217;t forget the static cast, otherwise the compiler will do integer division!<br />
    cout &lt;&lt; f1.frac*f2.frac ;<br />
}<br />
int main()<br />
{<br />
    using namespace std;</p>
<p>    // Allocate our first fraction<br />
    Fraction f1;<br />
    cout &lt;&gt; f1.x;<br />
    cout &lt;&gt; f1.y;</p>
<p>    // Allocate our second fraction<br />
    Fraction f2;<br />
    cout &lt;&gt; f2.x;<br />
    cout &lt;&gt; f2.y;<br />
    f1.frac = f1.x/f1.y;<br />
    f2.frac =f2.x/f1.y;<br />
    Multiply(f1,f2);</p>
<p>    return 0;<br />
}</p>
<p>but my program has less accuracy than yours.<br />
is this has a relation to this fact that i declare my variables first in float but u declare them first in int and then convert them to float?</p>
		</div>
</li>
		<li class="comment byuser comment-author-ayahsabbah odd alt thread-odd thread-alt depth-1 clearfix" id="comment-96375">
		<div id="div-comment-96375" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1186322d289898bc8f0082e64e458089@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ayahsabbah</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96375">
		November 12, 2011 at 3:18 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi, I have to write code to do the following task:<br />
&#8211;define a simple structs to store common information. In particular, write definitions for a struct called Point to store the X, Y and Z coordinates of a point.<br />
I have this:<br />
struct Point{<br />
double xcoord;<br />
double y coord;<br />
};<br />
Then Having defined a struct in the previous section, I need to write two simple functions to use this struct. First, write a function to prompt the user to enter the coordinates of a point, read the coordinates from the keyboard and store them a struct of type Point. The function prototype is as follows<br />
Point ReadPoint();<br />
Second, write a function to determine the Cartesian distance between two points. The function prototype is as follows<br />
double DistanceBetweenPoints( const Point&amp; pt1, const Point&amp; pt2 );</p>
<p>I have:<br />
Point ReadPoint(){<br />
double x;<br />
double y;<br />
cout&lt;&lt;&quot;enter the x and y coordinate of the point: &quot;&lt;&gt;x&gt;&gt;y;<br />
}<br />
and<br />
double DistanceBetweenPoints( const Point&amp; pt1, const Point&amp; pt2 ){<br />
double distance;<br />
distance= sqrt (pow((x1-x2),2)+pow((y1-y2),2));//i dont know what variables I should add in here<br />
return double;<br />
}<br />
..Please help and respond ASAP because I need to have this assignment done soon..thanks!</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f47-structs_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../46-typedefs/default.htm" rel="prev">4.6 &#8212; Typedefs</a> &nbsp;</div><div class="newer">&nbsp; <a href="../51-control-flow-introduction/default.htm" rel="next">5.1 &#8212; Control flow introduction</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'70'});
var load_cmc = function(){linktracker_init(3928254,70,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.578 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:42:05 -->
<!-- Compression = gzip -->