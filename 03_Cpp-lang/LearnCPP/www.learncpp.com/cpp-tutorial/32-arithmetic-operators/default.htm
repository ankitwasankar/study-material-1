<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0072)http://www.learncpp.com/cpp-tutorial/32-arithmetic-operators/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>3.2 &#8212; Arithmetic operators &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 3.2 &#8212; Arithmetic operators Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='3.1 &#8212; Precedence and associativity' href='../31-precedence-and-associativity/default.htm' />
<link rel='next' title='3.3 &#8212; Increment/decrement operators, and side effects' href='../33-incrementdecrement-operators-and-side-effects/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-t' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-55 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../31-precedence-and-associativity/default.htm" rel="prev">3.1 &#8212; Precedence and associativity</a> &nbsp;</div><div class="newer">&nbsp; <a href="../33-incrementdecrement-operators-and-side-effects/default.htm" rel="next">3.3 &#8212; Increment/decrement operators, and side effects</a> &raquo;</div></div>
<div class="post-55 post type-post status-publish format-standard hentry category-cpp-tutorial" id="post-55">


<div class="post-headline">		<h1>3.2 &#8212; Arithmetic operators</h1>
		</div>
<div class="post-byline">By Alex, on June 13th, 2007</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p><strong>Unary arithmetic operators</strong></p>
<p>There are two unary arithmetic operators, plus (+), and minus (-).  If you remember, unary operators are operators that only take one operand.</p>
<table border=1 cellspacing=0 cellpadding=3>
<tr>
<th>Operator</th>
<th>Symbol</th>
<th>Form</th>
<th>Operation</th>
</tr>
<tr>
<td>Unary plus</td>
<td>+</td>
<td>+x</td>
<td>Value of x</td>
</tr>
<tr>
<td>Unary minus</td>
<td>-</td>
<td>-x</td>
<td>Negation of x</td>
</tr>
</table>
<p>The unary plus operator returns the value of the operand.  In other words, +5 = 5, and +x = x.</p>
<p>The unary minus operator returns the operand multiplied by -1.  In other words, if x = 5, -x = -5.</p>
<p>For best effect, both of these operators should be placed immediately preceding the operand (eg. <code>-x</code>, not <code>- x</code>).</p>
<p>Do not confuse the unary minus operator with the binary subtraction operator, which uses the same symbol.  For example, in the expression <code>x = 5 - -3;</code>, the first minus is the subtraction operator, and the second is the unary minus operator.</p>
<p><strong>Binary arithmetic operators</strong></p>
<p>There are 5 binary arithmetic operators.  Binary operators are operators that take a left and right operand.</p>
<table border=1 cellspacing=0 cellpadding=3>
<tr>
<th>Operator</th>
<th>Symbol</th>
<th>Form</th>
<th>Operation</th>
</tr>
<tr>
<td>Addition</td>
<td>+</td>
<td>x + y</td>
<td>x plus y</td>
</tr>
<tr>
<td>Subtraction</td>
<td>-</td>
<td>x &#8211; y</td>
<td>x minus y</td>
</tr>
<tr>
<td>Multiplication</td>
<td>*</td>
<td>x * y</td>
<td>x multiplied by y</td>
</tr>
<tr>
<td>Division</td>
<td>/</td>
<td>x / y</td>
<td>x divided by y</td>
</tr>
<tr>
<td>Modulus (Remainder)</td>
<td>%</td>
<td>x % y</td>
<td>The remainder of x divided by y</td>
</tr>
</table>
<p>Of these operators, the only ones that really need further explanation are division and modulus (remainder).</p>
<p><strong>Integer and floating point division</strong></p>
<p>It is easiest to think of the division operator as having two different &#8220;modes&#8221;.  If both of the operands are integers, the division operator performs integer division.  Integer division drops any fractions and returns an integer value.  For example, 7 / 3 = 2 because the fraction is dropped.  Note that integer division does not round.  For example, 3 / 4 = 0, not 1.</p>
<p>If either or both of the operands are floating point values, the division operator performs floating point division.  Floating point division returns a floating point value, and the fraction is kept.  For example, 7.0 / 3 = 2.333,  7 / 3.0 = 2.333, and 7.0 / 3.0 = 2.333.</p>
<p>Note that trying to divide by 0 (or 0.0) will generally cause your program to crash, as the result are undefined!</p>
<p><strong>Modulus (remainer)</strong></p>
<p>The modulus operator is also informally known as the remainder operator.  The modulus operator only works on integer operands, and it returns the remainder after doing integer division.  For example, 7 / 3 = 2 remainder 1, thus  7 % 3 = 1.  As another example, 25 / 7 = 3 remainder 4, thus 25 % 7 = 4.</p>
<p>Modulus is very useful for testing whether a number is evenly divisible by another number: if x % y == 0, then we know that y divides evenly into x.  This can be useful when trying to do something every nth iteration.</p>
<p>For example, say we wanted to write a program that printed every number from 1 to 100 with 20 numbers per line.  We could use the modulus operator to determine where to do the line breaks.  Even though you haven&#8217;t seen a while statement yet, the following program should be pretty comprehensible:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;

int main()
{
    using namespace std;

    // nCount holds the current number to print
    int nCount = 1; // start at 1

    // Loop continually until we pass number 100
    while (nCount &lt;= 100)
    {
        cout &lt;&lt; nCount &lt;&lt; &quot; &quot;; // print the current number

        // if nCount is divisible by 20, print a new line
        if (nCount % 20 == 0)
            cout &lt;&lt; endl;

        nCount = nCount + 1; // go to next number
    } // end of while
} // end of main()
</pre>
<p><strong>A warning about integer division and modulus with negative numbers</strong></p>
<p>If either or both operands of integer division are negative, the compiler is free to truncate up or down!  Most modern compilers round towards 0.  For example, -5 / 2 can evaluate to either -3 or -2, depending on whether the compiler rounds down or rounds toward 0.</p>
<p>If either operand of the modulus operator is negative, the results of the modulus can be either negative or positive!  For example, -5 % 2 can evaluate to either 1 or -1.</p>
<p><strong>Arithmetic assignment operators</strong></p>
<table border=1 cellspacing=0 cellpadding=3>
<tr>
<th>Operator</th>
<th>Symbol</th>
<th>Form</th>
<th>Operation</th>
</tr>
<tr>
<td>Assignment</td>
<td>=</td>
<td>x = y</td>
<td>Assign value y to x</td>
</tr>
<tr>
<td>Addition assignment</td>
<td>+=</td>
<td>x += y</td>
<td>Add y to x</td>
</tr>
<tr>
<td>Subtraction assignment</td>
<td>-=</td>
<td>x -= y</td>
<td>Subtract y from x</td>
</tr>
<tr>
<td>Multiplication assignment</td>
<td>*=</td>
<td>x *= y</td>
<td>Multiply x by y</td>
</tr>
<tr>
<td>Division assignment</td>
<td>/=</td>
<td>x /= y</td>
<td>Divide x by y</td>
</tr>
<tr>
<td>Modulus assignment</td>
<td>%=</td>
<td>x %= y</td>
<td>Put the remainder of x / y in x</td>
</tr>
</table>
<p>By now, you should already be well acquainted with the assignment operator, so no need to discuss it here.  Because writing statements such as x = x + y is so common, C++ provides 5 arithmetic assignment operators for convenience.  For example, instead of writing x = x + y, you can write x += y.  Instead of x = x * 5, you can write x *= 5.</p>
<p><strong>Quiz</strong><br />
1) What does the following expression evaluate to?  <code>6 + 5 * 4 % 3</code></p>
<p>2) Write a function called IsEven() that returns true if an integer passed to it is even.  Use the modulus operator to test whether the integer parameter is even.</p>
<p>3) Name two things to watch out for when using integer division.</p>
<p><strong>Answers</strong></p>
<p>1) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id1390864745'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id1390864745" style="display:none"> Because * and % have higher precedence than +, the + will evaluate last.  We can rewrite our expression as 6 + (5 * 4 % 3).  * and % have the same precedence, so we have to look at the associativity to resolve them.  The associativity for * and % is left to right, so we resolve the left operator first.  We can rewrite our expression like this: 6 + ((5 * 4) % 3).</p>
<p>6 + ((5 * 4) % 3) = 6 + (20 % 3) = 6 + 2 = 8</p></div>
<p>2) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id655347563'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id655347563" style="display:none">
<pre class="brush: cpp; title: ; notranslate" title="">
bool IsEven(int x)
{
    // if x % 2 == 0, 2 divides evenly into our number
    // which means it must be an even number
    if (x % 2 == 0)
        return true;
    else
        return false;
}
</pre>
<p>The following also works:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
bool IsEven(int x)
{
    // if x % 2 == 0, 2 divides evenly into our number
    // which means it must be an even number
    return (x % 2) == 0;
}
</pre>
</div>
<p>3) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id83521590'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id83521590" style="display:none"> When using integer division, a right operand of 0 will have undefined results and probably crash your program.  Also, if either of the operands are negative, the direction of truncation is undefined.</div>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../33-incrementdecrement-operators-and-side-effects/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 3.3 &#8212; Increment/decrement operators, and side effects</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter3" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../31-precedence-and-associativity/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 3.1 &#8212; Precedence and associativity</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../31-precedence-and-associativity/default.htm" rel="prev">3.1 &#8212; Precedence and associativity</a> &nbsp;</div><div class="newer">&nbsp; <a href="../33-incrementdecrement-operators-and-side-effects/default.htm" rel="next">3.3 &#8212; Increment/decrement operators, and side effects</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">29 comments to 3.2 &#8212; Arithmetic operators</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment byuser comment-author-allen01 even thread-even depth-1 clearfix" id="comment-6613">
		<div id="div-comment-6613" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4d83da488626c9316d8e5a9bd7a714ac@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Allen01</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6613">
		January 25, 2008 at 6:54 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Working on exercise 2), I first tried the code below. It compiled but when run, the command prompt only displayed: &#8220;Press any key to continue&#8230;&#8221;  Shouldn&#8217;t it have displayed a &#8220;1&#8243; since it did return as true?<br />
<sourcecode language='cpp'><br />
int main()<br />
{<br />
	using namespace std;</p>
<p>	bool IsEven(int x);<br />
	int x = 4;</p>
<p>	if (x % 2 == 0)<br />
		return true;<br />
    else<br />
		return false;</p>
<p>	return 0;<br />
}<br />
</sourcecode></p>
<p>I experimented a bit a finally got the code below to work:</p>
<p><sourcecode language='cpp'><br />
int main()<br />
{<br />
	using namespace std;</p>
<p>	bool IsEven(int x);<br />
	int x = 4;</p>
<p>	if (x % 2 == 0)<br />
		cout < < "My name is Even Steven" << endl;<br />
    else<br />
		cout << "My name is NOT Even Steven" << endl;</p>
<p>	return 0;<br />
}<br />
</sourcecode></p>
<p>This time, the output was &#8220;My name is Even Steven&#8221;, showing that 4  was an even integer.</p>
<p>Why would it not output a 1 for the true condition in the top code?</sourcecode></p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-6617">
		<div id="div-comment-6617" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6617">
		January 25, 2008 at 9:14 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>The return value of main is passed back to whomever launched your program (either another program, or the operating system).  What happens with this value is up to the caller.  If you want this value to print out, you should print it before you return it.</p>
		</div>
</li>
		<li class="comment even depth-2 clearfix" id="comment-66473">
		<div id="div-comment-66473" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/36f2ce461854f345b302344dacac5b9f@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">See ++</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-66473">
		August 17, 2009 at 7:23 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
#include&lt;iostream&gt;
using namespace std;

bool IsEven(int x);

int main()
{
	int y;
	cout&lt;&lt;&quot;Enter an integer. The program will check if it is even(1) or odd(0): &quot;;
	cin&gt;&gt;y;

	cout&lt;&lt;IsEven(y)&lt;&lt;endl;

	return 0;
}

bool IsEven(int x)
{
	if(x%2==0)
		return true;
	else
		return false;
}
</pre>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-allen01 odd alt thread-odd thread-alt depth-1 clearfix" id="comment-6622">
		<div id="div-comment-6622" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4d83da488626c9316d8e5a9bd7a714ac@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Allen01</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6622">
		January 25, 2008 at 10:56 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Ok, figured it out, adjusted the main cout based on the IsEven condition.</p>
<pre>
bool IsEven(int x)
{
    // if x % 2 == 0, 2 divides evenly into our number
    // which means it must be an even number

    if (x % 2 == 0)
        return true;
    else
        return false;
}
</pre>
<pre>
int main()
{
using namespace std;
cout < < "Enter a Number" << endl;
int x;
cin >> x;

if (IsEven(x))
	cout < < "Even integer, returned true" << endl;

else
	cout << "odd interger, returned false" << endl;

return 0;
}
</pre></pre>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-6634">
		<div id="div-comment-6634" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/6717599bf55ce912779f9c403ec67a17@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ivailosp</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-6634">
		January 26, 2008 at 4:03 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
bool isEven(int x) {
	return !(x&#038;1);
}

int main() {
	int x;
	std::cout < < "Enter a Number: ";
	std::cin >> x;
	std::cout < < (isEven(x) ? "even" : "odd");
	return 0;
}
</pre></pre>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-8794">
		<div id="div-comment-8794" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/38d65cd7f3576c7a6a0a11a2dcb89062@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Chad Bernier</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-8794">
		March 2, 2008 at 2:21 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>I don&#8217;t understand.  That uses more advanced stuff than stated so far.</p>
		</div>
<ul class='children'>
		<li class="comment even depth-3 clearfix" id="comment-41831">
		<div id="div-comment-41831" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c25eebf500464db7dbbff7cc10dfbc66@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ndr</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-41831">
		February 5, 2009 at 10:26 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m not sure what that means either, but I did something similar:</p>
<pre>
bool isEven(int x)
{
    return !(x%2);
}
</pre>
<p>I do not know how to properly implement &#8216;&amp;&#8217;, I&#8217;m just now learning C++ through this site, but you could make a function just as short without his method.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="pingback odd alt thread-odd thread-alt depth-1 clearfix" id="comment-12608">
		<div id="div-comment-12608" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../33-incrementdecrement-operators-and-side-effects/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 3.3 &#8212; Increment/decrement operators, and side effects</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-12608">
		April 22, 2008 at 5:50 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; 3.2 &#8212; Arithmetic operators | Home | 3.4 &#8212; Sizeof, comma, and arithmetic if operators &raquo;     Wednesday, June 13th, [...]</p>
		</div>
</li>
		<li class="pingback even thread-even depth-1 clearfix" id="comment-12638">
		<div id="div-comment-12638" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../31-precedence-and-associativity/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 3.1 &#8212; Precedence and associativity</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-12638">
		April 22, 2008 at 6:34 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...]   &laquo; Three questions that need to be answered before you start writing your game | Home | 3.2 &#8212; Arithmetic operators &raquo;     Wednesday, June 13th, 2007 at 3:55 [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-19256">
		<div id="div-comment-19256" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/de4e9534819b7c9154de5d67c84398c0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Mitul Golakiya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-19256">
		June 18, 2008 at 1:22 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>/* Program to know Number is Odd, Even OR Zero */</p>
<p>/* In torbo C++ , There are not bool Data-Type */</p>
<p>#include &lt;iostream.h&gt;<br />
#include &lt;conio.h&gt;</p>
<p>void main()<br />
{<br />
	int value;<br />
	clrscr();<br />
	cout &lt;&lt; &quot;n Enter the value : &quot;;<br />
	cin &gt;&gt; value;<br />
	if(value == 0)<br />
	{<br />
		cout &lt;&lt; &quot;n You have enterd zero.&quot;;<br />
	}<br />
	else if(value % 2 == 0)<br />
	{<br />
		cout &lt;&lt; &quot;n You have enterd even number.&quot;;<br />
	}<br />
	else<br />
	{<br />
		cout &lt;&lt; &quot;n Tou have enterd odd number.&quot;;<br />
	}<br />
	getch();<br />
}</p>
<p>/* End of Program */</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-23419">
		<div id="div-comment-23419" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/255995609544f26c61ede79f89fa4c41@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Argon</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-23419">
		August 11, 2008 at 8:42 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Modulus: x-x/y*y =</p>
<p>I.e.: from quiz above;</p>
<p>20 % 3 =&gt;<br />
20 &#8211; ((20/3) * 3) =&gt;<br />
20 &#8211; ((6.6666666&#8230;..) * 3) =&gt; (but here integer division are used so:)<br />
20 &#8211; (6 * 3) =&gt;<br />
20 &#8211; 18 =&gt;<br />
2</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-41832">
		<div id="div-comment-41832" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c25eebf500464db7dbbff7cc10dfbc66@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ndr</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-41832">
		February 5, 2009 at 10:39 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
bool isEven(int x)
{
	return !(x&amp;1);
}
</pre>
<p>Is there anything wrong with a function like this? Other than if 0 is entered?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-42017">
		<div id="div-comment-42017" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-42017">
		February 6, 2009 at 12:32 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>There are often many ways to solve the same problem.  As long as it produces the correct solution, it isn&#8217;t &#8220;wrong&#8221;.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-47162">
		<div id="div-comment-47162" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/17eb6c2d6a93db939b9574ccaea3058a@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kurt</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-47162">
		February 25, 2009 at 2:18 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>First and foremost thank you so much for the tutorial. I have been wanting to get back into C++ for a long time, it has been ten years since I coded. Your tutorials have helped me get back into it. As for question number two on the quiz, I probably wrote a lot more than I had to for getting the job done, but I understand it.</p>
<pre>
/*
 * Kurt Heislen
 * 20090225
 * Relearning C++, Question Two
 * <a href="default.htm" rel="nofollow">http://www.learncpp.com/cpp-tutorial/32-arithmetic-operators/</a>
 */
#include &quot;stdafx.h&quot;
#include &lt;iostream&gt;
#include &lt;sstream&gt;

bool isEven(int nInt)
{
	if (nInt % 2 == 0)			// Check nInt for a remainder
		return true;
	else
		return false;
}
int main()
{
	using namespace std;
	cout &lt;&lt; &quot;Enter an integer.&quot; &lt;&lt; endl;
	string			sInt(&quot;&quot;);
	getline(cin,sInt);			// Can handle errors better than cin.
	stringstream	ssInt(sInt);
	int				nInt(-1);
	if((ssInt &gt;&gt; nInt).fail())	// Checks to see if the transfer worked to an int.
	{
		cout &lt;&lt; &quot;You entered an invalid integer.&quot; &lt;&lt; endl;
		return 0;
	}
	if(isEven(nInt) == true)	// Check nInt against isEven to see if it is true.
	{
		cout &lt;&lt; nInt &lt;&lt; &quot; is an even number.&quot; &lt;&lt; endl;
	}
	else
	{
		cout &lt;&lt; nInt &lt;&lt; &quot; is an odd number.&quot; &lt;&lt; endl;
	}
	return 0;
}
</pre>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-85748">
		<div id="div-comment-85748" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/6ed6652a200feb2bc140e91cfe90f17f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kush</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-85748">
		June 1, 2010 at 1:09 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>In your code, I presumed your casting was done to prevent errors, which occurs when a character is enetered when we ask for integer.<br />
It generally crashed out programs&#8230; and I never knew how to get around it&#8230;<br />
so, a little help in this program would be appreciated.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-62488">
		<div id="div-comment-62488" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/14f00a36e2eaa6b36ae520019f2745b0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Chiamaka</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-62488">
		June 15, 2009 at 4:55 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>When i tried to compile the program that you made for question 2, it would not compile, there was a problem when it was linking, it said:&#8221; 1 unresolved externals&#8221;</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-64754">
		<div id="div-comment-64754" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/5bb1293766868cd5cf73d04c610a4ad5@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.lffranca.wordpress.com/default.htm' rel='external nofollow' class='url'>lfamorim</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-64754">
		July 21, 2009 at 7:45 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>First of all, I&#8217;d like to thank you for the tutorial! </p>
<p>I just want to say that at the title &#8220;Modulus (remainer)&#8221; there&#8217;s a typing error, it should be &#8220;Modulus (remainder)&#8221;right? :)</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-65143">
		<div id="div-comment-65143" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/12c134709b42d25050a6ee3f025fe874@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">albino_squirrel</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65143">
		July 27, 2009 at 4:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Whenever I use an if statement it generated an error, then I added curly braces at the beginning and end of each if statement and it started working, do you have any idea why?</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-77996">
		<div id="div-comment-77996" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/1ae13c775f6405871a3a2d98f677aef0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Random C++ learner</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-77996">
		February 6, 2010 at 4:18 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
#include &lt;iostream&gt;

int main()
{
    using namespace std;
    cout &lt;&lt; &quot;Make 100 by adding a number to 23: &quot;;
    double dX;
    cin &gt;&gt; dX;

    cout &lt;&lt; &quot;23 + &quot; &lt;&lt; dX &lt;&lt; &quot; Makes &quot; &lt;&lt; 23 + dX &lt;&lt; endl;

    if (dX == 77)

    cout &lt;&lt; &quot;Congratulations you can do basic math.&quot; &lt;&lt; endl;

    else

    cout &lt;&lt; &quot;\aoh dear, i hope you were testing the else statement...&quot; &lt;&lt; endl;

    return 0;
}
</pre>
<p>if the</p>
<pre> if (dX == 77) </pre>
<p> is not bracketed, then it does not know what to check/ search for, and therefore won&#8217;t compile.</p>
<p>Although by now, you probably know why anyway. but a bit of practice in explaining anyway&#8230; every little helps.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-65536">
		<div id="div-comment-65536" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/ec7b5c0cbf3990a9196f44dcc69f5bc2@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.sjrlinux.com/default.htm' rel='external nofollow' class='url'>Sam</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65536">
		August 3, 2009 at 3:40 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>I got this on first try and it worked.</p>
<pre>
#include &lt;iostream&gt;
using namespace std;
int nValue;
bool IsEven()  //function to find out if variable nValue entered is odd or even
    {
        if (nValue % 2 == 0)
            cout &lt;&lt; &quot;EVEN!&quot; &lt;&lt; endl;
        else
            cout &lt;&lt; &quot;ODD!&quot; &lt;&lt; endl;
        return nValue;
    }
int main()
    {
        cout &lt;&lt; &quot;Enter Number: &quot; &lt;&lt; endl;
        cin &gt;&gt; nValue; // Input a number to find out if it is even or odd
        IsEven();
        return 0;
    }
</pre>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-65585">
		<div id="div-comment-65585" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c058f7f28479dfb349b1d42c46f158ba@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../none/default.htm' rel='external nofollow' class='url'>anand chanduri</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-65585">
		August 3, 2009 at 8:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Simplified version of the code</p>
<pre>
#include &lt;iostream&gt;
#define TRUE 1
#define FALSE 0
using namespace std;
int nValue;
int IsEven()  //function to find out if variable nValue entered is odd or even
    {
        return ((nValue%2)&gt;0?FALSE :TRUE);
    }
int main()
    {
        int retVal;
        cout &lt;&lt; &quot;Enter Number: &quot; &lt;&lt; endl;
        cin &gt;&gt; nValue; // Input a number to find out if it is even or odd
        retVal = IsEven();
        if (retVal == TRUE)
        {
        cout &lt;&lt; &quot;Even Number: &quot; &lt;&lt; endl;
        }
        else
        {
        cout &lt;&lt; &quot;ODD Number: &quot; &lt;&lt; endl;
        }
        return 0;
    }
</pre>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-71067">
		<div id="div-comment-71067" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/472d407990f0c12946cfcce9cb14569d@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Thom</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-71067">
		October 26, 2009 at 10:52 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Here&#8217;s the briefest answer to #2 I could come up with:</p>
<pre>
bool IsEven(int x)
{
    return !(x % 2);
}
</pre>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-73707">
		<div id="div-comment-73707" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/82d87866c15abfaf0daf7093225c9097@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Bob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-73707">
		December 5, 2009 at 2:01 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m using this tutorial to teach myself c++.  So far it&#8217;s been pretty good.  I have a question about arithmetic operators in regard to powers.  How does one square or cube or pentuple a number without actually mulitplying the number that many times?  In other programing languages one can use the ^ symbol to indicate &#8220;raised to the power of&#8221;  so that a number square could be represented as x^2 and a pentupled number can be represented as x^5.</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-75817">
		<div id="div-comment-75817" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4d80ed9fdb6d265573f278491643e810@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">BorisTheSpider</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-75817">
		January 5, 2010 at 8:13 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m using Code::Blocks, and if I run my program from the last chapter&#8217;s quiz and enter 0 as the second number (named dY in the example answer) and choose the division sign (/), it doesn&#8217;t crash. Rather, it tells me the answer is &#8220;Infinity&#8221;.</p>
<p>I&#8217;m not sure if that&#8217;s compiler-specific or what, but I figured it was worth noting.</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-80664">
		<div id="div-comment-80664" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/22483b17cdcf5fcdbed5bd3eebe80b6c@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Stephan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-80664">
		March 16, 2010 at 12:48 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Just an aside.</p>
<p>I&#8217;m using Code::Blocks and I try out many of the examples of code offered up by contributors (excellent stuff &#8211; teaches me loads of what not to do . . . ;-)) and examples in the tutorials.<br />
I noticed that the terminal window says &#8220;Process returned 0   execution time : 3.102 s(or what ever)&#8221; Yet the program seems to be instant (certainly not X seconds) . . . Just curious.</p>
<p>Prince of Darkness<br />
Me + Electrickery = Smoke ;-)</p>
		</div>
</li>
		<li class="pingback odd alt thread-even depth-1 clearfix" id="comment-87425">
		<div id="div-comment-87425" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../../../cplusplus.psexam.com/c-tutorial-and-online-ebook/default.htm' rel='external nofollow' class='url'>C++ Tutorial and Online Ebook</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-87425">
		June 29, 2010 at 5:10 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 3.2 Arithmetic operators [...]</p>
		</div>
</li>
		<li class="comment byuser comment-author-sachinbhanushali even thread-odd thread-alt depth-1 clearfix" id="comment-95629">
		<div id="div-comment-95629" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/085439209479f25c0a21097d36cfce77@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.computereducation.co.cc/default.htm' rel='external nofollow' class='url'>sachinbhanushali</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95629">
		June 26, 2011 at 2:46 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>VISIT <a href="../../../www.computereducation.co.cc/default.htm" title="The IT Blog" rel="nofollow"> and get all eBooks N Solutions free for download</a></p>
		</div>
</li>
		<li class="comment byuser comment-author-sachinbhanushali odd alt thread-even depth-1 clearfix" id="comment-95630">
		<div id="div-comment-95630" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/085439209479f25c0a21097d36cfce77@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.computereducation.co.cc/default.htm' rel='external nofollow' class='url'>sachinbhanushali</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95630">
		June 26, 2011 at 2:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Visit <a href="../../../www.computereducation.co.cc/default.htm" title="computer education The IT Blog" rel="nofollow"> The IT Blog for eBooks N Solutions with Lots of Hacking Tricks</a></p>
		</div>
</li>
		<li class="comment byuser comment-author-robp even thread-odd thread-alt depth-1 clearfix" id="comment-96050">
		<div id="div-comment-96050" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4ae993b1069f6e3030c9d25519b311a8@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">RobP</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96050">
		September 20, 2011 at 7:53 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">Log in to Reply</a></span>		 
		</div>
		<p>Here&#8217;s my attempt at the even/odd program. Works pretty well. Side effects may include nausea, vomiting, heartburn, burning urination, and the desire to consider Rick Perry a valid presidential candidate. Ask your doctor if RobP&#8217;s solution is right for you.</p>
<p>// Workbench.cpp : Space to test snippets or programs that don&#8217;t need to be saved.<br />
#include &#8220;stdafx.h&#8221;<br />
#include </p>
<p>int main()<br />
{<br />
    using namespace std;</p>
<p>   int x;<br />
   cout &lt;&lt; &quot;Enter a number:&quot; &lt;&gt; x;<br />
   if (x % 2 == 0)<br />
	   cout &lt;&lt; &quot;You entered &quot; &lt;&lt; x &lt;&lt; &quot; which is even.&quot; &lt;&lt; endl;<br />
   else cout &lt;&lt; &quot;You entered &quot; &lt;&lt; x &lt;&lt; &quot; which is odd.&quot; &lt;&lt; endl;</p>
<p>   return 0;<br />
} // end of main()</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f32-arithmetic-operators_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../31-precedence-and-associativity/default.htm" rel="prev">3.1 &#8212; Precedence and associativity</a> &nbsp;</div><div class="newer">&nbsp; <a href="../33-incrementdecrement-operators-and-side-effects/default.htm" rel="next">3.3 &#8212; Increment/decrement operators, and side effects</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'55'});
var load_cmc = function(){linktracker_init(3928254,55,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.566 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:21:36 -->
<!-- Compression = gzip -->