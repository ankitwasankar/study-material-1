<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><!-- saved from url=(0074)http://www.learncpp.com/cpp-tutorial/25-floating-point-numbers/default.htm -->

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<title>2.5 &#8212; Floating point numbers &laquo; Learn C++</title>
<link rel="shortcut icon" href="../../blog/wp-content/themes/atahualpa353/images/favicon/learncpp.ico" /><link rel="canonical" href="default.htm" /><link rel="alternate" type="application/rss+xml" title="Learn C++ RSS Feed" href="../../feed/default.htm" />
<link rel="alternate" type="application/atom+xml" title="Learn C++ Atom Feed" href="../../feed/atom/default.htm" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 2.5 &#8212; Floating point numbers Comments Feed" href="feed/default.htm" />
<script type='text/javascript' src='../../blog/wp-includes/js/l10n.js@ver=20101110'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/jquery/jquery.js@ver=1.6.1'></script>
<script type='text/javascript' src='../../blog/wp-includes/js/comment-reply.js@ver=20090102'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/google-analyticator/external-tracking.min.js@ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../blog/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Learn C++' href='../../default.htm' />
<link rel='start' title='Welcome to LearnCpp.com!' href='../../site-news/this-is-a-news-test-post/default.htm' />
<link rel='prev' title='2.4 &#8212; Integers' href='../24-integers/default.htm' />
<link rel='next' title='Break Time &#8212; Dice Wars' href='../../breaktime/break-time-dice-wars/default.htm' />
<link rel='canonical' href='default.htm' />
<link rel='shortlink' href='../../../wp.me/pgtuw-k' />
<meta name="ROBOTS" content="INDEX" />

<!-- Powered by AdSense-Deluxe WordPress Plugin v0.8 - http://www.acmetech.com/blog/adsense-deluxe/ -->
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#ddd;padding-top:20px;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:98%}* html div#wrapper{<!--width:expression"98%");-->}div#container{padding:20px;background:#fff;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;padding-left:20px;padding-right:20px;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:200px}.coltwo{width:100% }.colthree-inner{width:200px}.colthree{width:200px}td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.commentss-icon:active,a.comments-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(../../blog/wp-content/themes/atahualpa353/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0;width:100%;}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:20px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:20px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;padding:10px 15px}td#footer{width:auto;background-color:#f7f7f7;border-top:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px}td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;border-top:solid 4px #eee;padding-top:20px}div.sticky{background:#eee url('../../blog/wp-content/themes/atahualpa353/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(../../blog/wp-content/themes/atahualpa353/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; width:0; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px;}p.thesetags{margin:10px 0}h3.reply{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; -moz-border-radius:5px; -khtml-border-radius:5px; -webkit-border-radius:5px; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;-moz-border-radius:6px;-khtml-border-radius:6px;-webkit-border-radius:6px;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:-moz-inline-box !important;display:inline-block !important;background:url(../../blog/wp-content/themes/atahualpa353/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;-moz-border-radius:5px;-khtml-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;-moz-border-radius-bottomright:0;-moz-border-radius-bottomleft:0;-webkit-border-bottom-right-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.post img.size-full{max-width:96%;width:auto 100%;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0}td#middle{width:100%}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('../../blog/wp-content/themes/atahualpa353/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}</style>
<script type="text/javascript">
//<![CDATA[




/* JQUERY */
jQuery(document).ready(function(){  


	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3" />
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? '../../../https@ssl_2f\default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<!--[if IE 6]>
<script type="text/javascript" src="../../blog/wp-content/themes/atahualpa353/js/dd_roundies.js"></script>
<script type="text/javascript">DD_roundies.addRule('a.posts-icon,%20a.comments-icon,%20a.email-icon,%20img.logo');</script>
<![endif]-->
</head>
<body class="single single-post postid-46 single-format-standard">
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 
	<tr>

		<!-- Header -->
		<td id="header" colspan="3">

		<div id="imagecontainer" class="header-image-container" style="background: url('../../blog/wp-content/themes/atahualpa353/images/header/learncppheader3_800.jpg') top center no-repeat;"><div class="clickable"><a class="divclick" title="Learn C++" href ="../../default.htm">&nbsp;</a></div></div>
		</td>
		<!-- / Header -->

	</tr>

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-5" class="widget widget_text"><div class="widget-title"><h3>Navigation</h3></div>			<div class="textwidget"><ul>
<li><a href="../../default.htm"><big><big>Main Page</big></big></a>
<li><a href="
../../featured-articles/default.htm"><big><big>Featured Articles</big></big></a>
</ul>
<hr>
<ul>
<li><a href="../../about/default.htm">About / Contact</a>
<li><a href="../../about/#Support">Support LearnCpp</a>
</ul>
<hr>

<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="20" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked id="ss0"></input>
<label for="ss0" title="Search the Web"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="www.LearnCpp.com" id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"><font size="-1" color="#000000">LearnCpp</font></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div><div id="meta-2" class="widget widget_meta"><div class="widget-title"><h3>Meta</h3></div>			<ul>
			<li><a href="../../blog/wp-login.php@action=register.htm">Register</a></li>			<li><a href="../../blog/wp-login.php.htm">Log in</a></li>
			<li><a href="../../feed/default.htm" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../comments/feed/default.htm" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="../../../wordpress.org/default.htm" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>
						</ul>
</div>		<div id="recent-posts-2" class="widget widget_recent_entries">		<div class="widget-title"><h3>Recent Posts</h3></div>		<ul>
				<li><a href="../b-6-new-virtual-function-controls-override-final-default-and-delete/default.htm" title="B.6 &#8212; New virtual function controls: override, final, default, and delete">B.6 &#8212; New virtual function controls: override, final, default, and delete</a></li>
				<li><a href="../b-5-delegating-constructors/default.htm" title="B.5 &#8212; Delegating constructors">B.5 &#8212; Delegating constructors</a></li>
				<li><a href="../b-4-initializer-lists-and-uniform-initialization/default.htm" title="B.4 &#8212; Initializer lists and uniform initialization">B.4 &#8212; Initializer lists and uniform initialization</a></li>
				<li><a href="../b-3-range-based-for-statements-and-static_assert/default.htm" title="B.3 &#8212; Range-based for statements and static_assert">B.3 &#8212; Range-based for statements and static_assert</a></li>
				<li><a href="../b-2-long-long-auto-decltype-nullptr-and-enum-classes/default.htm" title="B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes">B.2 &#8212; Long long, auto, decltype, nullptr, and enum classes</a></li>
				<li><a href="../b-1-introduction-to-c11/default.htm" title="B.1 &#8212; Introduction to C++11">B.1 &#8212; Introduction to C++11</a></li>
				<li><a href="../a-6-fixed-width-integers/default.htm" title="A.6 &#8212; Fixed-width integers">A.6 &#8212; Fixed-width integers</a></li>
				<li><a href="../../site-news/site-software-updated-1123/default.htm" title="Site software updated 11/23">Site software updated 11/23</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things-part-2/default.htm" title="This is why we can&#8217;t have nice things, part 2">This is why we can&#8217;t have nice things, part 2</a></li>
				<li><a href="../../site-news/this-is-why-we-cant-have-nice-things/default.htm" title="This is why we can&#8217;t have nice things">This is why we can&#8217;t have nice things</a></li>
				</ul>
		</div><div id="categories-1" class="widget widget_categories"><div class="widget-title"><h3>Category Indexes</h3></div>		<ul>
	<li class="cat-item cat-item-11"><a href="../../category/breaktime/default.htm" title="Games and fun activities">Break Time</a> (3)
</li>
	<li class="cat-item cat-item-6"><a href="../../category/cpp-programming/default.htm" title="View all posts filed under C++ Programming">C++ Programming</a> (11)
</li>
	<li class="cat-item cat-item-3"><a href="../../category/cpp-tutorial/default.htm" title="View all posts filed under C++ Tutorial">C++ Tutorial</a> (163)
</li>
	<li class="cat-item cat-item-10"><a href="../../category/computer-game-programming/default.htm" title="View all posts filed under Game Programming">Game Programming</a> (4)
</li>
	<li class="cat-item cat-item-14"><a href="../../category/gaming/default.htm" title="View all posts filed under Gaming">Gaming</a> (1)
</li>
	<li class="cat-item cat-item-13"><a href="../../category/general-programming/default.htm" title="View all posts filed under General Programming">General Programming</a> (3)
</li>
	<li class="cat-item cat-item-4"><a href="../../category/site-news/default.htm" title="View all posts filed under Site News">Site News</a> (23)
</li>
	<li class="cat-item cat-item-5"><a href="../../category/wordpress/default.htm" title="View all posts filed under WordPress">WordPress</a> (8)
</li>
		</ul>
</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

	

		
		 

		<div class="clearfix navigation-top">
		<div class="older">&laquo; <a href="../24-integers/default.htm" rel="prev">2.4 &#8212; Integers</a> &nbsp;</div><div class="newer">&nbsp; <a href="../26-boolean-values/default.htm" rel="next">2.6 &#8212; Boolean Values</a> &raquo;</div></div>
<div class="post-46 post type-post status-publish format-standard hentry category-cpp-tutorial" id="post-46">


<div class="post-headline">		<h1>2.5 &#8212; Floating point numbers</h1>
		</div>
<div class="post-byline">By Alex, on June 9th, 2007</div>
<div class="post-bodycopy clearfix"><div style='float:left;padding:8px 8px 8px 0px;'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><p>Integers are great for counting whole numbers, but sometimes we need to store very large numbers, or numbers with a fractional component.  A <strong>floating point</strong> type variable is a variable that can hold a real number, such as 4.0, 2.5, 3.33, or 0.1226.  There are three different floating point data types: <strong>float</strong>, <strong>double</strong>, and <strong>long double</strong>.  A float is usually 4 bytes and a double 8 bytes, but these are not strict requirements, so sizes may vary.  Long doubles were added to the language after it&#8217;s release for architectures that support even larger floating point numbers.  But typically, they are also 8 bytes, equivalent to a double.  Floating point data types are always signed (can hold positive and negative values).</p>
<p>Here are some declarations of floating point numbers:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
float fValue;
double dValue;
long double dValue2;
</pre>
<p>The <em>floating</em> part of the name <em>floating point</em> refers to the fact that a floating point number can have a variable number of decimal places.  For example, 2.5 has 1 decimal place, whereas 0.1226 has 4 decimal places.  </p>
<p>When we assign numbers to floating point numbers, it is convention to use at least one decimal place.  This helps distinguish floating point values from integer values.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int nValue = 5; // 5 means integer
float fValue = 5.0; // 5.0 means floating point
</pre>
<p>How floating point variables store information is beyond the scope of this tutorial, but it is very similar to how numbers are written in scientific notation.  <strong>Scientific notation</strong> is a useful shorthand for writing lengthy numbers in a concise manner.  In scientific notation, a number has two parts: the significand, and a power of 10 called an exponent.  The letter &#8216;e&#8217; or &#8216;E&#8217; is used to separate the two parts.  Thus, a number such as 5e2 is equivalent to 5 * 10^2, or 500.  The number 5e-2 is equivalent to 5 * 10^-2, or 0.05.</p>
<p>In fact, we can use scientific notation to assign values to floating point variables.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
double dValue1 = 500.0;
double dValue2 = 5e2; // another way to assign 500

double dValue3 = 0.05;
double dValue4 = 5e-2; // another way to assign 0.05
</pre>
<p>Furthermore, if we output a number that is large enough, or has enough decimal places, it will be printed in scientific notation:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;
int main()
{
    using namespace std;

    double dValue = 1000000.0;
    cout &lt;&lt; dValue &lt;&lt; endl;
    dValue = 0.00001;
    cout &lt;&lt; dValue &lt;&lt; endl;
    return 0;
}
</pre>
<p>Outputs:</p>
<pre>
1e+006
1e-005
</pre>
<p><strong>Precision</strong></p>
<p>Consider the fraction 1/3.  The decimal representation of this number is 0.33333333333333&#8230; with 3&#8242;s going out to infinity.  An infinite length number would require infinite memory, and we typically only have 4 or 8 bytes.  Floating point numbers can only store a certain number of digits, and the rest are lost.  The <strong>precision</strong> of a floating point number is how many digits it can represent without information loss.</p>
<p>When outputting floating point numbers, cout has a default precision of 6 &#8212; that is, it assumes all variables are only significant to 6 digits, and hence it will truncate anything after that.</p>
<p>The following program shows cout truncating to 6 digits:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;
int main()
{
    using namespace std;
    float fValue;
    fValue = 1.222222222222222f;
    cout &lt;&lt; fValue &lt;&lt; endl;
    fValue = 111.22222222222222f;
    cout &lt;&lt; fValue &lt;&lt; endl;
    fValue = 111111.222222222222f;
    cout &lt;&lt; fValue &lt;&lt; endl;
}
</pre>
<p>This program outputs:</p>
<pre>
1.22222
111.222
111111
</pre>
<p>Note that each of these is only 6 digits.</p>
<p>However, we can override the default precision that cout shows by using the setprecision() function that is defined in a header file called iomanip.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;
#include &lt;iomanip&gt; // for setprecision()
int main()
{
    using namespace std;

    cout &lt;&lt; setprecision(16); // show 16 digits
    float fValue = 3.33333333333333333333333333333333333333f;
    cout &lt;&lt; fValue &lt;&lt; endl;
    double dValue = 3.3333333333333333333333333333333333333;
    cout &lt;&lt; dValue &lt;&lt; endl;
</pre>
<p>Outputs:</p>
<pre>
3.333333253860474
3.333333333333334
</pre>
<p>Because we set the precision to 16 digits, each of the above numbers has 16 digits.  But, as you can see, the numbers certainly aren&#8217;t precise to 16 digits!  </p>
<p>Variables of type float typically have a precision of about 7 significant digits (which is why everything after that many digits in our answer above is junk).  Variables of type double typically have a precision of about 16 significant digits.  Variables of type double are named so because they offer approximately double the precision of a float.</p>
<p>Now let&#8217;s consider a really big number:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;

int main()
{
    using namespace std;
    float fValue = 123456789.0f;
    cout &lt;&lt; fValue &lt;&lt; endl;
    return 0;
}
</pre>
<p>Output:</p>
<pre>
1.23457e+008
</pre>
<p>1.23457e+008 is 1.23457 * 10^8, which is 123457000.  Note that we have lost precision here too!</p>
<p>Consequently, one has to be careful when using floating point numbers that require more precision than the variables can hold.</p>
<p><strong>Rounding errors</strong></p>
<p>One of the reasons floating point numbers can be tricky is due to non-obvious differences between binary and decimal (base 10) numbers.  In normal decimal numbers, the fraction 1/3rd is the infinite decimal sequence: 0.333333333&#8230;  Similarly, consider the fraction 1/10.  In decimal, this is easy represented as 0.1, and we are used to thinking of 0.1 as an easily representable number.  However, in binary, 0.1 is represented by the infinite sequence: 0.00011001100110011&#8230;</p>
<p>You can see the effects of this in the following program:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iomanip&gt;
int main()
{
	using namespace std;
	cout &lt;&lt; setprecision(17);
	double dValue = 0.1;
	cout &lt;&lt; dValue &lt;&lt; endl;
}
</pre>
<p>This outputs:</p>
<pre>
0.10000000000000001
</pre>
<p>Not quite 0.1!  This is because the double had to truncate the approximation due to it&#8217;s limited memory, which resulted in a number that is not exactly 0.1.  This is called a <strong>rounding error</strong>.</p>
<p>Rounding errors can play havoc with math-intense programs, as mathematical operations can compound the error.  In the following program, we use 9 addition operations.</p>
<pre class="brush: cpp; title: ; notranslate" title="">
#include &lt;iostream&gt;
#include &lt;iomanip&gt;
int main()
{
	using namespace std;
	cout &lt;&lt; setprecision(17);
	double dValue;
	dValue = 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1;
	cout &lt;&lt; dValue &lt;&lt; endl;
}
</pre>
<p>This program should output 1, but it actually outputs:</p>
<pre>
0.99999999999999989
</pre>
<p>Note that the error is no longer in the last column like in the previous example!  It has propagated to the second to last column.  As you continue to do mathematical operations, this error can propagate further, causing the actual number to drift farther and farther from the number the user would expect.</p>
<p><strong>Comparison of floating point numbers</strong></p>
<p>One of the things that programmers like to do with numbers and variables is see whether two numbers or variables are equal to each other.  C++ provides an operator called the equality operator (==) precisely for this purpose.  For example, we could write a code snippet like this:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
int x = 5; // integers have no precision issues
if (x==5)
    cout &lt;&lt; &quot;x is 5&quot; &lt;&lt; endl;
else
    cout &lt;&lt; &quot;x is not 5&quot; &lt;&lt; endl;
</pre>
<p>This program would print &#8220;x is 5&#8243;.</p>
<p>However, when using floating point numbers, you can get some unexpected results if the two numbers being compared are very close.  Consider:</p>
<pre class="brush: cpp; title: ; notranslate" title="">
float fValue1 = 1.345f;
float fValue2 = 1.123f;
float fTotal = fValue1 + fValue2; // should be 2.468

if (fTotal == 2.468)
    cout &lt;&lt; &quot;fTotal is 2.468&quot;;
else
    cout &lt;&lt; &quot;fTotal is not 2.468&quot;;
</pre>
<p>This program prints:</p>
<pre>
fTotal is not 2.468
</pre>
<p>This result is due to rounding error.  fTotal is actually being stored as 2.4679999, which is not 2.468!</p>
<p>For the same reason, the comparison operators >, >=, <, and <= may produce the wrong result when comparing two floating point numbers that are very close.</p>
<p><strong>Conclusion</strong></p>
<p>To summarize, the two things you should remember about floating point numbers:</p>
<p>1) Floating point numbers offer limited precision.  Floats typically offer about 7 significant digits worth of precision, and doubles offer about 16 significant digits.  Trying to use more significant digits will result in a loss of precision.  (Note: placeholder zeros do not count as significant digits, so a number like 22,000,000,000, or 0.00000033 only counts for 2 digits).</p>
<p>2) Floating point numbers often have small rounding errors.  Many times these go unnoticed because they are so small, and because the numbers are truncated for output before the error propagates into the part that is not truncated.  Regardless, comparisons on floating point numbers may not give the expected results when two numbers are close.</p>
<p>The section on <a href="../35-relational-operators-comparisons/default.htm">relational operators</a> has more detail on comparing floating point numbers.</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="../26-boolean-values/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/next.png" align=middle> 2.6 &#8212; Boolean Values</a>
</td>
</tr>
<tr>
<td>
        <a href="../../#Chapter2" style="text-decoration:none"><img src="../../images/cpptutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="../24-integers/default.htm" style="text-decoration:none"><img src="../../images/cpptutorial/prev.png" align=middle> 2.4 &#8212; Integers</a>
</td>
</tr>
</table>
<div style='padding-top:8px; padding-bottom:8px'><script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Bottom - Medium Rectangle */
google_ad_slot = "2751429778";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><!-- Powered by Ad Inserter Wordpress Plugin, Author: Igor Funa --></div>

<div class="post-footer"><img src="../../blog/wp-content/themes/atahualpa353/images/icons/folder-gray.gif" alt="" /> <a href="../../category/cpp-tutorial/default.htm" title="View all posts in C++ Tutorial" rel="category tag">C++ Tutorial</a>   | <a href="print/default.htm" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="../../blog/wp-content/plugins/wp-print/images/print.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="print/default.htm" title="Print This Post" rel="nofollow">Print This Post</a></div>
</div><!-- / Post -->						
	
	<div class="clearfix navigation-middle">
		<div class="older">&laquo; <a href="../24-integers/default.htm" rel="prev">2.4 &#8212; Integers</a> &nbsp;</div><div class="newer">&nbsp; <a href="../26-boolean-values/default.htm" rel="next">2.6 &#8212; Boolean Values</a> &raquo;</div></div>


	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">46 comments to 2.5 &#8212; Floating point numbers</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-5897">
		<div id="div-comment-5897" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/ba94c3d76c231af3df3aea98a57b05d7@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Person In Need</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-5897">
		January 11, 2008 at 9:34 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>wow&#8230;&#8230;&#8230;to be honest this was extremely confusing man&#8230;&#8230;.</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-7105">
		<div id="div-comment-7105" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d66694bbc7619203377bd9c9b7b9f14a@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">C++ Student</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-7105">
		February 2, 2008 at 12:04 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>It is far less confusing after reading this.  Thank you.  In class we covered this in about ten minutes and moved on to the next thing.</p>
<p>I&#8217;ve been to a few sites already trying to get a grasp on these (floats/doubles) and this summation really did the trick.</p>
<p>Thanks!</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-7588">
		<div id="div-comment-7588" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/6d6c2c841fc5522e2d3f0ff8d66bfa4f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jefferson</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-7588">
		February 9, 2008 at 4:13 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>What do the f&#8217;s after some of the float and double values mean?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor odd alt depth-2 clearfix" id="comment-7592">
		<div id="div-comment-7592" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-7592">
		February 9, 2008 at 5:11 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>By default, if you type a floating point value into C++ it&#8217;s typed as a double.  Consequently, if you do something like this:</p>
<pre>
float fValue = 4.53; // 4.53 is a double
</pre>
<p>You&#8217;re assigning a double to a float, which loses precision, and the compiler will probably complain.</p>
<p>Putting an &#8220;f&#8221; after the value means that you intend that value to be a float, not a double.  Then when you do this:</p>
<pre>
float fValue = 4.53f; // 4.53 is a float
</pre>
<p>You&#8217;re assigning a float value to a float variable, which makes more sense.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-jsieckman even depth-3 clearfix" id="comment-95077">
		<div id="div-comment-95077" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d4a3472a815954544eedf5287ad24de3@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jsieckman</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95077">
		December 27, 2010 at 10:54 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>I missed something. How is it that 4.53 is a double and not a float?</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-9705">
		<div id="div-comment-9705" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a70263d581022dba5b3e766b3bbc7c51@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Masss</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-9705">
		March 16, 2008 at 4:00 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Is there something wrong with my code?</p>
<p>The compiler brings up a problem with setprecision()..</p>
<pre>
#include "stdafx.h"
#include <iostream>

int main()
{
	using namespace std;

	cout < < setprecision(16);
	float fValue;
	fValue = 1.3333333333333333f;
	cout << fValue << endl;

	cin.ignore(255, '/n');
	cin.get();
	return 0;
}
</pre>
<p>Thanks</iostream></pre>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-9750">
		<div id="div-comment-9750" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-9750">
		March 17, 2008 at 7:58 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>You need to include iomanip.h to use setprecision() that way.</p>
<p>See <a href="../133-output-with-ostream-and-ios/default.htm" rel="nofollow">the lesson on ostream</a> for more info about output manipulators and stuff.</p>
		</div>
</li>
</ul>
</li>
		<li class="pingback odd alt thread-even depth-1 clearfix" id="comment-12599">
		<div id="div-comment-12599" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../26-boolean-values/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 2.6 &#8212; Boolean Values</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-12599">
		April 22, 2008 at 5:45 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...]  2.5 â€” Floating point numbers [...]</p>
		</div>
</li>
		<li class="pingback even thread-odd thread-alt depth-1 clearfix" id="comment-12631">
		<div id="div-comment-12631" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../24-integers/default.htm' rel='external nofollow' class='url'>Learn C++ - &raquo; 2.4 &#8212; Integers</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-12631">
		April 22, 2008 at 6:28 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2007      Prev/Next Posts   &laquo; We apologize for the downtime | Home | 2.5 &#8212; Floating point numbers &raquo;     Saturday, June 9th, 2007 at 11:47 [...]</p>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-19195">
		<div id="div-comment-19195" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/de4e9534819b7c9154de5d67c84398c0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Mitul Golakiya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-19195">
		June 17, 2008 at 5:18 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>/* Program to know real value of fTotal */</p>
<p>#include &lt;iostream.h&gt;<br />
#include &lt;conio.h&gt;</p>
<p>void main()<br />
{<br />
	clrscr();<br />
	double fValue;</p>
<p>	float fValue1 = 1.345f;<br />
	float fValue2 = 1.123f;<br />
	float fTotal = fValue1 + fValue2; // should be 2.468</p>
<p>	if (fTotal == 2.468)<br />
	{<br />
	    cout &lt;&lt; &quot;n fTotal is 2.468&quot;;<br />
	}<br />
	else<br />
	{<br />
	    cout &lt;&lt; &quot;n fTotal is not 2.468&quot;;<br />
	}</p>
<p>	printf(&quot;n The real value of fTotal is %0.7f&quot;, fTotal);<br />
	getch();<br />
}</p>
<p>/* End of Pgram */</p>
		</div>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-19196">
		<div id="div-comment-19196" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/de4e9534819b7c9154de5d67c84398c0@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Mitul Golakiya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-19196">
		June 17, 2008 at 5:22 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>/* Program to know real value of fTotal */</p>
<p>#include &lt;iostream.h&gt;<br />
#include &lt;conio.h&gt;</p>
<p>void main()<br />
{<br />
	clrscr();</p>
<p>	float fValue1 = 1.345f;<br />
	float fValue2 = 1.123f;<br />
	float fTotal = fValue1 + fValue2; // should be 2.468</p>
<p>	if (fTotal == 2.468)<br />
	{<br />
	    cout &lt;&lt; &quot;n fTotal is 2.468&quot;;<br />
	}<br />
	else<br />
	{<br />
	    cout &lt;&lt; &quot;n fTotal is not 2.468&quot;;<br />
	}</p>
<p>	printf(&quot;n The real value of fTotal is %0.7f&quot;, fTotal);<br />
	getch();<br />
}</p>
<p>/* End of Pgram */</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-2 clearfix" id="comment-83718">
		<div id="div-comment-83718" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2fb3995978c5691ce1ea550bf5fb898f@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">supriya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-83718">
		April 28, 2010 at 1:50 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
/* Program to know real value of fTotal */

#include &lt;iostream.h&gt;
#include &lt;conio.h&gt;

void main()
{
clrscr();

float fValue1 = 1.345f;
float fValue2 = 1.123f;
float fTotal = fValue1 + fValue2; // should be 2.468

if (fTotal == 2.468f) // use 2.468f,it will work properly.
{
cout &lt;&lt; &quot;n fTotal is 2.468&quot;;
}
else
{
cout &lt;&lt; &quot;n fTotal is not 2.468&quot;;
}

printf(&quot;n The real value of fTotal is %0.7f&quot;, fTotal);
getch();
}

/* End of Pgram */
</pre>
		</div>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-22585">
		<div id="div-comment-22585" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/e3aba21b42c02e15a2a45b8c69ad3177@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.donthaveone.:%28.com/default.htm' rel='external nofollow' class='url'>CowboyCoder</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-22585">
		August 2, 2008 at 9:16 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Coming form a Java background, I wonder if anyone can advise me a C++ library with a similar function as Java&#8217;s BigDecimal.<br />
Preferably one that works on Linux with gcc(so not the decimal type from Visual C++)</p>
		</div>
</li>
		<li class="comment byuser comment-author-schmeckle odd alt thread-odd thread-alt depth-1 clearfix" id="comment-28548">
		<div id="div-comment-28548" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/c9aabc09c53aafa4f84631bbb55e9313@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../schmeckleproductions.tripod.com/default.htm' rel='external nofollow' class='url'>Schmeckle</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-28548">
		September 27, 2008 at 5:30 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>So with all the rounding errors and precision problems, how do programmers deal with operations that need to display something that would end up with a precision or rounding error? Or am I just over-thinking things?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-29105">
		<div id="div-comment-29105" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-29105">
		October 4, 2008 at 9:20 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Most of the time it&#8217;s simply not necessary to display a number to the number of significant digits where precision/rounding errors creep in.  Generally with floating point numbers, programs will truncate the display to 2-5 decimals.</p>
		</div>
<ul class='children'>
		<li class="comment odd alt depth-3 clearfix" id="comment-29484">
		<div id="div-comment-29484" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/255995609544f26c61ede79f89fa4c41@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Argon</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-29484">
		October 8, 2008 at 6:47 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>This could also be some reading, if interested.<br />
<a href="../../../babbage.cs.qc.edu/courses/cs341/ieee-754references.html" rel="nofollow">http://babbage.cs.qc.edu/courses/cs341/IEEE-754references.html</a></p>
<p>And, &#8220;What Every Computer Scientist Should Know About Floating-Point Arithmetic&#8221;:<br />
<a href="../../../www.validlab.com/goldberg/paper.pdf" rel="nofollow">http://www.validlab.com/goldberg/paper.pdf</a></p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-38092">
		<div id="div-comment-38092" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/193ef3ae640a91c4d6b016d829105cc9@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../sunlife.whipie.com/default.htm' rel='external nofollow' class='url'>rajat jain</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-38092">
		January 18, 2009 at 6:28 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>this is very help full site</p>
		</div>
</li>
		<li class="comment byuser comment-author-iseneirik odd alt thread-odd thread-alt depth-1 clearfix" id="comment-43137">
		<div id="div-comment-43137" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/98ade0c8e464e8034a43ad37804f271a@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">iseneirik</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-43137">
		February 12, 2009 at 1:46 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>how can i make the value a user inputs into a float?</p>
<pre>#include &lt;iostream&gt;

using namespace std;

int divide()
{
    cout &lt;&lt; &quot;Please enter 2 numbers&quot; &lt;&lt; endl;
    cout &lt;&lt; &quot;dividend \t: &quot; ;
    float x;
    cin &gt;&gt; x;
    cout &lt;&lt; &quot;divisor \t: &quot; ;
    float y;
    cin &gt;&gt; y;

    return x / y;
} </pre>
<p>then when i run the program from main() and i put in 2 values like eg. x = 10 y = 3 then the answer is 3 instead of 3.333333</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-48409">
		<div id="div-comment-48409" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-48409">
		March 1, 2009 at 11:19 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>You are already storing the user input values as a flow.  The problem is that your function is returning an integer, so it&#8217;s truncating the result of x/y.  Change your function to return a float and you will be good.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-51325">
		<div id="div-comment-51325" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b764599141f5d46bf349b947b2e5f194@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Chris</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-51325">
		March 17, 2009 at 6:49 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>I set the precision level to 4, and added cout for the 2 values, fValue1 + fValue2.</p>
<p>I got fValue1 IS actually rounded off to 1.345 and fValue2 IS actually 1.123, expecting now the get the result of 2.468, but still reports &#8216;fTotal is not 2.468&#8242;</p>
<p>Why is that?</p>
<p>Chris</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-59718">
		<div id="div-comment-59718" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-59718">
		May 1, 2009 at 7:23 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Rounding error.  The numbers printed on your screen by cout are rounded in this case, so you&#8217;re not seeing the full representation.  However, when you do the comparison, it does so with the actual numbers, not the rounded ones, which can lead to rounding issues.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-52679">
		<div id="div-comment-52679" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/6f25f599c96af53c6ce6205bba0e6197@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vivek Hiremath</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-52679">
		March 23, 2009 at 10:44 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>How do I convert a Float say </p>
<p>         x = 1234.567890123456789</p>
<p>         to<br />
         y = 1234.5678901234  (small float ..10 decimal places only)</p>
<p> Something similar to setPrecision, to use NOT for display/Printing,  but to use as  a value for calculations / pass it on to a Database etc ?</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-Tarindel bypostauthor even depth-2 clearfix" id="comment-59719">
		<div id="div-comment-59719" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2bcdbab687c32f64f9208e016cafe4cc@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../www.tarindel.com/default.htm' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-59719">
		May 1, 2009 at 7:24 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m not sure what the best way to do this is.  For small numbers, you can multiply by 10^x, cast to an integer to drop the remaining decimals, then divide by 10^x.  However, if your number is too large you&#8217;ll overflow the int when you do the casting so I won&#8217;t say this is foolproof.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-60812">
		<div id="div-comment-60812" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/35bc1ced8fa9605875c23ad3faeb8246@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Noha</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-60812">
		May 15, 2009 at 8:12 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Didn&#8217;t understand how 0.1 is represented in binary by 0.00011001100110011…</p>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-67561">
		<div id="div-comment-67561" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/f256678460c5afe31bdab98049fcde6f@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jeremy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-67561">
		August 31, 2009 at 6:32 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>In decimal, .1 is tenths, .01 is hundredths, .001 is thousandths and so on. Likewise, in binary, .1 is halves, .01 is quarters, .001 is eights, and so on.<br />
0.000110011&#8230; would be equal to 1/16 + 1/32 + 1/256 + 1/512 + &#8230;</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-kostas81 odd alt depth-3 clearfix" id="comment-95835">
		<div id="div-comment-95835" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/224996895a2f35fc3320ce3e58c867b3@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kostas81</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95835">
		August 7, 2011 at 12:30 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Ok, so in binary, we have to approximate the 1 of decimal 0.1 with an infinite sum. What I still don&#8217;t understand is why we don&#8217;t use all the &#8220;weights&#8221;, that is, all the powers of 2, but only 1/16, 1/32, 1/256, 1/512 and so on, that is, the 4th position (2^4 = 16), the 5th, the 8th, the 9th, and so on. In other words, why don&#8217;t we have 0.011111111&#8230;&#8230;.. which is equal to 1/2 + 1/4 + 1/8 + 1/16 + &#8230;? It also approaches 1! (I am referring of course to the decimal part of 0.1, that is, the 1.)</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-johnbobz even depth-4 clearfix" id="comment-95841">
		<div id="div-comment-95841" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/d7835e34427dd38279d34b2cf3c13b02@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">johnbobz</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95841">
		August 9, 2011 at 12:51 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>That&#8217;s exactly why you can&#8217;t use every power of 1/2. The infinite sum would add up to 1, which is ten times the number we require. In order for the sum to add up to 0.1, you would need to add Sum[(1/2)^4n + (1/2)^(4n+1)], taking n from 1 to infinity. You can try it yourself if you want.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-kostas81 odd alt depth-5 clearfix" id="comment-95907">
		<div id="div-comment-95907" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/224996895a2f35fc3320ce3e58c867b3@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kostas81</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95907">
		August 21, 2011 at 12:40 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Yes, you are right, this sum indeed converges to 0.1, whereas the  sum I used converges to 1.0. Thank you for the clear and concise explanation!</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-kostas81 even depth-6 clearfix" id="comment-95908">
		<div id="div-comment-95908" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/224996895a2f35fc3320ce3e58c867b3@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kostas81</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95908">
		August 21, 2011 at 12:48 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>There is also a good explanation in Wikipedia (yes, sometimes &#8211; not often though &#8211; Wikipedia has good articles):</p>
<p>&#8220;Fractions in binary</p>
<p>Fractions in binary only terminate if the denominator has 2 as the only prime factor. As a result, 1/10 does not have a finite binary representation, and this causes 10 × 0.1 not to be precisely equal to 1 in floating point arithmetic. As an example, to interpret the binary expression for 1/3 = .010101&#8230;, this means: 1/3 = 0 × 2^(?1) + 1 × 2^(?2) + 0 × 2^(?3) + 1 × 2^(?4) + &#8230; = 0.3125 + &#8230; An exact value cannot be found with a sum of a finite number of inverse powers of two, and zeros and ones alternate forever.&#8221;</p>
<p>Follows a table of the conversion (fractional approximations) for fractions from decimal to binary. For the ones who are interested: </p>
<p><a href="../../../en.wikipedia.org/wiki/binary_numeral_system" rel="nofollow">http://en.wikipedia.org/wiki/Binary_numeral_system</a></p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-kostas81 odd alt depth-7 clearfix" id="comment-95909">
		<div id="div-comment-95909" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/224996895a2f35fc3320ce3e58c867b3@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kostas81</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95909">
		August 21, 2011 at 12:50 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>The question marks are the minus sign. I do not know why this has been false printed in my previous comment.</p>
		</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-60874">
		<div id="div-comment-60874" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9df5e04b19ff3ed6cbad49094c259743@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Rahul</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-60874">
		May 16, 2009 at 1:15 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>why does the float work.its a simple program to calculate the area of a triangle.but if i put the value of base as 3 and height as 3 ,i  get the result as 4 instead of 4.5.here is the code.i don&#8217;t get the answer in decimal</p>
<pre>  #include "stdafx.h"
#include
#include "add.h"
#include 

int main()
{
	using namespace std;
	cout &lt;&gt; b;

	cout &lt;&gt;h;

	float a=divide(multiply(b,h),2);  //area of triangle is half into base into height
	cout &lt;&lt; "area of triangle :" &lt;&lt; a &lt;&lt;endl;

}</pre>
<pre></pre>
		</div>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-61313">
		<div id="div-comment-61313" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/6a10d6764cf4e0749b4898444ae88cf0@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Stacey Brewer</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-61313">
		May 22, 2009 at 9:09 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>When I run the following code, the values seem really wrong when output. What is going wrong here?</p>
<pre>

#include &lt;iostream&gt;
#include &lt;iomanip&gt; // for setprecision()

int main()
{
    using namespace std;
    cout &lt;&lt; setprecision(6) &lt;&lt; &quot;nprecision 6n&quot;;
    float fValue;
    fValue = 1.22222222222222222f;
    cout &lt;&lt; fValue &lt;&lt; endl;
    fValue = 111111111.222222222f;
    cout &lt;&lt; fValue &lt;&lt; endl;
    cout &lt;&lt; setprecision(16) &lt;&lt; &quot;nprecision 16n&quot;;
    fValue = 1.22222222222222222f;
    cout &lt;&lt; fValue &lt;&lt; endl;
    fValue = 111111111.222222222f;
    cout &lt;&lt; fValue &lt;&lt; endl;
    return 0;
}

<!--formatted--></pre>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-69936">
		<div id="div-comment-69936" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/19e4cf15b63b747933d756e1210e311f@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sanjiv</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-69936">
		October 7, 2009 at 11:22 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>your C ++ compiler has a tendency to roundoff 8th precision onwards.<br />
For any value lesser then 8;<br />
It will display 1 lesser than called for.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-64620">
		<div id="div-comment-64620" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a41c50fdfcc0b1bb557acddf3bbae7a4@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Slade</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-64620">
		July 19, 2009 at 5:51 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>In the code example right after &#8220;rounding errors,&#8221; why is there no &#8220;#include &#8221; when there is a cout later and also &#8220;using namespace std&#8221;? Is it a miss type or is there a reason&#8230;?</p>
		</div>
</li>
		<li class="comment even thread-even depth-1 clearfix" id="comment-64621">
		<div id="div-comment-64621" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/a41c50fdfcc0b1bb557acddf3bbae7a4@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Slade</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-64621">
		July 19, 2009 at 5:52 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Sorry after include it is suppsed to say io stream in angled brackets</p>
		</div>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-69888">
		<div id="div-comment-69888" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/19e4cf15b63b747933d756e1210e311f@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sanjiv</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-69888">
		October 6, 2009 at 9:50 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
# include &lt;iostream&gt;

using namespace std;

                int main()
                          {
                           int intVar = 1500000000;
                           intVar = (intVar * 10) / 10;
                           cout &lt;&lt; &quot;intVar :&quot;  &lt;&lt; intVar &lt;&lt; endl; 

                           intVar = 1500000000;
                           intVar = (static_cast&lt;double&gt;(intVar) * 10) / 10;
                           cout &lt;&lt; &quot;intVar :&quot; &lt;&lt; intVar &lt;&lt; endl;  

                           system(&quot;pause&quot;);
                           return 0;
                          }
/*devc++ 4.9.9.2 compiler instead of printing error
value is displaying assigned value directly in the first
 instance.where am I going wrong OR is the new
DEV C++ compiler which is the responsible for this... */

<!--formatted--></pre>
		</div>
<ul class='children'>
		<li class="comment even depth-2 clearfix" id="comment-70165">
		<div id="div-comment-70165" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/19e4cf15b63b747933d756e1210e311f@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sanjiv</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-70165">
		October 11, 2009 at 10:22 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<pre>
 int intVar = 1500000000; 1st instance needs to be declared correctly as

 unsigned int intVar = 1500000000;

Gets the desired results... on compiling
</pre>
<p>Guess all authors are prone to typo errors.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-76738">
		<div id="div-comment-76738" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/dd079a9a0e2ab09f501282ba16634702@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='../../../facebook.com/default.htm' rel='external nofollow' class='url'>Toni</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-76738">
		January 18, 2010 at 4:08 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>hi there, can you give me an example of addition with no outputs?</p>
		</div>
</li>
		<li class="comment byuser comment-author-sleepyhead even thread-odd thread-alt depth-1 clearfix" id="comment-79043">
		<div id="div-comment-79043" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/7afcaae06f342d90b8a920ce7df4d908@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">SleepyHead</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-79043">
		February 25, 2010 at 1:45 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>I&#8217;m confused by your use of the term &#8216;real number&#8217;.</p>
<p>In mathematics a real number is any number which isn&#8217;t an imaginary number, which means that both C++ integer and floating-point data-types can hold real numbers, and the only difference between them is that floating-point data-types can represent decimal fractions, as opposed to integer data-types which can only hold natural numbers (aka counting numbers, or whole numbers).</p>
<p>Also &#8211; a general stylistic point &#8211; you&#8217;ve often used &#8220;it&#8217;s&#8221; where &#8220;its&#8221; is the correct word to use, cf. <a href="../../../www.buckingham.ac.uk/english/guide/its.html" rel="nofollow">http://www.buckingham.ac.uk/english/guide/its.html</a>.</p>
		</div>
</li>
		<li class="pingback odd alt thread-even depth-1 clearfix" id="comment-87424">
		<div id="div-comment-87424" class="clearfix comment-container">
		<div class="comment-author vcard">
				<span class="authorname"><a href='../../../cplusplus.psexam.com/c-tutorial-and-online-ebook/default.htm' rel='external nofollow' class='url'>C++ Tutorial and Online Ebook</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-87424">
		June 29, 2010 at 5:10 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>[...] 2.5 Floating point numbers [...]</p>
		</div>
</li>
		<li class="comment byuser comment-author-studentt even thread-odd thread-alt depth-1 clearfix" id="comment-95108">
		<div id="div-comment-95108" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/73fe3e2fc8acd98cf1690eb875e4476c@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">studentt</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95108">
		January 18, 2011 at 3:17 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Perform the following floating-point divisions:</p>
<p>a) (0.2233*0.01)\(0.6611*103)<br />
b)  (111.99*100)\(44.888*100)<br />
Assume the computer truncates the signficand to four decimal digits and show your results as normalized decimal floating-point numbers.Symbols * and \ denote multiplication and division,respectively.CAN YOU HELP ME TO SOLVE THIS PROBLEM.BECAUSE I M LOST IN IT.I DIDN T UNDERSTAND.</p>
<p>THANK YOU..</p>
		</div>
</li>
		<li class="comment byuser comment-author-hsni odd alt thread-even depth-1 clearfix" id="comment-95112">
		<div id="div-comment-95112" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/2cb30b1bb176d1cf11d34f964d2a6679@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">hsni</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95112">
		January 21, 2011 at 7:48 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>thanks sir&#8230;Awsum work&#8230;a question&#8230;<br />
i want to write a full story as input what should i do????</p>
		</div>
</li>
		<li class="comment byuser comment-author-mauriciotada even thread-odd thread-alt depth-1 clearfix" id="comment-95150">
		<div id="div-comment-95150" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../0.gravatar.com/avatar/4df0edd9ed238087316ebe5556f27983@s=65&d=http_253a_252f_252f0.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">mauriciotada</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95150">
		February 3, 2011 at 4:18 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Hi there! Congratulation, very good explanation!!! Just what I was looking for.</p>
<p>Thank you.</p>
		</div>
</li>
		<li class="comment byuser comment-author-jimboshack odd alt thread-even depth-1 clearfix" id="comment-95198">
		<div id="div-comment-95198" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/b5dd106824673e90a5db53dbf3f2f2dc@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jimboshack</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95198">
		February 21, 2011 at 7:03 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>When I run this code, I get z = 0.333333 and q = 0</p>
<p>    float x = 1;<br />
    float y = 3;<br />
    float z = (x/y);<br />
    float q = (1/3);</p>
<p>Can someone explain why? I realize that if I write</p>
<p>    float q = (1.0/3.0);</p>
<p>that this problem doesn&#8217;t occur, but I&#8217;m just wondering why I can&#8217;t use (1/3) since q is defined as a float. This page says it&#8217;s just a convention to have the decimal point.</p>
		</div>
<ul class='children'>
		<li class="comment byuser comment-author-lharriger even depth-2 clearfix" id="comment-95441">
		<div id="div-comment-95441" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/580526a810ab71a8f6932d93ea53c2ba@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">lharriger</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-95441">
		May 12, 2011 at 11:07 am</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Think it through as follows:</p>
<p>float x = 1 reads &#8220;put INT 1 into FLOAT x.&#8221; This changes its type from int to float. The same is true for float y = 3.<br />
Thus float z = x/y divides two floats and returns a float.</p>
<p>However for float q = (1/3), this is a two part statement.<br />
The first part (1/3) reads &#8220;divide INT 1 by INT 3&#8243;. Since this is division of two integers, this means it must return an integer (the floor), which in this case is 0.<br />
The second part is then q = 0, which reads &#8220;put INT 0 into float q.&#8221;</p>
<p>An important thing to keep in mind is that division on a float is different than division on an integer. The literal 1 is read as an integer, however, the literal 1.0 is read as a float/double. This is why q = (1.0/3.0) is different than q = (1/3).</p>
<p>Hope this helped.</p>
		</div>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-koriroxx odd alt thread-odd thread-alt depth-1 clearfix" id="comment-96120">
		<div id="div-comment-96120" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='../../../1.gravatar.com/avatar/9ed45d72be49befa92ea9cf6123c04ae@s=65&d=http_253a_252f_252f1.gravatar.com_252favatar_252fad516503a11cd5ca435acc9bb6523536_253fs_253d65&r=g' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">koriroxx</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="comment-page-1/#comment-96120">
		October 8, 2011 at 12:03 pm</a>
        <span class="comment-reply-link"><a rel="nofollow" class="comment-reply-login" href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">Log in to Reply</a></span>		 
		</div>
		<p>Regarding the example where you added two floats and got a &#8220;rounding error,&#8221; the problem is that you did not include &#8220;f&#8221; at the end of the number.</p>
<p>#include<br />
#include<br />
using namespace std;</p>
<p>int main()<br />
{<br />
    cout &lt;&lt; setprecision(7);<br />
    float fValue1 = 1.345f;<br />
    float fValue2 = 1.123f;<br />
    float fTotal = fValue1 + fValue2; // should be 2.468</p>
<p>    if (fTotal == 2.468f)<br />
    {<br />
        cout &lt;&lt; &quot;fTotal is 2.468&quot; &lt;&lt; endl;<br />
        cout &lt;&lt; fTotal;<br />
    }</p>
<p>    return 0;<br />
}</p>
<p>It will evaluate properly. If you&#039;re checking for floats, you need to check it using a float value (ie, it needs the f on the end.) It is not a rounding error.</p>
		</div>
</li>
	
	</ul>
	<!-- / Comment List -->

	



	
	<p>You must be <a href="../../blog/wp-login.php@redirect_to=http_253a_252f_252fwww.learncpp.com_252fcpp-tutorial_252f25-floating-point-numbers_252f">logged in</a> to post a comment.</p>

		

<div class="clearfix navigation-bottom">
		<div class="older">&laquo; <a href="../24-integers/default.htm" rel="prev">2.4 &#8212; Integers</a> &nbsp;</div><div class="newer">&nbsp; <a href="../26-boolean-values/default.htm" rel="next">2.6 &#8212; Boolean Values</a> &raquo;</div></div>		
			



</td>
<!-- / Main Column -->


<!-- Right Sidebar -->
<td id="right">

	<div id="text-1" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "pub-0588844875925051";
/* Wide Skyscraper Right Bar */
google_ad_slot = "0955932809";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</div><div id="archives-2" class="widget widget_archive"><div class="widget-title"><h3>Archives</h3></div>		<ul>
			<li><a href='../../2011/11/default.htm' title='November 2011'>November 2011</a></li>
	<li><a href='../../2011/10/default.htm' title='October 2011'>October 2011</a></li>
	<li><a href='../../2011/09/default.htm' title='September 2011'>September 2011</a></li>
	<li><a href='../../2010/10/default.htm' title='October 2010'>October 2010</a></li>
	<li><a href='../../2010/07/default.htm' title='July 2010'>July 2010</a></li>
	<li><a href='../../2009/10/default.htm' title='October 2009'>October 2009</a></li>
	<li><a href='../../2009/09/default.htm' title='September 2009'>September 2009</a></li>
	<li><a href='../../2009/03/default.htm' title='March 2009'>March 2009</a></li>
	<li><a href='../../2008/12/default.htm' title='December 2008'>December 2008</a></li>
	<li><a href='../../2008/10/default.htm' title='October 2008'>October 2008</a></li>
	<li><a href='../../2008/09/default.htm' title='September 2008'>September 2008</a></li>
	<li><a href='../../2008/08/default.htm' title='August 2008'>August 2008</a></li>
	<li><a href='../../2008/06/default.htm' title='June 2008'>June 2008</a></li>
	<li><a href='../../2008/05/default.htm' title='May 2008'>May 2008</a></li>
	<li><a href='../../2008/04/default.htm' title='April 2008'>April 2008</a></li>
	<li><a href='../../2008/03/default.htm' title='March 2008'>March 2008</a></li>
	<li><a href='../../2008/02/default.htm' title='February 2008'>February 2008</a></li>
	<li><a href='../../2008/01/default.htm' title='January 2008'>January 2008</a></li>
	<li><a href='../../2007/12/default.htm' title='December 2007'>December 2007</a></li>
	<li><a href='../../2007/11/default.htm' title='November 2007'>November 2007</a></li>
	<li><a href='../../2007/10/default.htm' title='October 2007'>October 2007</a></li>
	<li><a href='../../2007/09/default.htm' title='September 2007'>September 2007</a></li>
	<li><a href='../../2007/08/default.htm' title='August 2007'>August 2007</a></li>
	<li><a href='../../2007/07/default.htm' title='July 2007'>July 2007</a></li>
	<li><a href='../../2007/06/default.htm' title='June 2007'>June 2007</a></li>
	<li><a href='../../2007/05/default.htm' title='May 2007'>May 2007</a></li>
		</ul>
</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->
<tr>

<!-- Footer -->
<td id="footer" colspan="3">

    <p>
    Copyright &copy; 2011 <a href="../../default.htm">Learn C++</a> - All Rights Reserved<br />Powered by <a href="../../../wordpress.org/default.htm">WordPress</a> &amp; the <a href="../../../wordpress.bytesforall.com/default.htm" title="Customizable WordPress themes">Atahualpa Theme</a> by <a href="../../../www.bytesforall.com/default.htm" title="BFA Webdesign">BytesForAll</a>. Discuss on our <a href="../../../forum.bytesforall.com/default.htm" title="Atahualpa &amp; WordPress">WP Forum</a>    </p>
    
    
    <script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shcore.js@ver=3.0.83c'></script>
<script type='text/javascript' src='../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shbrushcpp.js@ver=3.0.83c'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shcore.css@ver=3.0.83c.css";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "../../blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shthemedefault.css@ver=3.0.83c.css";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<!--stats_footer_test--><script src="../../../stats.wordpress.com/e-201148.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3928254',v:'ext',post:'46'});
var load_cmc = function(){linktracker_init(3928254,46,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script>

</td>
<!-- / Footer -->

</tr>
</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
</body>
</html>
<!-- Dynamic page generated in 0.639 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-12-02 06:07:40 -->
<!-- Compression = gzip -->