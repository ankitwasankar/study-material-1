<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--last modified on Tue, Apr 15, 1997 8:08 AM-->
<HTML>

<HEAD>
<!-- This document was created from RTF source by rtftohtml version 3.0.1 -->

	<META NAME="GENERATOR" Content="Symantec Visual Page 1.0">
	<META NAME="Author" Content="Steph Mineart">
	
	<title>ActiveX Programming with Visual C++ -- Chapter 1</TITLE>
</HEAD>
<MAP NAME="leftnav">
<AREA SHAPE=RECT COORDS="2,2,111,33" HREF="/reference/dir.programminglanguages.html">
<AREA SHAPE=RECT COORDS="3,35,111,63" HREF="/reference/dir.databases.html">
<AREA SHAPE=RECT COORDS="1,62,111,95" HREF="/reference/dir.security1.html">
<AREA SHAPE=RECT COORDS="0,94,111,125" HREF="/reference/dir.webservices.html">
<AREA SHAPE=RECT COORDS="1,127,111,156" HREF="/reference/dir.networkservices1.html">
<AREA SHAPE=RECT COORDS="2,157,111,185" HREF="/reference/dir.middleware.html">
<AREA SHAPE=RECT COORDS="2,185,111,217" HREF="/reference/dir.components.html">
<AREA SHAPE=RECT COORDS="2,218,111,248" HREF="/reference/dir.operatingsystems.html">
<AREA SHAPE=RECT COORDS="2,247,111,277" HREF="/reference/dir.userinterfaces.html">
<AREA SHAPE=RECT COORDS="2,278,111,307" HREF="/reference/dir.groupwareandcollaboration1.html">
<AREA SHAPE=RECT COORDS="2,307,111,339" HREF="/reference/dir.contentmanagement.html">
<AREA SHAPE=RECT COORDS="2,338,111,370" HREF="/reference/dir.funandgames1.html">
<AREA SHAPE=RECT COORDS="0,369,111,404" HREF="/reference/dir.hardware1.html">
</MAP>

<MAP NAME="othersites">
<AREA SHAPE=RECT COORDS="1,1,116,13" HREF="http://www.developer.com/">
<AREA SHAPE=RECT COORDS="1,13,116,26" HREF="http://www.earthwebdirect.com/">
<AREA SHAPE=RECT COORDS="1,26,116,39" HREF="http://www.htmlgoodies.com/">
<AREA SHAPE=RECT COORDS="1,39,116,53" HREF="http://www.javagoodies.com/">
<AREA SHAPE=RECT COORDS="1,53,116,65" HREF="http://www.jars.com/">
<AREA SHAPE=RECT COORDS="1,65,116,77" HREF="http://www.intranetjournal.com/">
<AREA SHAPE=RECT COORDS="1,77,116,92" HREF="http://www.itlibrary.com/">
<AREA SHAPE=RECT COORDS="1,92,116,105" HREF="http://www.javascripts.com/">
<AREA SHAPE=RECT COORDS="1,105,116,118" HREF="http://www.datamation.com/">
<AREA SHAPE=RECT COORDS="0,118,116,130" HREF="http://www.gamelan.com/">
<AREA SHAPE=RECT COORDS="0,130,116,142" HREF="http://www.roadcoders.com/">
<AREA SHAPE=RECT COORDS="0,142,116,156" HREF="http://www.itknowledge.com/">
<AREA SHAPE=RECT COORDS="0,155,116,167" HREF="http://www.y2kinfo.com/">
</MAP>

<BODY BACKGROUND="/images/curve_itlibrary_white.gif" BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000">

<!--Begin Header Table -->

<TABLE width="640" cellpadding="0" cellspacing="0" border="0">
<TR>
<TD VALIGN="TOP" WIDTH="640" COLSPAN="3">
<A HREF="http://www.earthweb.com" target="resource window"><IMG SRC="/images/eweb_banner.gif" VSPACE="6" WIDTH="640" HEIGHT="25" ALT="Brought to you by EarthWeb" border="0"><BR></a>
</TD>
</TR>
<TR>
<TD VALIGN="TOP" WIDTH="150">

<A HREF="/"><IMG SRC="/images/small_logo.gif" WIDTH=103 HEIGHT=82 ALT="IT Library Logo" border="0"></a>
<P>
<!--Begin Subscribe Box Table -->
<TABLE border="0" cellpadding="0" cellspacing="0" WIDTH="100">
<TR>
<TD>

</TD>
</TR>
</TABLE>
<!--End Subscribe Box Table -->


</td>
<TD>
<img src="/images/dotclear.gif" WIDTH="15" HEIGHT="1">
</TD>
<TD>

<!--  Begin Ads ITLBAN //-->

<SCRIPT LANGUAGE="JavaScript">
<!-- Hide from old browsers

now = new Date();
random = now.getTime();

// Modify to reflect site specifics
site = "http://diradserver.developer.com";
target = "/AREA=ITLBAN";
//target = "/AREA=ITLBAN"; //Testing
browser = browserCheck();

if(browser == "NAV") {
 document.write(layerCode());
} else if (browser == "IE") {
 document.write(frameCode());
} else if (browser == "OTHER") {
 document.write(htmlCode());
}

//returns string - browser ID -- either NAV . IE . OTHER
function browserCheck() {
 var out = "";
 if (navigator.appName.indexOf('Netscape') != -1) {     //browser is netscape
  //checking version numbers
  if(navigator.appVersion.substring(0,4) >= "4.02") {
   out = "OTHER";
  } else {
   out = "OTHER";
  }
 } else if (navigator.appName.indexOf('Microsoft') != -1) {    //browser is Explorer
  out = "OTHER";
 } else {
  out = "OTHER";
 }
 return out;
}

//returns a string - layer code for nav 4.05
function layerCode() {
 var out = '<ILAYER SRC="' + site + '/hserver' + target + '?' + random + '"';
 out = out + ' VISIBILITY=show WIDTH=500 HEIGHT=60 BGCOLOR="#ffffff"></ILAYER>';
 return out;
}

//returns a string - frame code for ie 4.05
function frameCode() {
 var out = '<IFRAME SRC="' + site + '/hserver' + target + '?' + random + '"';
 out = out + ' NORESIZE SCROLLING=NO HSPACE=0 VSPACE=0 FRAMEBORDER=0 MARGINHEIGHT=0 MARGINWIDTH=0 WIDTH=500 HEIGHT=60></IFRAME>';
 return out;
}

//returns a string - html code for non capable browsers
function htmlCode() {
 var out = '<A target="new win" HREF="' + site + '/accipiter/adclick.exe' + target + '?' + random + '">';
 out = out + '<IMG SRC="' + site + '/accipiter/adserver.exe' + target + '?' + random + '"><BR><CENTER><FONT SIZE="-2">Click here to visit our sponsor</FONT></CENTER></A>';
 return out;
}

// End Hide -->
</SCRIPT>
<NOSCRIPT>
<A target="new win"  HREF="http://diradserver.developer.com/accipiter/adclick.exe/AREA=ITLBAN">
<IMG SRC="http://diradserver.developer.com/accipiter/adserver.exe/AREA=ITLBAN" WIDTH=500 HEIGHT=60><BR>
<CENTER><FONT SIZE="-2">Click here to visit our sponsor</FONT></CENTER></A>
</NOSCRIPT>

<!-- ITLBAN End Ads //-->


</td>
</TR>
</TABLE>

<!--End Header Table -->

<!--Begin Main Table -->

<TABLE width="640" cellpadding="0" cellspacing="0" border="0">
<TR>

<!--Begin Left Navigation column -->

<TD VALIGN="TOP" WIDTH="140">
<FORM action="/subscribe/list.cgi" method="post">

<INPUT name='email' value='your e-mail' size="11"><INPUT type='hidden'  name='state' value='Subscribe'><br><INPUT type='image' value='subscribe' img src='/images/subscribe.gif' border='0' vspace='3' ></center>

</form>

<IMG SRC="/images/leftnav.gif" WIDTH=111 HEIGHT=404 ALT="nav" border="0"  ISMAP USEMAP="#leftnav">
<p>
<a href="http://www.earthwebdirect.com/"><IMG SRC="/images/earthwebdirect.gif" WIDTH=126 HEIGHT=30 ALT="EarthWeb Direct" border="0"></a>
<P>
<font color="ffffff" face="arial, helvetica" size="2">EarthWeb sites:</FONT>
<IMG SRC="/images/sitelisting.gif" WIDTH="102" HEIGHT="167" ALT="other sites" border="0" USEMAP="#othersites" ismap>
</td>

<!--End Left Navigation column -->
<!-- spacer column  -->

<TD width="40">
<img src="/images/dotclear.gif" WIDTH="40" HEIGHT="1" border=0>
</TD>

<!--Begin Content Column -->

<TD VALIGN="TOP" width="500">

<P>



<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<H1>Chapter 1<BR>
What Is ActiveX?</H1>

<UL>
	<LI><A HREF="#Heading1">What Is ActiveX?</A>
	<UL>
		<LI><A HREF="#Heading2">An Internet Strategy for Applications Development</A>
		<LI><A HREF="#Heading3">ActiveX, OLE, and the Internet</A>
		<LI><A HREF="#Heading4">Classifying ActiveX Components</A>
		<UL>
			<LI><A HREF="#Heading5">Automation Servers</A>
			<LI><A HREF="#Heading6">Automation Controllers</A>
			<LI><A HREF="#Heading7">Controls</A>
			<LI><A HREF="#Heading8">COM Objects</A>
			<LI><A HREF="#Heading9">Documents</A>
			<LI><A HREF="#Heading10">Containers</A>
		</UL>
		<LI><A HREF="#Heading11">From Here...</A>
	</UL>
</UL>

<P>
<HR SIZE="4">

<H1><A NAME="Heading1"></A>What Is ActiveX?</H1>

<UL>
	<LI><B>An Internet strategy</B> 
<SPACER TYPE="VERTICAL" SIZE="2">
 ActiveX started out as an Internet strategy. It now covers all aspects of OLE/COM/Internet
	development.
	<P>
	<LI><B>ActiveX development covers many topics</B> 
<SPACER TYPE="VERTICAL" SIZE="2">
 ActiveX development is very broad in scope, covering Automation Servers, Controls,
	and COM Objects, to name a few.
</UL>

<P>The term ActiveX has become the battle cry of many developers and development
organizations over the past year. On the opposite side of the coin, sales and marketing
organizations have also rallied around this same nebulous term. Few people, however,
can truly explain what the term means. This book is dedicated to explaining what
ActiveX is and what it means to developers. We hope that you learn as much from reading
this book as we did from writing it.
<H2><A NAME="Heading2"></A>An Internet Strategy for Applications Development</H2>
<P>Microsoft first coined the term <I>ActiveX</I> at the Internet Professional Developers
Conference (Internet PDC) in March 1996. ActiveX referred to the conference slogan
&quot;Activate the Internet&quot; and was more a call-to-arms than a technology or
architecture for developing applications.</P>
<P>At the time of the Internet PDC, Microsoft was going head-to-head with Netscape
over control of the Internet Web browser market. The PDC demonstrated, though, that
Microsoft was interested in much more than just the browser market. Microsoft demonstrated
tools ranging from electronic store fronts to new OLE Controls to virtual reality
chat software, and beyond.</P>
<P>ActiveX is the new corporate slogan of Microsoft--similar to the term OLE in the
early 1990s--and in a very short time, has come to mean much more than &quot;Activate
the Internet.&quot;</P>
<P>ActiveX has become the all-encompassing term used to define everything from Web
pages to OLE (Object Linking and Embedding) Controls. It has come to signify, on
one hand, small, fast, reusable components that can get you hooked into all the latest
technologies coming out of Microsoft, the Internet, and the industry. On the other
hand, ActiveX represents Internet and applications integration strategies. These
days, products and companies that don't have ActiveX and Internet somewhere in their
nomenclature are considered, both internally and externally, as being behind the
times. The reality is that trying to describe ActiveX is similar to trying to describe
the color red. ActiveX is not a technology or even an architecture--it is a concept
and a direction.
<H2><A NAME="Heading3"></A>ActiveX, OLE, and the Internet</H2>
<P>ActiveX and OLE have become synonymous. What people once referred to as OLE Controls
(OCXs) are now refered to as ActiveX Controls. OLE DocObjects are now ActiveX Documents.
In some cases, entire documents on how to implement OLE technologies have been updated
to be ActiveX technologies, and the only thing changed was the term OLE, which now
reads as ActiveX.</P>
<P>Although tremendous advances have been made and seemingly new technologies appear
daily with regard to OLE and ActiveX, it is questionable whether the Internet was
or is directly involved in many of these areas. The need for small, fast, reusable
components (COM Objects) has been around for years. Distributed components (DCOM
Objects) were first demonstrated several years ago at the OLE 2.0 PDC. The Visual
Basic (VB) group played a major role in the enabling of ActiveX in its early days.
The BaseCtl framework, which is included in the ActiveX SDK, was developed by the
VB group to answer its need for small, lightweight Controls to improve VB application's
load times. The only contribution the Internet had was in its need for a way to implement
and publish Web pages. Practically every new feature labeled ActiveX can trace its
roots back to a fundamental, global need for small, fast, reusable components, all
of which started with OLE and COM.</P>
<P>ActiveX was not meant to replace OLE, but simply to broaden it to include the
Internet, intranet commercial and in-house applications development, and the tools
used to develop them.</P>
<P>Microsoft has published a number of documents regarding ActiveX development. The
OC 96 specification defines how Controls should be developed to provide faster startup
times and better drawing capabilities. It also describes which interfaces are required
and which are optional. The &quot;OLE Control and Control Container Guidelines&quot;
provide important information for Control and Container interaction. The Microsoft
Web site has become a cornucopia of information for creating, using, and deploying
ActiveX components.</P>
<P>In addition to the specific technologies for creating ActiveX components, Microsoft
has set a standard for the use and integration of ActiveX components. Every product
from VB to Microsoft Word to Java is inherently capable of using ActiveX components.
Four years ago, it was almost impossible to find more than a handful of applications
that were capable of integrating in such a relatively seamless fashion as is possible
today.</P>
<P>The next section looks at the specific types of ActiveX components that can be
created and-- to be even more helpful--how and when they should be used.
<H2><A NAME="Heading4"></A>Classifying ActiveX Components</H2>
<P>This book addresses the topic of ActiveX Component development. These components
can be classified and broken into the following categories:</P>


<BLOCKQUOTE>
	<P>Automation Servers <BR>
	Automation Controllers <BR>
	Controls <BR>
	COM Objects <BR>
	Documents<BR>
	Containers

</BLOCKQUOTE>

<P>This book covers in detail only the development of ActiveX Automation Servers,
Controls, and COM Objects. Automation Controllers, ActiveX Documents, and Containers
entail too many interfaces and too much technology to be addressed in a book of this
size.
<H3><A NAME="Heading5"></A>Automation Servers</H3>
<P>Automation Servers are components that can be programmatically driven by other
applications. An Automation Server contains at least one, and possibly more, <TT>IDispatch</TT>-based
interfaces that other applications can create or connect to. An Automation Server
may or may not contain User Interface (UI), depending on the nature and function
of the Server.</P>
<P>Automation Servers can be <I>in-process</I> (executing in the process space of
the Controller), <I>local</I> (executing in its own process space), or <I>remote</I>
(executing in a process space on another machine). The specific implementation of
the server will, in some cases, define how and where the server will execute, but
that is not guaranteed. A DLL can execute as either in-process, local or remote;
an EXE can execute only locally or remotely. <BR>
<BR>
<IMG SRC="bar.gif" WIDTH="480" HEIGHT="6" ALIGN="BOTTOM" BORDER="0"></P>


<BLOCKQUOTE>
	<P><B>NOTE:</B> The fastest execution times are from Servers that are in-process
	to the Controllers using them. But remember that using an in-process Automation Server
	does not guarantee in-process performance. If an in-process Automation Server is
	created in one process space and then handed to a Controller in another process space,
	the Server becomes local and suffers from the same performance degradation as a Local
	Server. See Part II of this book for more information on process spaces and their
	impact on Server performance.

</BLOCKQUOTE>

<P><IMG SRC="bar.gif" WIDTH="480" HEIGHT="6" ALIGN="BOTTOM" BORDER="0">
<H3><A NAME="Heading6"></A>Automation Controllers</H3>
<P>Automation Controllers are those applications that can use and manipulate Automation
Servers. A good example of an Automation Controller is VB. With the VB programming
language, you are able to create, use, and destroy Automation Servers as though they
are an integral part of the language.</P>
<P>An Automation Controller can be any type of application, DLL or EXE, and can access
the Automation Server either in-process, locally, or remotely. Typically, the registry
entries and the implementation of the Automation Server indicate which process space
the server will execute in relation to the Controller.
<H3><A NAME="Heading7"></A>Controls</H3>
<P>ActiveX Controls are equivalent to what is referred to as OLE Controls or OCXs.
A typical Control consists of a UI representation both at design-time and runtime,
a single <TT>IDispatch</TT> interface defining all of the methods and properties
of the Control, and a single <TT>IConnectionPoint</TT> interface for the events that
the Control can fire. In addition, the Control may have support for persistence across
its execution lifetimes and support for various UI features, such as cut-and-paste
and drag-and-drop features. Architecturally, a Control has a large number of COM
interfaces that must be supported in order to take advantage of these features.</P>
<P>With the release of the new OLE Control and ActiveX guidelines for Control development,
a Control is no longer limited to the feature set defined in the preceding text.
Rather, the developer can now choose to implement only those features that are most
useful and interesting to users of the applications. The Control and Container guidelines
published by Microsoft list all the interfaces and their specific requirements. You
can find this information at the Microsoft Web site: <A HREF="http://www.microsoft.com"><B>http://www.microsoft.com</B></A>.</P>
<P>ActiveX Controls always execute in-process to the Container in which they reside.
The extension of a Control is typically OCX, but in terms of execution models, it
is nothing more than a standard windows DLL.
<H3><A NAME="Heading8"></A>COM Objects</H3>
<P>COM Objects are similar in architecture to Automation Servers and Controllers.
They contain one or more COM interfaces and probably little or no UI. These Objects,
however, cannot be used by the typical Controller application the way Automation
Servers can. The Controller must have specific knowledge of the COM interface that
it &quot;talks&quot; to in order to use the interface, which is not the case for
Automation interfaces. The Windows 95 and NT operating systems contain hundreds of
COM Objects and Custom interfaces as extensions to the operating systems for controlling
everything from the appearance of the desktop to the rendering of 3-D images on the
screen. COM Objects are a good way to organize a related set of functions and data,
while still maintaining the needed high-speed performance of a DLL. <BR>
<BR>
<IMG SRC="bar.gif" WIDTH="480" HEIGHT="6" ALIGN="BOTTOM" BORDER="0"></P>


<BLOCKQUOTE>
	<P><B>NOTE:</B> Automation Servers can also benefit from COM interfaces. These servers
	are known as dual-interface Servers. The <TT>IDispatch</TT> interface of the Automation
	Server also has a companion COM interface describing the methods and properties of
	the Object. Automation Controllers such as VB can take advantage of these dual interfaces
	to provide even greater performance when using the Server. The one drawback to dual-interface
	Servers is that they are limited to the set of data types supported by OLE Automation
	when defining methods and properties.

</BLOCKQUOTE>

<P><IMG SRC="bar.gif" WIDTH="480" HEIGHT="6" ALIGN="BOTTOM" BORDER="0">
<H3><A NAME="Heading9"></A>Documents</H3>
<P>ActiveX Documents, or DocObjects as they were originally called, represent Objects
that are more than a simple Control or Automation Server. A document can be anything
from a spread- sheet to a complete invoice in an accounting application. Documents,
like Controls, have UI and are hosted by a Container application. Microsoft Word
and Excel are examples of ActiveX Document Servers, and the Microsoft Office Binder
and Microsoft Internet Explorer are examples of ActiveX Document Containers.</P>
<P>The ActiveX Document architecture is an extension of the OLE Linking and Embedding
model and allows the document more control over the container in which it is being
hosted. The most obvious change is how the menus are presented. A standard OLE Document's
menu will merge with the Container, providing a combined feature set; whereas an
ActiveX Document will take over the entire menu system, thus presenting the feature
set of only the document and not that of both the Document and the Container. The
fact that the feature set of the Document is exposed is the premise for all the differences
between ActiveX Documents and OLE Documents. The Container is just a hosting mechanism,
and the Document has all of the control.</P>
<P>Another difference is printing and storage. An OLE Document is intended to be
a part of the Containers Document that is hosting it and, thus, is printed and stored
as a piece of the host Containers Document. ActiveX Documents are expected to support
their native printing and storage functions and are not integrated with the Containers
Document.</P>
<P>ActiveX Documents are used within a uniform presentation architecture, rather
than within an embedded document architecture, which is the basis for OLE Documents.
Microsoft Internet Explorer is a perfect example of this. The Explorer merely presents
the Web pages to the user, but they are viewed, printed, and stored as a single entity.
Microsoft Word and Microsoft Excel are examples of the OLE Document architecture.
If an Excel spreadsheet is embedded in a Word document, the spreadsheet is actually
stored with the Word document and is an integral part of it.</P>
<P>ActiveX Documents also have the added capability of being published as Web pages
on the Internet or on a corporate intranet. Imagine an in-house tracking system for
purchase orders run from the same Web browsers that are used to connect to the Internet.
<H3><A NAME="Heading10"></A>Containers</H3>
<P>ActiveX Containers are applications that can host Automation Servers, Controls,
and Documents. VB and the ActiveX Control Pad are examples of Containers that can
host Automation Servers and Controls. The Microsoft Office Binder and the Microsoft
Internet Explorer can host Automation Servers, Controls, and Documents.</P>
<P>With the decreasing requirements defined by the ActiveX Control and Document specifications,
a Container must be robust enough to handle the cases where a Control or Document
lacks certain interfaces. Container applications may allow little or no interaction
with the Document or Control they host, or they may provide significant interaction
capabilities in both manipulation and presentation of the hosted component. This
capability, however, is dependent upon the Container hosting the component and is
not defined by any of the Container guidelines as being required.
<H2><A NAME="Heading11"></A>From Here...</H2>
<P><A HREF="ch02.htm">Chapter 2</A> takes a slightly more detailed look at the specific
ActiveX and OLE technologies available and how best to apply them to your requirements.


<!-- </td>

</td>
</tr>
</table> -->
</td>

</td>
</tr>
</table>

<!-- begin footer information -->

<MAP NAME="footer">
<AREA SHAPE=RECT COORDS="0,0,62,26" HREF="/">
<AREA SHAPE=RECT COORDS="62,0,135,26" HREF="http://www.developer.com/about/">
<AREA SHAPE=RECT COORDS="135,0,199,26" HREF="/search.html">
<AREA SHAPE=RECT COORDS="200,0,274,26" HREF="/subscribe/">
<AREA SHAPE=RECT COORDS="275,0,335,25" HREF="http://www.developer.com/contact/adinfo.html">
<AREA SHAPE=RECT COORDS="335,0,417,25" HREF="http://www.developer.com/contact/">
<AREA SHAPE=RECT COORDS="418,0,467,26" HREF="http://www.developer.com/about/faq.html">
</MAP>

<P>
<table width="640" cellpadding="0" cellspacing="0" border="0">
<tr>
<TD WIDTH="130"></TD>
<td width="468">
<IMG SRC="/images/footer/footerfile.gif" ALT="footer nav" width="467" height="26" BORDER="0" usemap="#footer" ismap>
</td>
</tr>
<tr>
<TD WIDTH="130"></TD>
<td width="468"> 
<font face=arial,helvetica size="1"> Use of this site is subject certain <a href="http://www.developer.com/legal/">Terms &amp; Conditions.</a><br>
Copyright (c) 1996-1999 <A HREF="http://www.earthweb.com/">EarthWeb, Inc.</A>.  All rights reserved.  Reproduction in whole or in part in any form or medium without express written permission of EarthWeb is prohibited.
<a href="http://www.earthweb.com/privacy.html">Please read our privacy policy for details.</a>
</td>
</tr>
</table>

</BODY>
</HTML>
