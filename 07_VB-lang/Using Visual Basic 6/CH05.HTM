<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<SCRIPT LANGUAGE="JavaScript">

<!--

function popUp(pPage) {
 var fullURL = document.location;
 var textURL = fullURL.toString();
 var URLlen = textURL.length;
 var lenMinusPage = textURL.lastIndexOf("/");
 lenMinusPage += 1;
 var fullPath = textURL.substring(0,lenMinusPage);
 popUpWin = window.open('','popWin','resizable=yes,scrollbars=no,width=525,height=394');
 figDoc= popUpWin.document;
 zhtm= '<HTML><HEAD><TITLE>' + pPage + '</TITLE>';
 zhtm += '</head>';
 zhtm += '<BODY bgcolor="#FFFFFF">';
 zhtm += '<IMG SRC="' + fullPath + pPage + '">';
 zhtm += '<P><B>' + pPage + '</B>';
 zhtm += '</BODY></HTML>';
 window.popUpWin.document.write(zhtm);
 window.popUpWin.document.close();
 // Johnny Jackson 4/28/98
 }

//-->
                                                                
</SCRIPT>
<link rel="stylesheet" href="ebooks.css" tppabs="http://pbs.mcp.com/includes/stylesheets/ebooks.css">

	<META NAME="GENERATOR" Content="Symantec Visual Page Mac 1.1.1">
	<TITLE>Using Visual Basic 6 -- Ch 5 -- Working with Projects in VisualBasic 6</TITLE>
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<H1 ALIGN="CENTER"><IMG SRC="que.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/que.gif" WIDTH="171" HEIGHT="66" ALIGN="BOTTOM"
BORDER="0"><BR>
Using Visual Basic 6</H1>
<CENTER>
<P><A HREF="ch04.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch04/ch04.htm"><IMG SRC="previous.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/previous.gif" WIDTH="128" HEIGHT="28"
ALIGN="BOTTOM" ALT="Previous chapter" BORDER="0"></A><A HREF="ch06.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch06/ch06.htm"><IMG
SRC="next.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/next.gif" WIDTH="128" HEIGHT="28" ALIGN="BOTTOM" ALT="Next chapter"
BORDER="0"></A><A HREF="index-38.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/index.htm"><IMG SRC="contents.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/contents.gif" WIDTH="128"
HEIGHT="28" ALIGN="BOTTOM" ALT="Contents" BORDER="0"></A> 
<HR>

</CENTER>
<H1 ALIGN="CENTER">- 5 -<BR>
Working with Projects in VisualBasic 6</H1>

<UL>
	<LI><A HREF="#Heading1">What Is a Visual Basic Project?</A>
	<LI><A HREF="#Heading2">Using the Project Explorer</A>
	<LI><A HREF="#Heading3">Creating a New Project</A>
	<LI><A HREF="#Heading4">Changing a Project's Properties</A>
	<LI><A HREF="#Heading5">Saving and Naming a Project</A>
	<LI><A HREF="#Heading6">Opening an Existing Project</A>
	<LI><A HREF="#Heading7">Adding Files to a Project</A>
	<LI><A HREF="#Heading8">Removing Files from a Project</A>
	<LI><A HREF="#Heading9">Using Project Groups</A>
</UL>

<P>
<HR SIZE="4">

<H1 ALIGN="CENTER"></H1>
<H2><A NAME="Heading1"></A>What Is a Visual Basic Project?</H2>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>A project isn't the same as an application</STRONG></P>
	<P>A project is the thing you use to create an application, such as a &quot;traditional&quot;
	program, a dynamic link library, or an ActiveX control. Think of creating a Visual
	Basic program like baking a cake: you mix ingredients together, bake them, and pull
	a cake out of the oven. Similarly, you put forms, modules, and controls together,
	compile them, and get a Visual Basic application. 
<HR>


</BLOCKQUOTE>

<P>In Visual Basic, a <I>project</I> is the group of all the files that make up your
program. These might include forms, <I>modules </I>(blocks of code not attached to
a form), graphics, and ActiveX controls. Other types of files may also be part of
a project, but don't worry about that now.</P>
<P>The first thing to keep in mind about a project is that as you create your program,
each form, module, graphic, and ActiveX control is saved as an individual file (see
Table 5.1).</P>
<P>
<H4>TABLE 5.1&nbsp;&nbsp;Common file types in a Visual Basic 6 project</H4>
<P>
<TABLE BORDER="1">
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><B><I>File Type</I></B></TD>
		<TD ALIGN="LEFT"><B><I>Description</I></B></TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT">FRM</TD>
		<TD ALIGN="LEFT">Form</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT">BAS</TD>
		<TD ALIGN="LEFT">Module</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT">FRX</TD>
		<TD ALIGN="LEFT">Automatically generated file for every graphic in your project</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT">OCX</TD>
		<TD ALIGN="LEFT">ActiveX control</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT">CLS</TD>
		<TD ALIGN="LEFT">Class module</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT">VBP</TD>
		<TD ALIGN="LEFT">Visual Basic project</TD>
	</TR>
</TABLE>
</P>
<P>Detailed information about all your program's files is stored in the <I>project
file</I>. The project file lists all the files your program uses, as well as details
such as the project name and how the IDE should be configured while you work on this
particular project. Project files have the extension VBP.</P>
<P>
<H2><A NAME="Heading2"></A>Using the Project Explorer</H2>
<P>You can keep track of all the files in your project with the <I>Project Explorer</I>,
a window found on the right side of the Visual Basic IDE (see Figure 5.1). The Project
Explorer provides a method to organize your project's files and allows you to access
them individually in form or code view.</P>
<P><A HREF="javascript:popUp('05fig01.gif')"><B>FIGURE 5.1</B></A> <I>Use the Project
Explorer to keep track of files in your project. Note that OCX and FRX files aren't
listed in the Project Explorer.</I></P>
<P>Most of your interaction with the Project Explorer will be with its context menu.
When you right-click one of your project's files, you'll see a menu similar to that
shown in Figure 5.2.</P>
<P><A HREF="javascript:popUp('05fig02.gif')"><B>FIGURE 5.2</B></A> <I>Most of the
interaction with your project will be through the Project Explorer's context menu.</I></P>
<P>The context menu allows you to</P>

<UL>
	<LI>View the file in a form window or code window
	<P>
	<LI>View the properties of the file
	<P>
	<LI>Add a form or module to the project
	<P>
	<LI>Save the current file
	<P>
	<LI>Delete the file from the project
	<P>
	<LI>Print the file
	<P>
	<LI>Make the Project Explorer float or dock it to the IDE
	<P>
	<LI>Hide the Project Explorer
</UL>

<H2><A NAME="Heading3"></A>Creating a New Project</H2>
<P>Every time you run Visual Basic, you'll see the New Project dialog (see Figure
5.3). From this window, you can simply select the type of project you want to create
and click <B>Open</B>.</P>
<P><A HREF="javascript:popUp('05fig03.gif')"><B>FIGURE 5.3</B></A> <I>Use the New
Project dialog to create a project.</I></P>
<P>It's also possible to start a new project while Visual Basic is already running.</P>
<P><B>Starting a new project</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>From the <B>File</B> menu, choose <B>New Project</B>. (You may be prompted
	to save the current project. If you need to save it but aren't sure how, see the
	later section &quot;Saving and Naming a Project.&quot;)
	<P>
	<DT></DT>
	<DD><B>2. </B>In the New Project dialog, select the type of project you want to create
	and click <B>OK</B>.
	<P>
</DL>

<H2><A NAME="Heading4"></A>Changing a Project's Properties</H2>
<P>Many pieces of information are required to describe a project, including the project
name, the version number, and the title that will appear in the title bar of the
finished application. Many others can be accessed via the Project Properties dialog
(see Figures 5.4 and 5.5).</P>
<P><A HREF="javascript:popUp('05fig04.gif')"><B>FIGURE 5.4</B></A> <I>You set your
project's type, name, and help file on the General page. You can also add a project
description.</I></P>
<P><A HREF="javascript:popUp('05fig05.gif')"><B>FIGURE 5.5</B></A> <I>On the Make
page, you can set your project's version number and version-specific information,
as well as the project title and icon.</I></P>
<P><B>Access the Project Properties dialog</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>In the Project Explorer, right-click the project file (the first file
	listed).
	<P>
	<DT></DT>
	<DD><B>2. </B>From the context menu, select <B><I>ProjectName</I> Properties</B>.
	The Project Properties dialog appears. (Or, from the <B>Project</B> menu, choose
	<B><I>ProjectName</I> Properties</B>.)
	<P>
</DL>

<H2><A NAME="Heading5"></A>Saving and Naming a Project</H2>
<P>When you save your project, you actually save each individual part of your project
(every form, module, graphic, and so forth) as an individual file, and then save
the project file itself. When you save your project for the first time, Visual Basic
automatically suggests a name for each file. This filename will be the same as the
name of the form (or module, graphic, and so on), with an appropriate extension for
the type of file you're saving (refer to Table 5.1). Thus, a module named modStart
would be named modStart.bas because modules have the extension .bas.</P>
<P><B>Save a project</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>From the <B>File</B> menu, choose <B>Save Project</B>.
	<P>
	<DT></DT>
	<DD><B>2. </B>If this is the first time you've saved this project, or if you've added
	a form or module since the last time you've saved it, the Save File As dialog appears
	for each unsaved file (see Figure 5.6).
	<P>
</DL>

<P><A HREF="javascript:popUp('05fig06.gif')"><B>FIGURE 5.6</B></A> <I>Visual Basic
automatically suggests the filename frmFirst.frm for a form named frmFirst.</I></P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>Changing filenames</STRONG></P>
	<P>You don't have to use the filename VB suggests, but you should be careful to use
	a name that allows you to remember what the file does. If you've already named your
	files with friendly names, following the VB convention will help you avoid confusion
	when your project contains large numbers of files. You also should always use the
	filename extension that Visual Basic suggests, to ensure that all your files can
	easily be found when you open a file from within Visual Basic. 
<HR>


</BLOCKQUOTE>


<DL>
	<DT></DT>
	<DD><B>3. </B>Enter a name for the file and click the <B>Save</B> button.
	<P>
	<DT></DT>
	<DD><B>4. </B>The last file to save is the project file. If you've assigned a name
	to your project with the Project Properties dialog (refer to the section &quot;Changing
	a Project's Properties&quot;), VB automatically suggests <I>Project_name</I>.vbp
	as the file name. If you haven't assigned a project name, VB suggests a default name,
	such as Project1.vbp. When this happens, you should change the default name to something
	more friendly, such as SaveTest.vbp.
	<P>
</DL>

<H2><A NAME="Heading6"></A>Opening an Existing Project</H2>
<P>If you've worked on the file recently, open the <B>File</B> menu. At the bottom
of this menu is a list of the files you have most recently worked on. Select the
appropriate file to open it. If the desired project doesn't appear in this list,
you'll have to look for it.</P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>Opening files when you start Visual Basic</STRONG></P>
	<P>When you first start Visual Basic, the New Project dialog usually appears. You
	can save yourself some time by selecting a recent or existing project directly from
	this dialog. If you don't want this dialog to appear each time you start Visual Basic,
	deselect the check box at the bottom of this window. 
<HR>


</BLOCKQUOTE>

<P><B>Opening an existing project</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>From the File menu, choose Open Project. The Open Project dialog appears
	(see Figure 5.7).
	<P>
</DL>

<P><A HREF="javascript:popUp('05fig07.gif')"><B>FIGURE 5.7</B></A> <I>Open existing
or recent projects with the Open Project dialog.</I></P>
<P>

<DL>
	<DT><I></I></DT>
	<DD><B>2. </B>On the <B>Existing</B> page, switch to the folder in which you've saved
	your project. (If you've recently worked on the project, select your project from
	the list on the <B>Recent</B> page.)
	<P>
	<DT></DT>
	<DD><B>3. </B>Select the project and click <B>Open</B>.
	<P>
</DL>

<H2><A NAME="Heading7"></A>Adding Files to a Project</H2>
<P>Often, your programs will require more than one form or module. For example, if
you want to have an About dialog in your program, it will require that you add a
form.</P>
<P>You can add new files to your project in two ways: by selecting the file type
(such as form or module) that you want to add from the <B>Project</B> menu, or by
adding files from the Project Explorer.</P>
<P><B>Adding new files from the Project Explorer</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Right-click inside the Project Explorer.
	<P>
	<DT></DT>
	<DD><B>2. </B>From the context menu choose <B>Add</B>, and then select the type of
	file you want to add.
	<P>
</DL>

<P>Whichever method you use, you may be prompted with a dialog that allows you to
pick a specific type of form or module to add (see Figure 5.8). Visual Basic provides
templates for commonly used files, such as an About dialog, to save you the time
and effort of creating it yourself.</P>
<P><A HREF="javascript:popUp('05fig09.gif')"><B>FIGURE 5.8</B></A> <I>Visual Basic
contains many templates for creating commonly used forms.</I></P>
<P>You can also add existing files to your project, which comes in handy if you want
to use a form or module that you previously created for a different project. Adding
an existing file is very similar to adding a new file, except that you choose <B>Add
File</B> from the <B>Project</B> menu or from the Project Explorer's context menu
(see Figure 5.9).</P>
<P>
<H2><A NAME="Heading8"></A>Removing Files from a Project</H2>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>Why should you remove or delete a file?</STRONG></P>
	<P>If you don't remove an unnecessary file from your project, it will be included
	in your program after you compile it. Also, when you remove a file from a project,
	you don't actually delete the file from your hard drive. To delete the file completely,
	use Windows Explorer. 
<HR>


</BLOCKQUOTE>

<P>If there's a file in your project that you don't want (for example, a form you
added accidentally or a module that contains a form you no longer need), you can
remove it from the project list.</P>
<P><B>Removing a file from a project</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>In the Project Explorer, right-click the file you want to remove.
	<P>
	<DT></DT>
	<DD><B>2. </B>From the context menu, select <B>Remove</B> <B><I>filename</I></B>.
	<P>
</DL>

<P><A HREF="javascript:popUp('05fig10.gif')"><B>FIGURE 5.9</B></A> <I>Add existing
files to your project by selecting <U>A</U>dd File.</I></P>
<P>You also can highlight the file in the Project Explorer and choose <B>Remove</B>
<B><I>filename </I></B>from the <B>Project</B> menu.</P>
<P>
<H2><A NAME="Heading9"></A>Using Project Groups</H2>
<P>Visual Basic 6 allows you to work with more than one project at a time. As you
might imagine, working with multiple forms and modules that are used in different
projects can get pretty confusing. To keep track of everything, you can use the Project
Explorer and a <I>project group</I>, which is a collection of projects (see Figure
5.10). Project Groups can be saved as a file, just like a form, module, or project.
They have the extension .vbg.</P>
<P><B>Add a project to a project group</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Choose <B>Add Project</B> from the <B>File</B> menu.
	<P>
	<DT></DT>
	<DD><B>2. </B>In the <B>Add Project</B> dialog, highlight the type of new project
	you want to add from the <B>New</B> tab, or select an existing or recent project
	from the appropriate page of this dialog.
	<P>
	<DT></DT>
	<DD><B>3. </B>Click <B>OK</B>. Visual Basic automatically creates a project group
	and adds the new project to it, which you can see in the Project Explorer.
	<P>
</DL>

<P><A HREF="javascript:popUp('05fig11.gif')"><B>FIGURE 5.10</B></A> <I>The Project
Explorer allows you to track multiple projects at one time by using project groups.
The project in boldface type is the project that runs when you press F5.</I></P>
<P>

<DL>
	<P>
</DL>

<P><BR>
Project groups don't really become important until you start creating ActiveX controls,
which require you to have multiple projects open at the same time. So don't worry
about project groups right now. Just keep in mind that it's possible to have more
than one project open at the same time.</P>
<H1></H1>
<CENTER>
<P>
<HR>
<A HREF="ch04.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch04/ch04.htm"><IMG SRC="previous.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/previous.gif" WIDTH="128" HEIGHT="28"
ALIGN="BOTTOM" ALT="Previous chapter" BORDER="0"></A><A HREF="ch06.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch06/ch06.htm"><IMG
SRC="next.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/next.gif" WIDTH="128" HEIGHT="28" ALIGN="BOTTOM" ALT="Next chapter"
BORDER="0"></A><A HREF="index-38.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/index.htm"><IMG SRC="contents.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/contents.gif" WIDTH="128"
HEIGHT="28" ALIGN="BOTTOM" ALT="Contents" BORDER="0"></A> <BR>
</P>

<P>&copy; <A HREF="copy.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/copy.htm">Copyright</A>, Macmillan Computer Publishing. All
rights reserved.
</CENTER>

</BODY>

</HTML>
