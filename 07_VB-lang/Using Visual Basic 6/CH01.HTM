<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<SCRIPT LANGUAGE="JavaScript">

<!--

function popUp(pPage) {
 var fullURL = document.location;
 var textURL = fullURL.toString();
 var URLlen = textURL.length;
 var lenMinusPage = textURL.lastIndexOf("/");
 lenMinusPage += 1;
 var fullPath = textURL.substring(0,lenMinusPage);
 popUpWin = window.open('','popWin','resizable=yes,scrollbars=no,width=525,height=394');
 figDoc= popUpWin.document;
 zhtm= '<HTML><HEAD><TITLE>' + pPage + '</TITLE>';
 zhtm += '</head>';
 zhtm += '<BODY bgcolor="#FFFFFF">';
 zhtm += '<IMG SRC="' + fullPath + pPage + '">';
 zhtm += '<P><B>' + pPage + '</B>';
 zhtm += '</BODY></HTML>';
 window.popUpWin.document.write(zhtm);
 window.popUpWin.document.close();
 // Johnny Jackson 4/28/98
 }

//-->
                                                                
</SCRIPT>
<link rel="stylesheet" href="ebooks.css" tppabs="http://pbs.mcp.com/includes/stylesheets/ebooks.css">

	<META NAME="GENERATOR" Content="Symantec Visual Page Mac 1.1.1">
	<TITLE>Using Visual Basic 6 -- Ch 1 -- Building Your First Application</TITLE>
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<H1 ALIGN="CENTER"><IMG SRC="que.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/que.gif" WIDTH="171" HEIGHT="66" ALIGN="BOTTOM"
BORDER="0"><BR>
Using Visual Basic 6</H1>
<CENTER>
<P><A HREF="fm.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/fm/fm.htm"><IMG SRC="previous.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/previous.gif" WIDTH="128" HEIGHT="28"
ALIGN="BOTTOM" ALT="Previous chapter" BORDER="0"></A><A HREF="ch02.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch02/ch02.htm"><IMG
SRC="next.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/next.gif" WIDTH="128" HEIGHT="28" ALIGN="BOTTOM" ALT="Next chapter"
BORDER="0"></A><A HREF="index-38.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/index.htm"><IMG SRC="contents.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/contents.gif" WIDTH="128"
HEIGHT="28" ALIGN="BOTTOM" ALT="Contents" BORDER="0"></A> 
<HR>

</CENTER>
<H1 ALIGN="CENTER">- 1 -<BR>
Building Your First Application</H1>

<UL>
	<LI><A HREF="#Heading1">Writing Your First Application</A>
	<LI><A HREF="#Heading2">Starting Visual Basic</A>
	<LI><A HREF="#Heading3">Building the Calendar Feature</A>
	<LI><A HREF="#Heading4">Adding a Clock Feature</A>
	<LI><A HREF="#Heading5">Configuring the Timer Control</A>
	<LI><A HREF="#Heading6">Using the Label Control to Display the Time</A>
	<LI><A HREF="#Heading7">Adding a Message</A>
	<LI><A HREF="#Heading8">Improving Your First Application</A>
</UL>

<P>
<HR SIZE="4">

<H1 ALIGN="CENTER"></H1>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>Who is the end user?</STRONG></P>
	<P>An end user is the person for whom the program was made--the person who uses the
	program. 
<HR>


</BLOCKQUOTE>

<H2><A NAME="Heading1"></A>Writing Your First Application</H2>
<P>The best way to learn programming is to do programming. Therefore, let's create
a program. Your first program will be a Visual Basic Calendar, which allows the end
user to</P>

<UL>
	<LI>View a calendar of the present month
	<P>
	<LI>Browse months
	<P>
	<LI>View a clock that presents the current time<BR>
	<BR>
	
	<LI>Read a secret message
</UL>

<P>If you think that this is too much functionality to implement for a beginner's
program, don't worry; it's not. Visual Basic does most of the work for you. Unlike
other languages, such as C++, where you have to program every little thing, Visual
Basic brings a high degree of automatic programming to your fingertips. Thus, you
can do a lot with not a lot of code.</P>
<P>However, don't misinterpret &quot;not a lot of code&quot; to mean &quot;not a
lot of power.&quot; Visual Basic is a very powerful language. You can write Visual
Basic code that does &quot;every little thing&quot; if you want or need it to. You
also can exploit the labor-saving nature of VB to implement a program quickly. The
choice is yours. Visual Basic is versatile enough to be useful to a broad range of
programmers--from beginner to seasoned professional.</P>
<P>
<H2><A NAME="Heading2"></A>Starting Visual Basic</H2>
<P>The first thing you need to do is open a Visual Basic program. From the <B>Windows
Start</B> menu, choose <B>Programs</B>, <B>Microsoft Visual Studio 6.0</B>, and then
<B>Microsoft Visual Basic 6.0</B>.</P>
<P>When you start VB, you're taken to the Visual Basic <I>Integrated Development
Environment (IDE)</I>. This is your programming workbench, the place where you create
your programs (see Figure 1.1). Notice that the IDE presents what looks like an empty
window containing some dots and a title bar with the word Form1. This window is a
<I>form</I>, the primary building block of a Visual Basic application. An application
can have many forms or one form; the application we're developing for this example
has one form.</P>
<P><A HREF="javascript:popUp('01fig02.gif')"><B>FIGURE 1.1</B></A> <I>The Visual
Basic Integrated Development Environment presents a unified programming work area.</I></P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>ActiveX controls</STRONG></P>
	<P>Another name for the little programs that come with Visual Basic is <I>ActiveX
	controls</I>. The calendar program that you add to your application is an ActiveX
	control. 
<HR>


</BLOCKQUOTE>

<H2><A NAME="Heading3"></A>Building the Calendar Feature</H2>
<P>Now let's build the features of your application. First, you need a calendar.
You could build one from scratch, or you could add the calendar program that comes
within VB to your application. Let's use the one that comes with VB (if you don't
have a few years to learn VB at the expert level, it makes the most sense).</P>
<P>If you don't want to create the Visual Basic Calendar program from scratch, you
can retrieve the finished code from the Web site dedicated to this book<B> </B>(<A
HREF="javascript:if(confirm('http://www.mcp.com/info  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.mcp.com/info'" tppabs="http://www.mcp.com/info">http://www.mcp.com/info</A>). You'll be asked to enter
an ISBN; you need to enter 078971633x, and then click the <B>Search</B> button to
go to the Book Info page for <I>Using Visual Basic 6</I>. After you download the
code, double-click the file Project1.vbp for the Chapter 1 code. If you've installed
Visual Basic on your system, double-clicking invokes the sample project within VB.</P>
<P><B>Get the calendar program into the Visual Basic IDE</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>From the <B>Project</B> menu, choose <B>Components</B> (see Figure
	1.2).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig03.gif')"><B>FIGURE 1.2</B></A> <I>All the ActiveX
Controls that come with VB aren't automatically loaded by default. You have to select
some from the C<U>o</U>mponents menu.</I></P>

<DL>
	<DT><I></I></DT>
	<DD><B>2. </B>In the <B>Components</B> dialog, select <B>Windows Common Controls
	2-6.0</B> and click <B>OK</B> (see Figure 1.3).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig04.gif')"><B>FIGURE 1.3</B></A> <I>Visual Basic
comes with many ActiveX components that you can use in your projects. Some need to
be added to the IDE.</I></P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>What is ActiveX?</STRONG></P>

	<P>ActiveX is a brand name from Microsoft that lets you create little programs, formally
	known as components and <I>controls</I>, that you can add to larger programs. These
	larger programs that you can add ActiveX components and controls to can be <I>standalone
	programs </I>or programs that run on the Internet. You can use Visual Basic to make
	your own ActiveX components and controls. 
<HR>


</BLOCKQUOTE>

<P>These steps added the calendar control to the Visual Basic ToolBox. The formal
name for the control that you've inserted into your first application is the MonthView
ActiveX control. We'll use this terminology from here on.</P>
<P>Now you need to add the control to the form.</P>
<P><B>Add the MonthView control to your form</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Select the MonthView control icon from the Visual Basic ToolBox (see
	Figure 1.4).
	<P>
	<DT></DT>
	<DD><B>2. </B>Double-click the MonthView control icon to add the control to the main
	form (see Figure 1.5).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig05.gif')"><B>FIGURE 1.4</B></A> <I>When you add
an ActiveX Control from the Components dialog, it appears in the Visual Basic ToolBox.</I></P>
<P><A HREF="javascript:popUp('01fig06.gif')"><B>FIGURE 1.5</B></A> <I>When you add
an ActiveX Control to a form, the control sets itself at its default size.</I></P>
<P>You've just created your first program. Press <B>F5</B> or choose <B>Start</B>
from the <B>Run</B> menu to run it . Click the End button or choose <B>End</B> from
the <B>Run</B> menu to terminate the program.</P>
<P>
<H2><A NAME="Heading4"></A>Adding a Clock Feature</H2>
<P>The next feature to implement into your practice program is the capability to
display the time. You'll use the Timer ActiveX control, which is <I>intrinsic,</I>
meaning that it's standard to Visual Basic (built right into the core code). You
never have to add it to the ToolBox; the Timer is always there (see Figure 1.6) Look
at Table 1.1 to see the ToolBox icons and their associated ActiveX control.</P>
<P><A HREF="javascript:popUp('01fig08.gif')"><B>FIGURE 1.6</B></A> <I>The Timer is
a Visual Basic intrinsic control.</I></P>
<P>
<H4>TABLE 1.1&nbsp;&nbsp;The Visual Basic Controls</H4>
<P>
<TABLE BORDER="1">
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><B><I>Icon</I></B></TD>
		<TD ALIGN="LEFT"><B><I>ActiveX Control</I></B></TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic11.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic11.gif" WIDTH="23" HEIGHT="24" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Not a control; enables the mouse pointer</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic13.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic13.gif" WIDTH="24" HEIGHT="22" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Label</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic14.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic14.gif" WIDTH="30" HEIGHT="29" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">TextBox</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic16.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic16.gif" WIDTH="27" HEIGHT="23" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">CommandButton</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic31.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic31.gif" WIDTH="25" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Timer</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic12.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic12.gif" WIDTH="31" HEIGHT="29" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">PictureBox</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic15.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic15.gif" WIDTH="27" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Frame</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic17.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic17.gif" WIDTH="23" HEIGHT="22" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">CheckBox</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic18.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic18.gif" WIDTH="22" HEIGHT="21" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">OptionButton</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic19.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic19.gif" WIDTH="28" HEIGHT="26" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">ComboBox</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic20.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic20.gif" WIDTH="29" HEIGHT="23" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">ListBox</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic22.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic22.gif" WIDTH="27" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Vertical scrollbar</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic21.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic21.gif" WIDTH="28" HEIGHT="22" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Horizontal scrollbar</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic32.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic32.gif" WIDTH="28" HEIGHT="26" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">DriveListBox</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic33.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic33.gif" WIDTH="25" HEIGHT="24" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">DirListBox</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic34.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic34.gif" WIDTH="23" HEIGHT="23" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">FileListBox</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic35.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic35.gif" WIDTH="21" HEIGHT="20" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Shape</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic36.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic36.gif" WIDTH="21" HEIGHT="20" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Line</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic24.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic24.gif" WIDTH="30" HEIGHT="29" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Data</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic25.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic25.gif" WIDTH="28" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">OLE</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic26.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic26.gif" WIDTH="26" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">Animation</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic27.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic27.gif" WIDTH="27" HEIGHT="25" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">UpDown</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic28.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic28.gif" WIDTH="27" HEIGHT="26" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">MonthView</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic29.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic29.gif" WIDTH="24" HEIGHT="23" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">DateTimePicker</TD>
	</TR>
	<TR ALIGN="LEFT" VALIGN="TOP">
		<TD ALIGN="LEFT"><IMG SRC="ic30.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch01/ic30.gif" WIDTH="26" HEIGHT="26" ALIGN="BOTTOM" BORDER="0"></TD>
		<TD ALIGN="LEFT">FlatScrollBar</TD>
	</TR>
</TABLE>



<BLOCKQUOTE>
	<P>
<HR>
<STRONG>The latest additions to your IDE</STRONG></P>
	<P>Animation, UpDown, MonthView, DateTimePicker, and FlatScrollBar are all Windows
	common controls. When you selected Windows Common Controls 2-6.0 in the earlier steps,
	you put all these controls into your ToolBox. 
<HR>
</P>

</BLOCKQUOTE>

<P><B>Add the timer to your application</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Make sure that the Pointer icon in the ToolBox is selected.
	<P>
	<DT></DT>
	<DD><B>2. </B>Put the mouse pointer on the MonthView control on the form, press your
	left mouse button down, and drag the control over to the right (see Figure 1.7).
	<P>
	<DT></DT>
	<DD><B>3. </B>Double-click the Timer control in the ToolBox to add it to the form
	(see Figure 1.8).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig09.gif')"><B>FIGURE 1.7</B></A> <I>You can move
an ActiveX control around a form at design time by dragging it.</I></P>
<P><A HREF="javascript:popUp('01fig10.gif')"><B>FIGURE 1.8</B></A> <I>Controls appear
in the middle of a form when you add them by using the double-click technique.</I></P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>What's a windowless control?</STRONG></P>
	<P>If the Timer appears over the MonthView ActiveX control, don't fret; the Timer
	is a windowless control. A windowless control appears during design time but is invisible
	when you run your code. Don't mistake controls that can be made invisible at runtime
	as windowless controls; they aren't. You never see a windowless control at runtime.
	
<HR>


</BLOCKQUOTE>

<H2><A NAME="Heading5"></A>Configuring the Timer Control</H2>
<P>Although you've added the Timer to the form, it won't really do anything until
you configure it to report time the way you want it to.</P>
<P><B>Configure the Timer to report the time</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Select the Timer control on the form. (Make sure that the Pointer is
	selected in the ToolBox.)
	<P>
	<DT></DT>
	<DD><B>2. </B>In the Properties window, select the <B>Interval</B> property and enter
	the number 500 (see Figure 1.9).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig11.gif')"><B>FIGURE 1.9</B></A> <I>The Properties
window is where you configure the settings for a selected ActiveX control.</I></P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>Measuring a second with the Timer</STRONG></P>
	<P>You set the increment of time measured by the Timer by using the Interval property.
	The Timer measures time in intervals of 1/1000 of a second. Therefore, to measure
	time in half-second intervals, set the value of the Interval property to 500. 
<HR>


</BLOCKQUOTE>

<P>Setting the value of the Timer's Interval property to 500 is operationally the
same as configuring the Timer to do something every half a second. Now you have to
program what you want the Timer to do every half second: to report the current time.
You need a place in which to display the time. For this, use a Label control.</P>
<P>
<H2><A NAME="Heading6"></A>Using the Label Control to Display the Time</H2>
<P><B>Add a Label control to the form</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Select the Label control icon in the ToolBox.
	<P>
	<DT></DT>
	<DD><B>2. </B>Rather than double-click, draw a box on Form1 by dragging the mouse
	(see Figure 1.10).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig12.gif')"><B>FIGURE 1.10</B></A> <I>You also can
add a control to a form by selecting the control in the ToolBox and dragging to size.</I></P>

<DL>
	<DT><I></I></DT>
	<DD><B>3. </B>In the Properties window, scroll to the BorderStyle property. Click
	the property and then select <B>1-Fixed Single</B> from the drop-down list (see Figure
	1.11).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig13.gif')"><B>FIGURE 1.11</B></A><I> Some properties,
such as the Label control's BorderStyle property, have values that you can set from
drop-down menus.</I></P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>What's an event procedure?</STRONG></P>
	<P>An <I>event procedure</I> is a piece of code that you write to execute a programming
	event. For example, when a user clicks a CommandButton, a Click() event is generated.
	Visual Basic provides a CommandButton_Click() event procedure that you can program
	to react to the CommandButton click. The same is true with the Timer. When a Timer's
	interval is reached, a Timer() event is fired. You can think of the code that you
	write in the Timer() event as &quot;do this when the Timer's interval has been reached.&quot;
	Some controls have many events; some have only a few. It depends on the control.
	You can learn more about event procedures in Chapter 6, &quot;Working with Properties,
	Methods, and Events.&quot; 
<HR>
</P>

</BLOCKQUOTE>

<P><B>Code the instructions that display the time in the Label control</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Double-click the Timer control on the form. The Code window appears.
	<P>
	<DT></DT>
	<DD><B>2. </B>Add the following line of code to the Timer1_Timer() event procedure
	in the blank space between the line Private Sub Timer1_Timer() and End Sub (see Figure
	1.12):
</DL>



<BLOCKQUOTE>
	<PRE>Label1.Caption = Time</PRE>

</BLOCKQUOTE>

<PRE></PRE>

<DL>
	<DT></DT>
	<DD><B>3. </B>Run the code by pressing F5 (see Figure 1.13).
	<P>
</DL>

<H2><A NAME="Heading7"></A>Adding a Message</H2>
<P>For this program, a message appears when you click the CommandButton on the form.
To implement this feature, first you must add a CommandButton to the form.</P>
<P><B>Add a CommandButton</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Select the CommandButton control in the ToolBox.
	<P>
	<DT></DT>
	<DD><B>2. </B>Add a CommandButton to the form by dragging your mouse cursor across
	the form (see Figure 1.14).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig16.gif')"><B>FIGURE 1.12</B></A> <I>The Timer
event procedure is fired every time its Interval is reached. If you set the value
of the Interval property to 500, the Timer event is fired every half second.</I></P>
<P><A HREF="javascript:popUp('01fig17.gif')"><B>FIGURE 1.13</B></A> <I>The Timer
assigns the present time to the Caption property of the Label control in its Timer()
event procedure.</I></P>
<P><A HREF="javascript:popUp('01fig18.gif')"><B>FIGURE 1.14</B></A> <I>Add a control
by dragging if you want to custom-size it at a specific location.</I></P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>A control's <I>Name</I> property</STRONG></P>
	<P>All controls have a unique name. By default, VB assigns the value of the Name
	property to be the control's type name plus a number. For example, the default value
	of the CommandButton's Name property is Command1. If the value Command1 is already
	in use, VB names the new CommandButton Command2 (and so on). You can change the default
	value of a control's Name property only at design time. Also, the Name property of
	the control isn't something that end users see when the program is running. 
<HR>
</P>
	<P>
<HR>
<STRONG>Using listing code</STRONG></P>
	<P>If you don't want to type code from the book into your programs, you can use the
	code in the file referenced in the heading of the listing. You can get this code
	from the book's Web site (<A target="_new" HREF="javascript:if(confirm('http:// www.mcp.com/info  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http:// www.mcp.com/info'" tppabs="http:// www.mcp.com/info">http:// www.mcp.com/info</A>).
	To access this code, open the file in a text editor such as Notepad. Then <U>C</U>opy
	and <U>P</U>aste the code from the text editor into VB. 
<HR>


</BLOCKQUOTE>


<DL>
	<DT></DT>
	<DD><B>3. </B>Use the drag technique in Step 2 to add a TextBox above the CommandButton.
	<P>
	<DT></DT>
	<DD><B>4. </B>Double-click the CommandButton to expose the Click() event procedure.
	<P>
	<DT></DT>
	<DD><B>5. </B>Add the code in Listing 1.1 to the Command1_Click() event procedure
	(see Figure 1.15).
	<P>
</DL>

<H4>LISTING 1.1&nbsp;&nbsp;01LIST01.TXT--The Code that displays a secret message
in the <BR>
TextBox</H4>
<PRE><B>01</B> Dim strMsg As String</PRE>
<PRE><B>02</B> strMsg = WeekdayName(Weekday(Date), _</PRE>
<PRE>False, vbUseSystemDayOfWeek)</PRE>
<PRE><B>03</B> strMsg = strMsg &amp; &quot; is the first day of the rest&quot;</PRE>
<PRE><B>04</B> strMsg = strMsg &amp; &quot; of your life!&quot;</PRE>
<PRE><B>05</B> Text1.Text = strMsg</PRE>

<DL>
	<DT></DT>
	<DD><B>6. </B>In the Properties window, set the <B>Caption</B> property for the Command1
	CommandButton to Click for a Secret (see Figure 1.16).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig19.gif')"><B>FIGURE 1.15</B></A> <I>Notice that
the code for the Command1_Click() event procedure doesn't have line numbers, which
are used in this book for reference purposes. You shouldn't use them in code.</I></P>
<P><A HREF="javascript:popUp('01fig20.gif')"><B>FIGURE 1.16</B></A> <I>When you change
the value of the CommandButton's Caption property, you change the text that the CommandButton
displays within itself.</I></P>


<BLOCKQUOTE>
	<P>
<HR>
<STRONG>Saving projects</STRONG></P>
	<P>When you save a project, you should create a directory to hold all the parts of
	the project--project file (.prj) and forms (.frm and .frx). FRX files contain information
	about embedded graphics in a form. 
<HR>


</BLOCKQUOTE>


<DL>
	<DT></DT>
	<DD><B>7. </B>Save the code by selecting <B>Save Project</B> from the <B>File</B>
	menu.
	<P>
	<DT></DT>
	<DD><B>8. </B>Run the code by pressing the F5 key (see Figure 1.17).
	<P>
</DL>

<P>The code in Listing 1.1 shows you how to work with variables. You can think of
a <I>variable</I> as a storage container for unknown information that's to be provided
at a later time or at another place in code. Line 1 of Listing 1.1 shows you how
to <I>declare</I> a variable by using the Dim keyword as shown in Line 1. Line 1
creates the variable strMsg.</P>
<P>When you create a variable, it doesn't contain any data. To give the variable
some value, you must assign some data to it. Lines 2 through 4 of Listing 1.1 assign
value to the strMsg variable by continually adding new data to existing data. Finally
in Line 5, the information stored in the variable strMsg is assigned to be the value
for the Text property of the Text1 TextBox.</P>
<P><A HREF="javascript:popUp('01fig22.gif')"><B>FIGURE 1.17</B></A> <I>Click the
CommandButton to fire the Click() event procedure that displays the secret message
in the TextBox.</I></P>
<P>For more information on variables, what they are, and how to use them, see Chapter
7, &quot;Using Data Types, Constants, and Variables.&quot;</P>
<P>
<H2><A NAME="Heading8"></A>Improving Your First Application</H2>
<P>As you review the work that you've done so far, notice that some things need improvement.
Figure 1.18 shows these shortcomings.</P>
<P><A HREF="javascript:popUp('01fig23.gif')"><B>FIGURE 1.18</B></A> <I>The upper
form is the state of your program before the user clicks the CommandButton. The lower
form is after the user clicks the CommandButton.</I></P>
<P><B>Make the clock more readable</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Press Shift+F7 to view the Object window.
	<P>
	<DT></DT>
	<DD><B>2. </B>Select the Label control in the main form.
	<P>
	<DT></DT>
	<DD><B>3. </B>In the Property window, scroll down to the Font property.
	<P>
	<DT></DT>
	<DD><B>4. </B>Click the <B>...</B><I> </I>button to the right of the Font property
	(see Figure 1.19).
	<P>
	<DT></DT>
	<DD><B>5. </B>Select the <B>Bold Font Style</B> from the Font dialog (see Figure
	1.20).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig24.gif')"><B>FIGURE 1.19</B></A> <I>Clicking an
... button opens a Property dialog.</I></P>
<P><A HREF="javascript:popUp('01fig25.gif')"><B>FIGURE 1.20</B></A> <I>The Font dialog
appears when you need to change the Font property of any control.</I></P>
<P><B>Improve the TextBox</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Select the TextBox.
	<P>
	<DT></DT>
	<DD><B>2. </B>Scroll down the Properties window to the <B>MultiLine</B> property.
	Set it to <B>True</B> as shown in Figure 1.21.
	<P>
	<DT></DT>
	<DD><B>3. </B>Keep scrolling down the TextBox properties to the <B>ScrollBars</B>
	property. Set it to <B>2-Vertical</B> (see Figure 1.22).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig26.gif')"><B>FIGURE 1.21</B></A> <I>Set the MultiLine
property to True to make the text in the TextBox wrap.</I></P>
<P><A HREF="javascript:popUp('01fig27.gif')"><B>FIGURE 1.22</B></A> <I>If you set
ScrollBars to 2-Vertical, up/down scrollbars appear. 3-Horizontal show sideways scrollbars,
and 4-Both show scroll bars both ways.</I></P>

<DL>
	<DT><I></I></DT>
	<DD><B>4. </B>Scroll to the <B>Text</B> property and delete the text Text1 from the
	drop-down list (highlight it and press Delete).
	<P>
	<DT></DT>
	<DD><B>5. </B>Increase the vertical size of the TextBox a small amount to accommodate
	the capability to display multiple lines of text.
	<P>
</DL>

<P><B>Restrict resizing and assign a title to the form</B>

<DL>
	<DT></DT>
	<DD><B>1. </B>Click the form. Be careful not to click any ActiveX control on the
	form; otherwise, you'll get the properties for the control rather than the form in
	the Properties window.
	<P>
	<DT></DT>
	<DD><B>2. </B>Select the <B>BorderStyle</B> property and set it to <B>3-Fixed Dialog</B>
	(see Figure 1.23).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig28.gif')"><B>FIGURE 1.23</B></A> <I>Setting the
BorderStyle property to 3-Fixed Dialog makes it so that the form can't be resized.
Also, only the Close (&yen;) button is shown in the title bar.</I></P>

<DL>
	<DT><I></I></DT>
	<DD><B>3. </B>In the Properties window, set the form's <B>Caption</B> property to
	<B>First App</B>.
	<P>
	<DT></DT>
	<DD><B>4. </B>Save your work by choosing <B>Save Project</B> from the <B>File</B>
	menu. Then run the code by pressing F5 (see Figure 1.24).
	<P>
</DL>

<P><A HREF="javascript:popUp('01fig29.gif')"><B>FIGURE 1.24</B></A> <I>Your first
application lets you view months and the present time, as well as display a secret
message that users can view by scrolling through a TextBox.</I></P>
<P>Congratulations! You've made a very powerful program in Visual Basic by using
the tools and building blocks that the language provides. Granted, a lot is going
on behind the scenes that we might have covered in more detail, but you'll get more
in-depth coverage in the following chapters.</P>
<P>For more information about the intrinsic controls that come with VB, read Chapter
4, &quot;Using the Intrinsic Controls.&quot; To learn how to get around the VB IDE,
read Chapter 3, &quot;Working in the Visual Basic 6 Programming Environment.&quot;
To get a clear understanding of properties, methods, and events, and how they relate
to Visual Basic programming, read Chapter 6, &quot;Working with Properties, Methods,
and Events.&quot; Finally to get an in-depth view of the Timer control, read Chapter
16, &quot;Working with Time and Timers.&quot;</P>
<H1></H1>
<CENTER>
<P>
<HR>
<A HREF="fm.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/fm/fm.htm"><IMG SRC="previous.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/previous.gif" WIDTH="128" HEIGHT="28"
ALIGN="BOTTOM" ALT="Previous chapter" BORDER="0"></A><A HREF="ch02.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/ch02/ch02.htm"><IMG
SRC="next.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/next.gif" WIDTH="128" HEIGHT="28" ALIGN="BOTTOM" ALT="Next chapter"
BORDER="0"></A><A HREF="index-38.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/index.htm"><IMG SRC="contents.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/contents.gif" WIDTH="128"
HEIGHT="28" ALIGN="BOTTOM" ALT="Contents" BORDER="0"></A></P>

<P>&copy; <A HREF="copy.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/copy.htm">Copyright</A>, Macmillan Computer Publishing. All
rights reserved.
</CENTER>

</BODY>

</HTML>
