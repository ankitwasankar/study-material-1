<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
<SCRIPT LANGUAGE="JavaScript">

<!--

function popUp(pPage) {
 var fullURL = document.location;
 var textURL = fullURL.toString();
 var URLlen = textURL.length;
 var lenMinusPage = textURL.lastIndexOf("/");
 lenMinusPage += 1;
 var fullPath = textURL.substring(0,lenMinusPage);
 popUpWin = window.open('','popWin','resizable=yes,scrollbars=no,width=525,height=394');
 figDoc= popUpWin.document;
 zhtm= '<HTML><HEAD><TITLE>' + pPage + '</TITLE>';
 zhtm += '</head>';
 zhtm += '<BODY bgcolor="#FFFFFF">';
 zhtm += '<IMG SRC="' + fullPath + pPage + '">';
 zhtm += '<P><B>' + pPage + '</B>';
 zhtm += '</BODY></HTML>';
 window.popUpWin.document.write(zhtm);
 window.popUpWin.document.close();
 // Johnny Jackson 4/28/98
 }

//-->
                                                                
</SCRIPT>
<link rel="stylesheet" href="ebooks.css" tppabs="http://pbs.mcp.com/includes/stylesheets/ebooks.css">

	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
	<TITLE>Using Visual Basic 6 -- Appendix C -- Glossary</TITLE>
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<CENTER>
<H1><IMG SRC="que.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/que.gif" WIDTH="171" HEIGHT="66" ALIGN="BOTTOM" BORDER="0"><BR>
Using Visual Basic 6</H1>
</CENTER>
<CENTER>
<P><A HREF="apb.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/apb/apb.htm"><IMG SRC="previous.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/previous.gif" WIDTH="128" HEIGHT="28"
ALIGN="BOTTOM" ALT="Previous chapter" BORDER="0"></A><A HREF="index-38.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/index.htm"><IMG
SRC="contents.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/contents.gif" WIDTH="128" HEIGHT="28" ALIGN="BOTTOM" ALT="Contents"
BORDER="0"></A> 
<HR>

</CENTER>
<CENTER>
<H1>Glossary</H1>
</CENTER>
<P><B>Active Server Page (ASP)</B> A Web-based application containing a combination
of HTML, ActiveX components, and VBScript code. Active Server Pages can be used to
dynamically provide different content for different users when viewed through each
user's Web browser.</P>
<P><B>ActiveX</B> A set of technologies based on Microsoft's Component Object Model
(COM) for creating reusable binary objects.</P>
<P><B>ActiveX component</B> (Formerly OLE automation server) A physical file that
contains classes from which objects can be defined. ActiveX components generally
have file extensions .exe, .dll, or .ocx.</P>
<P><B>ActiveX control</B> An object that can be placed on a form so that users can
interact with applications. ActiveX controls have events, properties, and methods
and can be incorporated into other controls. ActiveX controls have an .ocx file extension.</P>
<P><B>ActiveX Data Objects (ADO)</B> An object model--including data connection,
data manipulation, and recordset objects--used for data access. ADO is an OLE DB
consumer.</P>
<P><B>ActiveX DLL</B> An ActiveX in-process component, an object that requires another
application's process space. See also <I>ActiveX EXE</I>.</P>
<P><B>ActiveX document</B> A Visual Basic application that can be viewed within a
container application such as Microsoft Internet Explorer (version 3.0 or later)
or Microsoft Office Binder. ActiveX documents don't require HTML code in order to
be viewed or manipulated.</P>
<P><B>ActiveX EXE</B> An ActiveX out-of-process component, an object that runs in
its own address space. See also <I>ActiveX DLL</I>.</P>
<P><B>add-in</B> A software component that extends Visual Basic's capability. Some
add-ins, such as the Visual Basic Class Builder Utility add-in, are included with
Visual Basic; many more are available from third-party sources. Within the IDE, you
use the Add-In Manager to install and remove add-ins.</P>
<P><B>ambient property</B> A property that a child object can assume during runtime.
Ambient properties are controlled by a container object and are used so that objects
within the container can take characteristics of the container.</P>
<P><B>ANSI</B> The acronym for <I>American National Standards Institute</I>. ANSI
provides a unique integer code for a character set that includes 256 characters.
ANSI includes the 128-character ASCII character set and contains international letters,
symbols, and fractions.</P>
<P><B>API</B> The acronym for <I>Application Programming Interface</I>. An API is
a set of functions that are exposed by a software module and provide access to the
services the module provides. In Windows, the API is a set of core functions that
allow direct access to many operating system-provided services, such as window management
and printer services. The Windows API consists of three main files: user32.dll, gdi32.dll,
and kernel32.dll.</P>
<P><B>application</B> One or more software components that do some action or provide
some service, a compiled Visual Basic project. Other examples of applications include
Microsoft Visual Basic and Microsoft Word. Also known as a <I>program</I>.</P>
<P><B>argument</B> Data sent to a procedure. An argument can be a constant, a variable,
or some other expression.</P>
<P><B>array</B> An indexed group of related data. Elements within an array must be
of the same data type (such as all integers or all strings), and each element has
a unique, sequential index number.</P>
<P><B>ASCII</B> The acronym for <I>American Standard Code of Information Interchange</I>.
ASCII provides a unique integer code for a character set that includes 128 numbers,
letters, and symbols found on a standard U.S. keyboard. A subset of the ANSI character
set. In Visual Basic, the ASC function returns the ASCII value of a character.</P>
<P><B>authentication</B> The process by which the identity of an ActiveX control
is proven to a Web browser. During authentication, the Web browser determines that
the control meets a predetermined set of criteria, in essence, verifying that the
control hasn't been tampered with and that it will behave in the way the control's
developer originally intended.</P>
<P><B>automation server</B> See <I>ActiveX component</I>.</P>
<P><B>bind</B> To connect an object to a data source. See <I>bound control</I>.</P>
<P><B>bit</B> The smallest amount of data storage available on a computer. A bit
is either 0 or 1.</P>
<P><B>bookmark</B> A marker for a specific location. A bookmark can be a specific
record in a database, a line of code within a project, or a specific Web page.</P>
<P><B>Boolean</B> A binary data type. Boolean values are 16-bit (2-byte) values that
can hold the True or False constants or their equivalents (-1 and 0). The Boolean
data type uses the prefix bln but doesn't have a type-declaration character.</P>
<P><B>bound control</B> A data-aware control attached to a database through a Data
control. At runtime, when users manipulate the Data control by changing from one
row of the database to the next, the bound control changes to display the data found
in the columns of the new row. If users change the data stored in a row, the new
data is saved to the database when the users switch to a new row.</P>
<P><B>breakpoint</B> A specific line within a block of code where program execution
automatically stops (during runtime). Breakpoints are user selectable. You can toggled
them on and off during design time by pressing F9.</P>
<P><B>browser</B> An application used to browse content on the Web. Browsers, such
as Microsoft Internet Explorer, can show HTML pages, Active Server Pages, and various
other types of content.</P>
<P><B>buffer string</B> A temporary holding location in memory for data that will
be parsed or otherwise modified. For example, if an application were to take two
string values from a user and then extract a specific section from their sum, each
value would be placed in a buffer string. Then these would be concatenated (and placed
into another buffer string) before the desired value is parsed from the input data.</P>
<P><B>Byte</B> An 8-bit data type that can hold numbers in the range of 0-255. The
Byte data type uses the prefix byt but doesn't have a type-declaration character.
Bytes are the basis for all Visual Basic data types; for example, the Single data
type is a 4-byte (32-bit) number.</P>
<P><B>CAB file</B> Short for <I>cabinet file</I>. A group of files compressed into
one larger file to conserve disk space. CAB files are often used to distribute applications.
During installation, the Setup program extracts files from the CAB file and copies
them to the appropriate location on the hard disk.</P>
<P><B>call</B> To transfer control of an application to a different procedure. Procedures
are sometimes called with the Call<B> </B>keyword.</P>
<P><B>child object</B> An object contained within another object (its parent). See
<I>object</I>.</P>
<P><B>class</B> A template used to create user-defined objects. A class defines an
object's properties and methods. All instances created from the class use the properties
and methods defined by the class.</P>
<P><B>class module</B> A module that defines a class. See <I>module</I>.</P>
<P><B>code block</B> A selection of code. A code block usually consists of all lines
necessary to complete a specific task within the application.</P>
<P><B>COM</B> The acronym for <I>Component Object Model</I>. A standard by which
applications can expose objects to the system for use by other applications and,
conversely, by which applications can use objects that have been exposed by other
applications.</P>
<P><B>compile</B> To prepare code for execution. In Visual Basic, code can be compiled
into either P-code (which results in faster compilation) or native code (which results
in faster execution). The type of compilation can be selected from the Compile page
of the Project Properties dialog box.</P>
<P><B>component object</B> An object that supports automation through exposed properties
and methods. Examples of component objects include ActiveX controls, ActiveX documents,
and ActiveX code components.</P>
<P><B>compressed file</B> A file that has been modified to take up less space when
stored on the hard drive. Generally, compressed files can't be opened or manipulated
until they're decompressed.</P>
<P><B>concatenate</B> To join two or more strings in an expression.</P>
<P><B>conditional statement</B> A logical statement involving a comparison, which
yields a Boolean (True or False) value.</P>
<P><B>constant</B> A variable or object whose value doesn't change.</P>
<P><B>constituent control</B> A control that's encapsulated inside another ActiveX
control to provide some of the constituent control's functionality when using the
ActiveX control.</P>
<P><B>context-sensitive help</B> Information about a specific concept or object within
in an application that users can easily find. To access context-sensitive help, press
Shift+F1 or click the What's This? help (question mark) button; then select the confusing
item.</P>
<P><B>control</B> An object that can be manipulated at design time or runtime to
present or change data. Controls are manipulated by changing properties during design
time and by calling methods or responding to events during runtime.</P>
<P><B>control array</B> An indexed group of similar controls that are of the same
type and have the same name. Individual elements within the control array are identified
by a unique index number.</P>
<P><B>coolbar</B> A type of toolbar characterized by flat buttons that raise when
the mouse pointer moves over them and, when clicked, they depress. This is the type
of toolbar found in the Visual Basic IDE. The Coolbar object is used to create user-modifiable
coolbars.</P>
<P><B>Currency</B> A numeric data type particularly suited to store money data. Currency
values are 64-bit (8-byte) integers, scaled by 10,000 to provide four digits to the
right of the decimal point. Currency values use the prefix cur and the type-declaration
character @ (the <I>at</I> sign).</P>
<P><B>data consumer</B> An object that's bound to a data provider. A data consumer
lets programmers connect to a data source and manipulate information within it.</P>
<P><B>data member</B> Private variable of a class. Data members are seen only by
the class that defines them.</P>
<P><B>data provider</B> A data source that exposes information for data access, such
as Microsoft Jet, Microsoft SQL, or Oracle.</P>
<P><B>data type</B> A set of rules describing a specific set of information, including
the allowed range and operations and how information is stored. Data types in Visual
Basic include Integer, String, Boolean, and Variant.</P>
<P><B>Date</B> A numeric data type used to represent dates. Date values are 64-bit
(8-byte) floating-point numbers that represent dates from January 1, 100, to December
31, 9999, and times from 0:00:00 to 23:59:59. The Date data type uses the prefix
dat but doesn't have a type- declaration character.</P>
<P><B>DCOM</B> The acronym for <I>Distributed Component Object Model</I>. An extension
of COM by which applications can expose objects to computers across a network, and,
conversely, by which computers can use objects that have been exposed from across
a network.</P>
<P><B>Decimal</B> A numeric data type, ranging from 0 to 28, used to specify the
number of digits to the right of the decimal point. Decimal values are 96-bit (12-byte)
unsigned integers, so with a scale of 28, the largest possible Decimal value is +/-7.9228162514264337593543950335;
with a scale of 0, +/-79,228,162,514,264, 337,593,543,950,335. The Decimal data type
must be used with a Variant, uses the prefix dec, and doesn't have a type-declaration
character.</P>
<P><B>deployment</B> The period during which an application is distributed for use
by customers or by other applications.</P>
<P><B>design time</B> The time spent creating forms and writing functions during
the creation of an application. Forms and functions can be altered only during design
time. See <I>runtime</I>.</P>
<P><B>designer</B> An object or application that's used as a basis for creating more
advanced objects or applications.</P>
<P><B>destination system</B> The system on which an application will be installed
and used.</P>
<P><B>device independence</B> The concept that software components don't directly
control hardware devices. Device- independent software controls hardware by manipulating
objects that abstract and expose the functionality of a class of hardware devices.</P>
<P><B>DLL</B> The acronym for <I>dynamic link library</I>.<B> </B>An executable file
containing a set of functions that other applications can call during runtime. DLLs
generally don't have a graphical user interface; instead, they're usually accessed
by applications without user intervention.</P>
<P><B>Document Object Model (DOM)</B> A method for storing information so that a
document can display its content in a variety of in-place views.</P>
<P><B>domain name</B> A unique name that identifies an Internet or network server,
such as www.mcp.com or www.microsoft.com. Domain names are actually text representations
of numeric IP addresses and must be registered with international authorities such
as InterNIC.</P>
<P><B>Double</B> A numerical data type. Double values are 64-bit (8-byte) floating-point
number. Double values use the prefix dbl and the type-declaration character # (the
pound sign).</P>
<P><B>dynamic</B> A changing object or expression.</P>
<P><B>Dynamic HTML (DHTML)</B> A series of extensions to the HTML language that enable
an HTML page to be dynamically modified. A group of HTML pages that work together
can be used to create a Web-based application. DHTML applications contain objects
and events and are processed on the client within the Web browser.</P>
<P><B>dynaset</B> A recordset that can include data from one or more tables from
a database. A dynaset can be used to view or modify data contained in the underlying
database.</P>
<P><B>early binding</B> A technique that an application uses to access an object.
In early binding, objects are defined from a specific class. Early binding is often
faster than late binding because the application doesn't have to interrogate the
object at runtime to determine the object's properties and methods. In Visual Basic,
early binding enables the AutoComplete features to work correctly.</P>
<P><B>Easter egg</B> A hidden signature within an application, included by programmers
to demonstrate that they wrote it. Activating Easter eggs often requires a complex
set of user actions.</P>
<P><B>element</B> A single member of an array. Each element of an array is assigned
a unique index value, which is used to locate and manipulate specific elements in
an array.</P>
<P><B>encapsulation</B> The act of placing code or data in a location, such as a
module or control, that's isolated from the rest of an application. Encapsulation
hides both the implementation details and the internal complexity of an object but
still enables the application to use functions contained within it.</P>
<P><B>enterprise computing</B> A computing model in which multiple users access applications
and data stored on a server. In an enterprise computing environment, multiple servers
and multiple networks can be linked together. This is an advanced form of general
networking in which users can share information directly, without the use of a dedicated
server.</P>
<P><B>entry point</B> The starting point in the code of an application. In Visual
Basic 6, entry points include a Sub Main procedure or a Form_Load event.</P>
<P><B>event</B> A signal fired by the operating system in response to a user action.
For example, when a user clicks (and holds down) a mouse button, a MouseDown event
is sent by the operating system. The active application intercepts this signal and
executes the code attached to the MouseDown event.</P>
<P><B>event-driven programming</B> A method of programming in which blocks of code
are run as users do things or as events occur while a program is running. This varies
from procedural programming, in which code blocks are contained within a module and
called from other procedures.</P>
<P><B>event procedure</B> The place in a project where code is written to respond
to an event. Event procedures are named by joining the object name with the event
name, such as cmdButton_Click().</P>
<P><B>extensibility</B> The capability to extend an object's or application's functionality
through the use of a programming language or an add-in.</P>
<P><B>field</B> A discrete element of a record in a database, a column in a database--for
example, a database of music CDs might have many fields, including the CD title,
artist name, and CD label.</P>
<P><B>file</B> A unit of storage on an external storage device such as a hard disk
retrievable block of data. Usually stored on a hard drive, files can contain executable
programs, word processor documents, or bitmap picture files. In Visual Basic, each
form, module, and project are saved as a file.</P>
<P><B>file handle</B> A structure that identifies and provides access to a file on
disk.</P>
<P><B>File Transfer Protocol (FTP)</B> A method used to transfer files between computers,
across a network, or over the Internet by using the TCP/IP network protocol.</P>
<P><B>flag</B> A Boolean (True or False) variable used to determine whether a condition
has been met or an event has occurred. For example, the flag <I>blnPasswordSet</I>
would be set to True when a password is set and to False when the password is cleared.</P>
<P><B>flat-file database</B> A database file in which every record contains all the
information required to describe it. Flat-file databases often contain redundant
information. For example, every record in a flat-file database of music CDs would
require multiple fields to describe the contact information for the artist's fan
club. See also <I>relational database</I>.</P>
<P><B>focus</B> The state in which an object can receive input from the mouse or
keyboard. At any given time, only one object can have focus; this object is usually
highlighted with a different color and contains the text cursor, where appropriate.</P>
<P><B>form</B> The basis of an application's graphical user interface. Forms contain
objects with which users manipulate data and otherwise control an application.</P>
<P><B>Form Designer</B> A part of the Visual Basic 6 Integrated Development Environment.
You use the Form Designer to create an application's graphical user interface by
placing objects on forms during design time. At runtime, objects appear where they
have been placed on the forms.</P>
<P><B>Form Layout window</B> A part of the Visual Basic 6 Integrated Development
Environment (MDI version only). The Form Layout window is used to position an application's
forms during design time, visually rather than through code. At runtime, forms appear
where they have been placed in the Form Layout window.</P>
<P><B>function</B> A procedure, beginning with Function <I>functionname</I>() and
ending with End Function,<B> </B>that returns a value to the calling procedure when
it's complete.</P>
<P><B>Get</B> A Visual Basic keyword, the part of a Property procedure that gets
the value of a property.</P>
<P><B>global variable</B> A variable that can be accessed from anywhere within a
program and maintains its value while the program is being run. Global variables
are defined within code modules with the Public keyword.</P>
<P><B>gotcha</B> A detail that can cause problems when overlooked.</P>
<P><B>graphical user interface (GUI)</B> A set of forms and objects that enable users
to view and manipulate data and otherwise control an application. A graphical user
interface is the part of the application that sits between users and an application's
underlying procedures.</P>
<P><B>hard-coding</B> The act of setting a value by directly coding it into the application
without allowing for a way to easily change it. For example, the hard-coded statement
Set picPictureBox.Picture= LoadPicture(&quot;C:\windows\bubbles.bmp&quot;) won't
work if the file bubbles.bmp is moved from the Windows folder, and it doesn't allow
users to change the image loaded into the PictureBox. To avoid this situation, it
would be better to define a string variable that contains the image's path and filename
and then provide tools (such as an Open common dialog box) to help users search for
it.</P>
<P><B>header</B> A commented section of code at the beginning of a procedure, usually
placed before the Sub or Function statement. The header describes the purpose of
the procedure, specifies all variables declared within it, and can contain information
identifying the developer(s) who wrote it.</P>
<P><B>help compiler</B> An application used to combine information into a help file.</P>
<P><B>help context ID</B> A number that defines a position within a help file. The
Windows help system uses context IDs to move to new locations within help files as
users navigate through the help system.</P>
<P><B>high-level language</B> A computer language, such as Visual Basic, that can
simplify coding by enabling programmers to write code with highly developed functions
and keywords. See also <I>low-level language</I>.</P>
<P><B>hovering</B> The act of holding the mouse pointer over an object. For example,
a ToolTip can appear when the pointer hovers over a command button.</P>
<P><B>HTML</B> The acronym for <I>Hypertext Markup Language</I>. HTML files are plain
text files that include data and instructions for presenting it. When viewed with
an Internet browser, an HTML file can contain text, multiple colors, and graphics.
Using HTML files, which you can link via hyperlinks, is the primary way to display
information on the Web.</P>
<P><B>HTML element</B> A portion of an HTML page, such as a graphic, a CommandButton,
or a table, that may or may not be created dynamically using Visual Basic.</P>
<P><B>HTTP</B> The acronym for <I>Hypertext Transfer Protocol</I>. An Internet protocol
used by Web browsers to exchange information and to receive and present data to the
browser's user.</P>
<P><B>hyperlinks</B> References between documents that, when selected by users, call
and display other documents.</P>
<P><B>IDE</B> The acronym for <I>Integrated Development Environment</I>. The IDE
includes all the tools necessary to create applications with Visual Basic 6, such
as the Form Layout window and the Object Browser.</P>
<P><B>index</B> A unique number that identifies a single element in an array or a
control array.</P>
<P><B>index (database)</B> A cross-reference of fields across the tables of a database
that enables faster retrieval to specific records in the database.</P>
<P><B>inheritance</B> The act of passing property values from a class to objects
created by the class.</P>
<P><B>initialization</B> The act of setting the value of a variable or expression
to a specific starting value.</P>
<P><B>input box</B> A dialog, created with the InputBox() statement, that waits for
users to enter text or click a button. When users close an input box, a string containing
the contents of the text box is returned to the calling procedure.</P>
<P><B>instance</B> A single object created from a class. Also, a variable is an instance
of a data type.</P>
<P><B>Integer</B> A numerical data type. Integer values are 16-bit (2-byte) numbers
within the range of -32,768 to 32,767. Integer values use the prefix int and the
type-declaration character % (the percent sign).</P>
<P><B>Integrated Development Environment (IDE)</B> See <I>IDE</I>.</P>
<P><B>Internet Information Server (IIS)</B> Microsoft's network file and application
server. IIS is primarily used to support transmission of HTML pages using the HTTP
protocol.</P>
<P><B>Internet service provider (ISP)</B> A company that provides access to the Internet
via a dial-up or direct connection.</P>
<P><B>interpreted language</B> A language, such as Visual Basic, which doesn't enable
compilation to native code. When an application created with an interpreted language
is run, the application's code is passed through an interpreter, which modifies the
code into a form the computer can understand and execute.</P>
<P><B>intrinsic ActiveX control</B> An ActiveX control included with Visual Basic,
such as the CommonDialog or Winsock control.</P>
<P><B>intrinsic control</B> Also known as <I>standard controls</I>. A control included
with Visual Basic, such as the Label or CommandButton controls. Intrinsic controls
can't be removed from the ToolBox.</P>
<P><B>intrinsic function</B> A predetermined function included with Visual Basic.
Examples of intrinsic functions include the type conversion functions, such as CStr(),
which usually converts a numeric expression to a string value.</P>
<P><B>JScript</B> The Microsoft implementation of the JavaScript scripting language.</P>
<P><B>key field</B> The field in a database table that uniquely describes each record.
For example, the key field in a database table of employees might be the employee
number. Also known as the <I>primary key</I>.</P>
<P><B>keycode</B> A constant value that represents a keystroke. Keycodes are sent
to the application when a key on the keyboard is pressed; they are used to determine
which key the user pressed.</P>
<P><B>keyword</B> A word (function, constant, or command) recognized by Visual Basic.
You can't use keywords to name user-defined structures such as variables or constants
(see <I>name collision)</I>.</P>
<P><B>language independent</B> Any file, object, or other structure that can be used
by any programming language. For example, the Windows API can be used by Visual Basic,
C, or Visual C++.</P>
<P><B>late binding</B> A method of using an object by an application. In late binding,
objects are defined as Object. Late binding is slower than early binding because
the application must interrogate the object to determine its properties and methods.</P>
<P><B>Let</B> A Visual Basic keyword. The part of a Property procedure that assigns
a value to a property. Also used to assign a value to a variable, such as Let x =
10.</P>
<P><B>literal statement</B> Any expression consisting of ASCII characters, enclosed
in quotation marks, and used literally in a procedure. For example, if the code MsgBox(&quot;This
is a button&quot;) were contained within the Click event of a command button, a dialog
box containing the text This is a button would appear onscreen when the user clicks
the button. Also known as a <I>literal </I>or <I>string literal</I>. Literals are
also numbers used directly within code.</P>
<P><B>local variable</B> A variable defined and used only within a specific procedure
in an application. Other procedures can't see local variables.</P>
<P><B>Long</B> A numerical data type. Long (long integer) values are 32-bit (4-byte)
numbers within the range of -2,147,483,648 to 2,147,483,647. Long values use the
prefix lng and the type-declaration character &amp; (the ampersand).</P>
<P><B>loose typing</B> Defining and using variables without declaring or following
a specific data type, such as when Variant values are used. This can lead to type-mismatch
errors at compile time because expressions or values can encounter data types that
they don't support. See also <I>strict</I> <I>typing</I>.</P>
<P><B>low-level language</B> A computer language, such as machine language, that
requires a programmer to write code with less developed instructions so that the
computer can directly understand.</P>
<P><B>make</B> To compile code into a standard application (EXE), dynamic link library
(DLL), or ActiveX control (OCX).</P>
<P><B>member functions</B> See <I>method</I>.</P>
<P><B>menu</B> A list of user-selectable items within a program. Also, a control
used to add menus to an application.</P>
<P><B>menu bar</B> The part of the Visual Basic IDE, located directly below the title
bar, that lets you select functions and commands included with the application. By
using the Menu Editor, you can add menu bars to applications created with Visual
Basic.</P>
<P><B>message box</B> A dialog, created with the MsgBox() function, that displays
a message for users. Message boxes include one or more command buttons that enable
users to clear the dialog or respond with an answer to a query. A message box returns
an Integer value describing which button was selected.</P>
<P><B>method</B> A procedure, associated with a class, that manipulates an object.
For example, one method of a command button is SetFocus, which moves the focus to
the command button that invoked the method.</P>
<P><B>module</B> A block of code saved as a file with the extension .bas. Modules
contain declarations and may or may not contain procedures.</P>
<P><B>name collision</B> An error that occurs when different structures are named
identically. For example, if a variable were named string, a name collision would
occur because the word String is a Visual Basic keyword. Name collisions also occur
when identically named variables are defined within the same scope.</P>
<P><B>naming convention</B> A specific style used to reference objects in code. See
<I>variable prefix</I> and <I>variable suffix</I>.</P>
<P><B>native code</B> Binary code that can be directly understood and executed by
the computer's processor system. Visual Basic can be set to compile to native code
by setting options on the <B>Compile</B> page of the Project Properties dialog.</P>
<P><B>nesting</B> The act of including Loop<B> </B>or Select Case<B> </B>statements
within similar statements. For example, a Do...Loop can be placed within one case
of the Select Case statement. Then the repetitive action controlled by the Do...Loop
executes only if the proper value is passed to the Select Case statement.</P>
<P><B>object</B> A discrete combination of code and data, such as a ListBox or CommandButton,
that can be manipulated. Objects contain properties and methods and are defined by
a class.</P>
<P><B>Object Browser</B> A part of the Visual Basic IDE, the Object Browser enables
you to see all the objects (and all the properties, methods, and events of each object)
available for use on the system. To access the Object Browser, press F2, choose <B>Object
Browser</B> from the <B>View</B> menu, or click the Object Browser icon on the toolbar.</P>
<P><B>object-oriented programming (OOP)</B> A programming style and a type of programming
language that involves the use of software modules called <I>objects</I> to encapsulate
data and processing.</P>
<P><B>OLE automation server</B> See <I>ActiveX component</I>.</P>
<P><B>OLE DB</B> A Microsoft technology that allows access to data from various,
multiple data sources.</P>
<P><B>Option Explicit</B> A Visual Basic keyword, the use of which forces each variable
or expression in an application to be defined with a specific data type through the
use of the Dim, Private, Public, ReDim, or Static keywords. Using Option Explicit
can help reduce the likelihood of typographical errors when typing the names of existing
variables. If Option Explicit isn't used, undefined variables are automatically defined
as Variants.</P>
<P><B>P-code</B> Code that can't be directly understood and executed by the Windows
operating system. In Visual Basic, code compiled to P-code is interpreted to native
code at runtime. When you are creating an executable file, you can force Visual Basic
to compile to P-code by setting the appropriate options in the <B>Compile</B> tab
of the Project Properties dialog box.</P>
<P><B>parameter</B> A numeric or string value that can be changed to modify an expression.</P>
<P><B>parse</B> To use string manipulation functions to change user-inputted string
information. For example, the string &quot;Microsoft+Visual&amp;Basic&amp;6.0&quot;
might be parsed into company (&quot;Microsoft&quot;) and application (&quot;Visual
Basic 6.0&quot;) strings.</P>
<P><B>pattern wildcards</B> Characters such as the asterisk (*) or question mark
(?) that cause a query to broaden its result or that enable an expression to restrict
inputted data. For example, a database query on all records containing *ain would
return all records that end in ain, such as <I>Spain, train,</I> and so on. SQL databases
typically use the percent sign (%) instead of an asterisk.</P>
<P><B>persistence</B> The concept of keeping an object's data stored in memory or
on disk.</P>
<P><B>pixel</B> The smallest and most commonly used screen-dependent measure of screen
distance. Objects on a form, however, generally aren't sized and located via pixels
because the number of pixels on a screen varies for different resolutions and for
different types of display systems. See <I>twip</I>.</P>
<P><B>prefix</B> See <I>variable prefix</I>.</P>
<P><B>primary key</B> The field in a database table that uniquely describes each
record. For example, the primary key in a database table of employees might be the
employee number. Also known as the <I>key field</I>.</P>
<P><B>private</B> A Visual Basic keyword. Variables or procedures defined with the
Private keyword are available only in the module in which the variable or procedure
is defined.</P>
<P><B>procedural language</B> A programming language, such as Visual Basic, in which
data is manipulated by calling procedures rather than proceeding line by line through
all code contained in the application.</P>
<P><B>procedure</B> A block of code that can be called from within an application.
A procedure might be used to position objects on a form or to calculate information
from a set of user data. Various types of procedures include Functions and Subs.</P>
<P><B>program</B> See <I>application</I>.</P>
<P><B>project</B> A set of forms and modules that make up an application while it's
being developed into an application.</P>
<P><B>Properties window</B> A part of the Visual Basic IDE. This window enables you
to view and modify all the properties of a given object during design time. It's
not available during runtime.</P>
<P><B>property</B> An attribute of an object as defined by a class. For example,
one property of a command button is Caption, which is the text that appears on the
button's face.</P>
<P><B>property bag</B> An object that holds a set of property values and can restore
those values to a new invocation of an object.</P>
<P><B>property procedures</B> Procedures used to view and modify the properties of
an object, such as the Let and Get statements. The Get statement returns the value
of a private variable of an object, whereas the Let statement modifies the value
if the new value is of the correct type.</P>
<P><B>protocol</B> A formal set of rules that enable two computers to communicate
(such as the HTTP or FTP protocols) or a set of rules used to define an action such
as argument passing or creation of an object from a class. See <I>File Transfer Protocol
(FTP)</I> and <I>Hypertext Transfer Protocol (HTTP)</I>.</P>
<P><B>prototype</B> An application that simulates the behavior of another, more fully
developed application. Visual Basic is often used as a prototyping tool, for example,
to quickly develop a possible graphical user interface (GUI) for an application before
the application is developed.</P>
<P><B>Public</B> A Visual Basic keyword. Variables defined with the Public keyword
can be seen by any procedure of any module contained in the application. If a public
variable is defined within a class module, the object name must be specified to use
the variable.</P>
<P><B>query</B> A subset of a database that fits specific criteria. For example,
a query might be placed on a music CD database for all jazz CDs. The query would
return a recordset that contains only jazz CDs and no classical or rock CDs.</P>
<P><B>record</B> All the data required to describe one retrievable item in a database
and made up of one or more fields. A row in a database. For example, one record in
a music CD database would contain all the data necessary to describe the CD, including
artist, label, number of songs, and so on.</P>
<P><B>recordset</B> A set of records from a single database table that meets specific
criteria.</P>
<P><B>recursion</B> The process of a procedure calling itself.</P>
<P><B>relational database</B> A database file in which records can include pointers
to other tables that contain some of the information required to describe the record.
Relational databases can be a more efficient means of storing information. For example,
a relational database of music CDs would require only one field to describe the contact
information for the artist's fan club. This field would hold a pointer to another
table containing the fan club information for every artist in the database. Contrast
with <I>flat-file database</I>.</P>
<P><B>robust</B> A term used to describe an application that can trap and react to
errors occurring during execution. For example, a robust calculator application won't
crash when users try to divide a number by zero. Instead, users see a dialog explaining
that numbers can't be divided by zero.</P>
<P><B>round</B> To change a value to a less precise value. When rounding a value,
if the next most precise digit ends with 5 or higher, round up; otherwise, round
down. For example, if rounding to the nearest tenth, the value 1.652 would be rounded
to 1.7 because the next most precise (one hundredth) digit is 5. If rounding to the
nearest one hundredth, 1.652 would be rounded to 1.65. See <I>truncate</I>.</P>
<P><B>runtime</B> The time when the code is actually running during the creation
of an application. Forms and functions can't be altered during runtime. See <I>design
time</I>.</P>
<P><B>scope</B> An attribute of a variable or procedure that determines which sections
of which modules recognize it. There are three levels of scope: public, module, and
procedure. Variables declared with the Public keyword can be accessed by any module,
whereas variables declared within a specific module (with the Private keyword) can
be used only within that module. Variables declared within a procedure can be used
only in that procedure.</P>
<P><B>scroll buttons</B> The buttons at the top and bottom of a scrollbar that enable
users to move through the data within the object.</P>
<P><B>scrollbar</B> A window element that enables users to view more available data
when all available data can't be displayed within an object at one time.</P>
<P><B>server side</B> In a Web-based application, the part of the application run
by the server instead of the client's Web browser.</P>
<P><B>server-side components</B> In a Web-based application, the portions of the
application located on and run by the server.</P>
<P><B>Set</B> A Visual Basic keyword. The part of a Property procedure that sets
a reference to an object.</P>
<P><B>Single</B> A numerical data type. Single values are 32-bit (4-byte) floating-point
numbers, within the range of -3.402823E38 to -1.4012989E-45 for negative values and
1.401298E45 to 3.402823E38 for positive values. Single variables use the prefix sng
and the type-declaration character ! (the exclamation point).</P>
<P><B>SQL</B> The acronym for <I>Structured Query Language</I>. A set of rules that
can control many types of relational databases, including Microsoft Access and SQL
Server databases.</P>
<P><B>standard control</B> See <I>intrinsic control</I>.</P>
<P><B>standard EXE</B> A traditional executable application. A standard EXE is a
self-contained application that doesn't expose objects to the system for use by other
objects or applications.</P>
<P><B>statement</B> A section of code that fully expresses a single declaration or
action.</P>
<P><B>static variable</B> A variable, defined with the Static keyword, that maintains
its value between calls to different procedures.</P>
<P><B>step</B> The act of moving through a section of code line by line. Stepping,
used with a breakpoint, is useful in determining which line is causing a problem
in code.</P>
<P><B>strict typing</B> Always declaring and following a specific data type when
defining and using variables. This can reduce the number of errors at compile time
because expressions or values will encounter only data types that they support. Contrast
with <I>loose typing</I>.</P>
<P><B>String</B> An alphanumeric data type. String values are either variable length
(up to 2 billion characters) or fixed length (approximately 64,000 characters); longer
strings require more memory. Strings can include numbers, letters, and ASCII symbols.
String values use the prefix str and the type-declaration character $ (the dollar
sign).</P>
<P><B>Sub</B> A procedure, beginning with Sub <I>subname()</I> and ending with End
Sub,<B> </B>that doesn't return a value to the calling procedure when it's complete.</P>
<P><B>subclassing</B> The act of modifying the standard behavior of an object provided
by Windows. Visual Basic doesn't directly support subclassing.</P>
<P><B>subscript</B> The index value of an element in an array.</P>
<P><B>syntax</B> The specific method by which functions or lines of code are written.
Important elements of syntax might include spelling, spacing, and punctuation.</P>
<P><B>system modal</B> A window or dialog that holds control of the entire system
until the user responds to it.</P>
<P><B>table</B> The basic mechanism of data storage in a database, made up of tables
and rows. In a relational database, multiple tables might be used to store different
categories of related information. For example, in a music CD database, one table
might contain only artist information, whereas others might contain label information
or fan club information.</P>
<P><B>toolbar</B> A collection of buttons, contained in a strip or in a dedicated
window, that enable users to control an application.</P>
<P><B>ToolBox</B> A part of the Visual Basic 6 Integrated Development Environment
(IDE). The ToolBox contains the objects and controls available for use in an application;
objects are dragged from the ToolBox and added to forms during design time.</P>
<P><B>traverse</B> To move through records in a database, elements in an array, or
data contained within an object.</P>
<P><B>truncate</B> To shorten or reduce a string value. For example, the value This
is My String might be truncated to My String. Contrast with <I>round</I>.</P>
<P><B>twip</B> A screen-independent measure of screen distance equal approximately
to 1/1440 of an inch. Objects on a form should be sized and located by using twips
instead of pixels so that they appear similarly on various types of display systems.</P>
<P><B>type</B> The attribute of a variable that determines what kind of data it can
contain. Various types of data include Integer, Long, Variant, and String.</P>
<P><B>typecasting</B> Explicitly converting a variable or expression from one data
type to another.</P>
<P><B>type-declaration character</B> A character added to a variable's name that
determines a variable's data type. A type- declaration character can be used as a
shorthand way of automatically setting a data type when defining a variable and can
be useful when defining a local variable. For example, the type-declaration character
of the Integer data type is the percent sign (%), so an Integer variable x<I> </I>could
be automatically defined with the statement Dim x%.</P>
<P><B>type safety</B> The concept of keeping the data type of a variable or expression
correct and consistent. In Visual Basic, type safety can be forced through the use
of the Option<B> </B>Explicit<B> </B>keyword.</P>
<P><B>user control</B> A subobject of a control. User controls are properties or
methods that can be added to an object.</P>
<P><B>user-defined data types</B> A data type not intrinsic to Visual Basic and defined
by using the Type keyword, a list of declared elements, and the End Type keyword.
User-defined data types can contain one or more elements of any data type.</P>
<P><B>validation</B> The act of ensuring that data is of an appropriate format before
it's written to a database.</P>
<P><B>variable</B> A named storage location that contains data and can be modified
during runtime. Variables are generally defined to be a specific data type at design
time.</P>
<P><B>variable prefix</B> A combination of characters added to the beginning of a
variable name, used to help describe the variable throughout your code. For example,
a global variable used to accept user input might be called gInput; the prefix g
indicates that the variable is global. See also <I>naming convention</I>.</P>
<P><B>variable suffix</B> A combination of characters added to the end of a variable
name, used to define and describe the data type the variable holds. For example,
a global variable used to accept user input might be called gInput$; the suffix $
indicates that the variable contains a string value. See also <I>naming convention</I>
and <I>type-declaration character</I>.</P>
<P><B>Variant</B> A data type that can be either numeric or alphanumeric. A Variant
is automatically created when a variable is not defined to be a specific data type.
Variants don't have a type-declaration character.</P>
<P><B>VBA</B> The acronym for <I>Visual Basic for Applications</I>. Similar to but
a subset of the Visual Basic language. VBA is the programming language included with
programs such as Access and Excel. In these programs, VBA can be used to create macros.</P>
<P><B>VBScript</B> A scripting language, similar to but a subset of the Visual Basic
language, especially suited to be embedded into HTML files because it must be interpreted
by a Web browser. VBScript enables objects to be added to Web pages to accomplish
such tasks as password authentication or surveys for data collection.</P>
<P><B>Visual Basic runtime DLL</B> One of a set of files required to run an application
developed in Visual Basic. Automatically installed with Visual Basic, the runtime
DLLs must be copied to any machine on which an application is deployed.</P>
<P><B>watch</B> A variable whose value is tracked during runtime. When a watch is
set, it appears in the Watch window (part of the IDE). Watches are updated whenever
a breakpoint is reached; thus, changes to values can be seen by placing breakpoints
at specific events.</P>
<P><B>whitespace</B> When coding, the space within the code editor that doesn't contain
text, such as blank lines or tab spaces. Whitespace makes it easier to follow the
flow of code--especially more complex structures such as nested loops--within a procedure.</P>
<P><B>Wintel</B> An abbreviation for Windows/Intel, the platform used by most computer
users. Wintel refers to a computer running a version of Microsoft Windows running
on an Intel processor.</P>
<P><B>wizard</B> An application, or part of an application, that helps users complete
a difficult task. For example, Visual Basic's Data Form Wizard consists of multiple
steps, each asking for specific information required to create and bind a form to
a database.</P>
<H1></H1>
<CENTER>
<P>
<HR>
<A HREF="apb.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/apb/apb.htm"><IMG SRC="previous.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/previous.gif" WIDTH="128" HEIGHT="28"
ALIGN="BOTTOM" ALT="Previous chapter" BORDER="0"></A><A HREF="index-38.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/index.htm"><IMG
SRC="contents.gif" tppabs="http://pbs.mcp.com/ebooks/078971633X/button/contents.gif" WIDTH="128" HEIGHT="28" ALIGN="BOTTOM" ALT="Contents"
BORDER="0"></A> <BR>
</P>

<P>&#169; <A HREF="copy.htm" tppabs="http://pbs.mcp.com/ebooks/078971633X/copy.htm">Copyright</A>, Macmillan Computer Publishing. All
rights reserved.
</CENTER>


</BODY>

</HTML>
