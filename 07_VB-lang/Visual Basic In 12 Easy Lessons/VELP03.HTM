<HTML>

<HEAD>

<TITLE>Visual Basic in 12 Easy Lessons velp03.htm </TITLE>

<LINK REL="ToC" HREF="index.htm">

<LINK REL="Index" HREF="htindex.htm">

<LINK REL="Next" HREF="vel07.htm">

<LINK REL="Previous" HREF="vel06.htm"></HEAD>

<BODY BGCOLOR="#FFFFFF" 
TEXT="#000000" LINK="#0000FF" VLINK="#800080">

<A NAME="I0"></A>

<H2>Visual Basic in 12 Easy Lessons velp03.htm</H2>

<P ALIGN=LEFT>

<A HREF="vel06.htm" TARGET="_self"><IMG SRC="purprev.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Previous Page"></A>

<A 
HREF="index.htm" TARGET="_self"><IMG SRC="purtoc.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="TOC"></A>

<A HREF="vel07.htm" TARGET="_self"><IMG SRC="purnext.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Next Page"></A>


<HR ALIGN=CENTER>

<P>

<UL>

<UL>

<UL>

<LI>

<A HREF="#E68E54" >Stop &amp; Type</A>

<UL>

<LI>

<A HREF="#E69E46" >The Program's Description</A>

<LI>

<A 
HREF="#E69E47" >The Program's Action</A>

<LI>

<A HREF="#E69E48" >Close the Application</A></UL></UL></UL></UL>

<HR ALIGN=CENTER>

<A NAME="E66E9"></A>

<H1 ALIGN=CENTER>

<CENTER>

<FONT SIZE=6 COLOR="#FF0000"><B>Project 3</B></FONT></CENTER></H1>

<BR>


<A NAME="E67E12"></A>

<H2 ALIGN=CENTER>

<CENTER>

<FONT SIZE=6 COLOR="#FF0000"><B>Getting Down to Business</B></FONT></CENTER></H2>

<BR>

<BR>

<A NAME="E68E54"></A>

<H3 ALIGN=CENTER>

<CENTER>

<FONT SIZE=5 COLOR="#FF0000"><B>Stop &amp; 
Type</B></FONT></CENTER></H3>

<BR>

<P>In this lesson, you learned about all the properties and events that are possible with the form, label, text box, and command button objects. Visual Basic can handle virtually all the requirements that your 
application will need.

<BR>

<P>In this lesson, you saw the following:

<BR>

<UL>

<LI> [1b] How to set and move the focus from object to object

<BR>

<BR>

<LI> [1b] What property values exist for the application's objects

<BR>

<BR>

<LI> [1b] Which 
events Visual Basic makes possible for the objects

<BR>

<BR>

<LI> [1b] Why you sometimes must manage labels and text boxes by using the resizing and scroll bar properties

<BR>

<BR>

</UL>

<P>The project named PROJECT3.MAK contains this lesson's 
project. You should load PROJECT3.MAK and run the application so that you can follow along with the description of this project.

<BR>

<BR>

<A NAME="E69E46"></A>

<H4 ALIGN=CENTER>

<CENTER>

<FONT SIZE=4 COLOR="#FF0000"><B>The Program's 
Description</B></FONT></CENTER></H4>

<BR>

<P>Figure P3.1 shows how the PROJECT3.MAK application looks as soon as you run the program. The project contains the following objects:

<BR>

<UL>

<UL>

<P>Three labels 

<BR>

</UL></UL>

<UL>

<UL>

<P>A text 
box control that contains a vertical scroll bar

<BR>

</UL></UL>

<UL>

<UL>

<P>Two command buttons, each with its own access key

<BR>

</UL></UL>

<P>Notice that the top label contains an access key, Alt+T, that will send the focus to the text box.


<BR>

<P><B> <A HREF="p3vel01.gif">Figure P3.1. The project's opening screen.</A></B>

<BR>

<P>The purpose of this program is to request a message that you can enter in the text box. You can type a message as long or as short as you want. After you type 
the message, click the center command button or press Alt+S to send that text box message to 
the empty label below the center command button.

<BR>

<P>The label receiving the text box data resizes automatically to adjust to the size of the text. 
Therefore, if you type only a single word, the label shrinks to fit around that one word. If, instead, you type several lines of text, such as a poem, all of 
the lines of text appear in the label because the label grows to hold all the text.

<BR>

<BR>


<A NAME="E69E47"></A>

<H4 ALIGN=CENTER>

<CENTER>

<FONT SIZE=4 COLOR="#FF0000"><B>The Program's Action</B></FONT></CENTER></H4>

<BR>

<P>Now type the words <B>Visual Basic</B> in the text box. Press Alt+S to send the contents of the text box to the 
label at the bottom of the screen. The label shrinks to hold the two words, as shown in Figure P3.2.

<BR>

<P><B> <A HREF="p3vel02.gif">Figure P3.2. Watch how the label resizes.</A></B>

<BR>

<P>Obviously, the command button triggers an event that takes 
all the text in the text box and sends a copy of it to the label at the bottom of the screen. You have yet to learn Visual Basic coding commands, so I'll save the discussion of event procedure 
code for the next unit.

<BR>

<P>The resizing label at the 
bottom of the screen contains the following Property window settings:

<BR>

<UL>

<UL>

<P>AutoSize: True

<BR>

</UL></UL>

<UL>

<UL>

<P>WordWrap: True

<BR>

</UL></UL>

<P>If the AutoSize property is not set to True, the label does not automatically 
shrink to fit the small text box value assigned to the label. Likewise, when you enter a larger message in the text box and press Alt+S to send it to the lower label, the 
label does not grow to accommodate the larger message. The WordWrap value of True 
ensures that the label grows vertically instead of expanding horizontally as a long, one-line label.

<BR>

<P>Try a different message. Press Alt+T to send the focus back to the text box. Press the Backspace key to erase the two words currently in the text 
box. Enter the following beautiful poem written several hundred years ago by a composer of lovely 
symphonies. (Okay, so <I>I</I> wrote the poem, but it is beautiful if you ask me.)

<BR>

<P><I>Visual Basic is like music,</I>

<BR><I>ringing in my 
ears.</I>

<BR><I>When I think of the things it does,</I>

<BR><I>my eyes fill up with tears.</I>

<BR>

<P>Press Alt+S to send the poem to the label. See how fast the label expands vertically to hold the full message. Figure P3.3 shows what your screen 
should look like.

<BR>

<P><B> <A HREF="p3vel03.gif">Figure P3.3. The label grows as large as </B><B>necessary.</A></B>

<BR>

<P><FONT COLOR="#FF8000"><B><I>***Begin Note***</I></B></FONT>

<BLOCKQUOTE>

<BLOCKQUOTE>

<HR ALIGN=CENTER>

<BR>


<NOTE><B>Note: </B>If you pressed Enter at the end of each poem line, your screen will match the one shown in Figure P3.3. Otherwise, your poem will be squeezed together a bit more than how it appears in Figure P3.3.</NOTE>

<BR>

<HR ALIGN=CENTER>


</BLOCKQUOTE></BLOCKQUOTE>

<P><FONT COLOR="#FF8000"><B><I>***End Note***</I></B></FONT>

<P><FONT COLOR="#FF8000"><B><I>***Begin Warning***</I></B></FONT>

<P><B>Warning: </B>Visual Basic is extremely sensitive. If you cringe when you read the author's 
poetry, Visual Basic will refuse to<A NAME="I2"></A> work for you ever again.

<P><FONT COLOR="#FF8000"><B><I>***End Warning***</I></B></FONT>

<BR>

<A NAME="E69E48"></A>

<H4 ALIGN=CENTER>

<CENTER>

<FONT SIZE=4 COLOR="#FF0000"><B>Close the 
Application</B></FONT></CENTER></H4>

<BR>

<P>Until this lesson, you would not have been able to place a label that resized at runtime to fit automatically whatever text it received. Look again at the screen. You will see another trick taught by this 
lesson: You can send the focus to the text box 
by pressing the access key (Alt+T) for the label just above the text box. The only way to send the focus to the text box is to ensure that the TabIndex property for the label is one less than the TabIndex 
property for the text box. When Visual Basic 
realizes that the access key sends the focus to a label that cannot receive the focus, Visual Basic sends the focus to the next control as determined by the order of the objects' TabIndex values.

<BR>

<P>You 
can now exit the application and exit Visual Basic. Take a rest because you will begin writing your first Visual Basic textual code in the next unit.

<P ALIGN=LEFT>

<A HREF="vel06.htm" TARGET="_self"><IMG SRC="purprev.gif" WIDTH = 32 HEIGHT = 32 BORDER = 
0 ALT="Previous Page"></A>

<A HREF="#I0" TARGET="_self"><IMG SRC="purtop.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Page Top"></A>

<A HREF="index.htm" TARGET="_self"><IMG SRC="purtoc.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="TOC"></A>

<A 
HREF="vel07.htm" TARGET="_self"><IMG SRC="purnext.gif" WIDTH = 32 HEIGHT = 32 BORDER = 0 ALT="Next Page"></A>


</BODY></HTML>







 
